{"version":3,"sources":["telescope:notifications/lib/herald.js","telescope:notifications/lib/helpers.js","telescope:notifications/lib/custom_fields.js","telescope:notifications/lib/notifications.js","telescope:notifications/lib/callbacks.js","telescope:notifications/lib/modules.js","telescope:notifications//Applications/MAMP/websites/stewardsof/packages/telescope-notifications/package-tap.i18n","telescope:notifications/lib/server/notifications-server.js","telescope:notifications/lib/server/routes.js","telescope:notifications/lib/server/templates/emailAccountApproved.handlebars","telescope:notifications/lib/server/templates/emailNewComment.handlebars","telescope:notifications/lib/server/templates/emailNewPost.handlebars","telescope:notifications/lib/server/templates/emailNewPendingPost.handlebars","telescope:notifications/lib/server/templates/emailPostApproved.handlebars","telescope:notifications/lib/server/templates/emailNewReply.handlebars","telescope:notifications/lib/server/templates/emailNewUser.handlebars","telescope:notifications//Applications/MAMP/websites/stewardsof/packages/telescope-notifications/i18n/ar.i18n.json","telescope:notifications//Applications/MAMP/websites/stewardsof/packages/telescope-notifications/i18n/bg.i18n.json","telescope:notifications//Applications/MAMP/websites/stewardsof/packages/telescope-notifications/i18n/de.i18n.json","telescope:notifications//Applications/MAMP/websites/stewardsof/packages/telescope-notifications/i18n/el.i18n.json","telescope:notifications//Applications/MAMP/websites/stewardsof/packages/telescope-notifications/i18n/en.i18n.json","telescope:notifications//Applications/MAMP/websites/stewardsof/packages/telescope-notifications/i18n/es.i18n.json","telescope:notifications//Applications/MAMP/websites/stewardsof/packages/telescope-notifications/i18n/fr.i18n.json","telescope:notifications//Applications/MAMP/websites/stewardsof/packages/telescope-notifications/i18n/it.i18n.json","telescope:notifications//Applications/MAMP/websites/stewardsof/packages/telescope-notifications/i18n/nl.i18n.json","telescope:notifications//Applications/MAMP/websites/stewardsof/packages/telescope-notifications/i18n/pl.i18n.json","telescope:notifications//Applications/MAMP/websites/stewardsof/packages/telescope-notifications/i18n/pt-BR.i18n.json","telescope:notifications//Applications/MAMP/websites/stewardsof/packages/telescope-notifications/i18n/ro.i18n.json","telescope:notifications//Applications/MAMP/websites/stewardsof/packages/telescope-notifications/i18n/ru.i18n.json","telescope:notifications//Applications/MAMP/websites/stewardsof/packages/telescope-notifications/i18n/sv.i18n.json","telescope:notifications//Applications/MAMP/websites/stewardsof/packages/telescope-notifications/i18n/tr.i18n.json","telescope:notifications//Applications/MAMP/websites/stewardsof/packages/telescope-notifications/i18n/vi.i18n.json","telescope:notifications//Applications/MAMP/websites/stewardsof/packages/telescope-notifications/i18n/zh-CN.i18n.json"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mD;AACA,qD;AACA,oC;;AAEA,4B;;AAEA,0B;AACA,gC;AACA,+B;AACA,K;;AAEA,8E;AACA,8E;;AAEA,G;;;;;;;;;;;;;;;;;;;ACdA,G;AACA,uE;AACA,uB;AACA,G;AACA,mD;AACA,qD;AACA,oB;AACA,+C;AACA,oD;AACA,sD;AACA,0C;AACA,oC;AACA,iG;AACA,I;;AAEA,c;AACA,8B;;AAEA,mB;AACA,wC;;AAEA,oB;AACA,E;;AAEA,G;AACA,oF;AACA,0B;AACA,G;AACA,+D;AACA,2D;AACA,oB;AACA,mE;AACA,0C;AACA,iD;AACA,0B;AACA,+B;AACA,kD;AACA,I;AACA,oB;AACA,E;;;;;;;;;;;;;;;;;;;ACvCA,mB;AACA,kC;AACA,gB;AACA,kB;AACA,mB;AACA,uB;AACA,e;AACA,6B;AACA,mG;AACA,K;AACA,G;AACA,G;;AAEA,mE;AACA,kB;AACA,G;AACA,sC;AACA,kB;AACA,oB;AACA,qB;AACA,iB;AACA,kB;AACA,O;AACA,K;AACA,G;AACA,E;;AAEA,qD;AACA,gB;AACA,G;AACA,+C;AACA,kB;AACA,yB;AACA,oB;AACA,qB;AACA,0B;AACA,4B;AACA,iB;AACA,oC;AACA,O;AACA,K;AACA,I;AACA,G;AACA,+C;AACA,kB;AACA,yB;AACA,oB;AACA,qB;AACA,0B;AACA,sC;AACA,iB;AACA,oC;AACA,O;AACA,K;AACA,I;AACA,G;AACA,kD;AACA,kB;AACA,oC;AACA,oB;AACA,qB;AACA,yB;AACA,sC;AACA,iB;AACA,oC;AACA,O;AACA,K;AACA,I;AACA,G;AACA,iD;AACA,kB;AACA,sC;AACA,oB;AACA,qB;AACA,yB;AACA,sC;AACA,iB;AACA,oC;AACA,O;AACA,K;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;;ACjFA,qB;;AAEA,Y;AACA,6B;AACA,6D;AACA,M;AACA,0B;AACA,4E;AACA,M;AACA,iC;AACA,I;;AAEA,mB;AACA,6B;AACA,6D;AACA,M;AACA,0B;AACA,qF;AACA,M;AACA,wC;AACA,I;;AAEA,iB;AACA,6B;AACA,6D;AACA,M;AACA,0B;AACA,qF;AACA,M;AACA,uC;AACA,gD;AACA,I;;AAEA,e;AACA,6B;AACA,mF;AACA,M;AACA,0B;AACA,yF;AACA,M;AACA,qC;AACA,8C;AACA,I;;AAEA,a;AACA,6B;AACA,mF;AACA,M;AACA,0B;AACA,gF;AACA,M;AACA,mC;AACA,4C;AACA,I;;AAEA,yB;AACA,6B;AACA,mF;AACA,M;AACA,0B;AACA,+E;AACA,M;AACA,8C;AACA,sC;AACA,G;;AAEA,E;;AAEA,kB;AACA,iE;;AAEA,iB;AACA,Y;AACA,c;AACA,sC;AACA,8D;AACA,8D;AACA,wH;AACA,oE;AACA,S;AACA,O;AACA,K;AACA,I;;AAEA,sC;AACA,8B;AACA,mC;AACA,0D;AACA,8D;AACA,qD;AACA,U;AACA,M;AACA,G;;AAEA,+C;;AAEA,G;;;;;;;;;;;;;;;;;;AChGA,iG;AACA,iG;AACA,iG;;AAEA,oD;AACA,wC;;AAEA,0F;AACA,uH;AACA,0B;AACA,uD;AACA,I;;AAEA,sC;AACA,8C;AACA,4D;;AAEA,yE;AACA,6C;AACA,6F;AACA,wC;AACA,4C;AACA,6F;AACA,G;;AAEA,C;AACA,mE;;AAEA,0C;AACA,E;AACA,0B;AACA,uD;AACA,I;;AAEA,4F;AACA,C;AACA,uE;;AAEA,iG;AACA,iG;AACA,iG;;AAEA,0D;AACA,+C;;AAEA,6D;AACA,uD;;AAEA,6C;AACA,gD;AACA,6B;AACA,4B;AACA,0E;AACA,6D;AACA,U;;;AAGA,kF;AACA,kF;AACA,4G;AACA,8F;AACA,wC;AACA,K;;AAEA,mD;AACA,oC;;AAEA,oE;;AAEA,6F;AACA,yD;AACA,4F;;AAEA,sE;;AAEA,0F;AACA,mF;;AAEA,oD;AACA,wG;;AAEA,yG;AACA,qD;AACA,S;AACA,O;;AAEA,K;;AAEA,+C;AACA,yF;AACA,6B;;AAEA,gE;AACA,yF;AACA,oG;AACA,kH;;AAEA,sE;;AAEA,K;;AAEA,G;AACA,C;AACA,0E;;;;;;;;;;;;;;;;;;ACvGA,uC;AACA,gC;AACA,W;AACA,G;;AAEA,oC;AACA,gC;AACA,W;AACA,G;;;;;;;;;;;;;;;;;;ACRA,yH;;AAEA,+D;AACA,gD;;;;;;;;;;;;;;;;;;;ACHA,oC;AACA,sF;AACA,E;;AAEA,gB;AACA,mC;AACA,wB;AACA,8E;AACA,iF;AACA,mE;AACA,a;AACA,qC;AACA,e;AACA,4C;AACA,4C;AACA,+C;AACA,6C;AACA,S;AACA,S;AACA,kB;AACA,K;AACA,iB;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;;;ACvBA,4B;AACA,E;AACA,uB;;AAEA,4C;AACA,yB;AACA,oB;AACA,wB;AACA,mE;AACA,sE;AACA,qD;AACA,0B;AACA,K;AACA,K;;AAEA,mB;;AAEA,wC;AACA,oB;AACA,oB;AACA,wB;AACA,e;AACA,sD;AACA,6B;AACA,8C;AACA,yC;AACA,Q;AACA,0E;AACA,+D;AACA,0B;AACA,K;AACA,K;;AAEA,mB;;AAEA,wC;AACA,oB;AACA,oB;AACA,wB;AACA,e;AACA,+C;AACA,mB;AACA,kG;AACA,c;AACA,wC;AACA,O;AACA,+D;AACA,0B;AACA,K;AACA,K;;AAEA,kB;;AAEA,6C;AACA,yB;AACA,oB;AACA,wB;AACA,e;AACA,+C;AACA,mB;AACA,uG;AACA,c;AACA,wC;AACA,O;AACA,+D;AACA,0B;AACA,K;AACA,K;;AAEA,sB;;AAEA,2C;AACA,uB;AACA,oB;AACA,wB;AACA,e;AACA,qD;AACA,+C;AACA,sB;AACA,iH;AACA,c;AACA,wC;AACA,O;AACA,+D;AACA,0B;AACA,K;AACA,K;;AAEA,oB;;AAEA,yC;AACA,qB;AACA,oB;AACA,wB;AACA,e;AACA,qD;AACA,+C;AACA,sB;AACA,+G;AACA,c;AACA,wC;AACA,O;AACA,+D;AACA,0B;AACA,K;AACA,K;AACA,G;;;;;;;;;;;;;;;;;;;AC1GA,0f;;;;;;;;;;;;;;;;;;ACAA,8oB;;;;;;;;;;;;;;;;;;ACAA,ssB;;;;;;;;;;;;;;;;;;ACAA,guB;;;;;;;;;;;;;;;;;;ACAA,4f;;;;;;;;;;;;;;;;;;ACAA,gpB;;;;;;;;;;;;;;;;;;ACAA,mc;;;;;;;;;;;;;;;;;;ACAA,6B;AACA,6C;AACA,0C;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,8f;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,6C;AACA,0C;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,8kB;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,6C;AACA,0C;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,+lB;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,6C;AACA,0C;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,+iB;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,6C;AACA,0C;;AAEA,gC;AACA,yD;AACA,C;AACA,gD;AACA,kB;AACA,w2B;AACA,gD;AACA,mD;;;;;;;;;;;;;;;;;;;ACXA,6B;AACA,6C;AACA,0C;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,86B;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,6C;AACA,0C;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,w8B;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,6C;AACA,0C;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,0hB;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,6C;AACA,0C;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,ikB;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,6C;AACA,0C;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,s6B;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,6C;AACA,0C;;AAEA,gC;AACA,yD;AACA,C;AACA,kD;AACA,qC;AACA,C;;AAEA,6D;AACA,gD;AACA,C;;AAEA,86B;AACA,sD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,6C;AACA,0C;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,6kB;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,6C;AACA,0C;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,skB;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,6C;AACA,0C;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,i6B;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,6C;AACA,0C;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,mnB;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,6C;AACA,0C;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,yhB;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,6C;AACA,0C;;AAEA,gC;AACA,yD;AACA,C;AACA,kD;AACA,qC;AACA,C;;AAEA,6D;AACA,gD;AACA,C;;AAEA,sY;AACA,sD","file":"/packages/telescope_notifications.js","sourcesContent":["// send emails every second when in dev environment\nif (Meteor.absoluteUrl().indexOf('localhost') !== -1)\n  Herald.settings.queueTimer = 1000;\n\nMeteor.startup(function () {\n\n  Herald.collection.deny({\n    update: !Users.can.editById,\n    remove: !Users.can.editById\n  });\n\n  // disable all email notifications when \"emailNotifications\" is set to false\n  Herald.settings.overrides.email = !Settings.get('emailNotifications', true);\n\n});\n","/**\n * Use user and post properties to populate post notifications objects.\n * @param {Object} post\n */\nPosts.getNotificationProperties = function (post) {\n  var postAuthor = Meteor.users.findOne(post.userId);\n  var properties = {\n    postAuthorName : Posts.getAuthorName(post),\n    postTitle : Telescope.utils.cleanUp(post.title),\n    profileUrl: Users.getProfileUrl(postAuthor, true),\n    postUrl: Posts.getPageUrl(post, true),\n    thumbnailUrl: post.thumbnailUrl,\n    linkUrl: !!post.url ? Telescope.utils.getOutgoingUrl(post.url) : Posts.getPageUrl(post, true)\n  };\n\n  if(post.url)\n    properties.url = post.url;\n\n  if(post.htmlBody)\n    properties.htmlBody = post.htmlBody;\n\n  return properties;\n};\n\n/**\n * Use comment, user, and post properties to populate comment notifications objects.\n * @param {Object} comment\n */\nComments.getNotificationProperties = function (comment, post) {\n  var commentAuthor = Meteor.users.findOne(comment.userId);\n  var properties = {\n    profileUrl: commentAuthor && commentAuthor.getProfileUrl(true),\n    postUrl: Posts.getPageUrl(post, true),\n    authorName : Comments.getAuthorName(comment),\n    postTitle: post.title,\n    htmlBody: comment.htmlBody,\n    commentUrl: Comments.getPageUrl(comment, true)\n  };\n  return properties;\n};\n","Settings.addField({\n  fieldName: 'emailNotifications',\n  fieldSchema: {\n    type: Boolean,\n    optional: true,\n    defaultValue: true,\n    autoform: {\n      group: 'notifications',\n      instructions: 'Enable email notifications for new posts and new comments (requires restart).'\n    }\n  }\n});\n\n// make it possible to disable notifications on a per-comment basis\nComments.addField(\n  {\n    fieldName: 'disableNotifications',\n    fieldSchema: {\n      type: Boolean,\n      optional: true,\n      autoform: {\n        omit: true\n      }\n    }\n  }\n);\n\n// Add notifications options to user profile settings\nUsers.addField([\n  {\n    fieldName: 'telescope.notifications.users',\n    fieldSchema: {\n      label: 'New users',\n      type: Boolean,\n      optional: true,\n      defaultValue: false,\n      editableBy: ['admin'],\n      autoform: {\n        group: 'Email Notifications'\n      }\n    }\n  },\n  {\n    fieldName: 'telescope.notifications.posts',\n    fieldSchema: {\n      label: 'New posts',\n      type: Boolean,\n      optional: true,\n      defaultValue: false,\n      editableBy: ['admin', 'member'],\n      autoform: {\n        group: 'Email Notifications'\n      }\n    }\n  },\n  {\n    fieldName: 'telescope.notifications.comments',\n    fieldSchema: {\n      label: 'Comments on my posts',\n      type: Boolean,\n      optional: true,\n      defaultValue: true,\n      editableBy: ['admin', 'member'],\n      autoform: {\n        group: 'Email Notifications'\n      }\n    }\n  },\n  {\n    fieldName: 'telescope.notifications.replies',\n    fieldSchema: {\n      label: 'Replies to my comments',\n      type: Boolean,\n      optional: true,\n      defaultValue: true,\n      editableBy: ['admin', 'member'],\n      autoform: {\n        group: 'Email Notifications'\n      }\n    }\n  }\n]);\n","var notifications = {\n\n  newPost: {\n    properties: function () {\n      return Posts.getNotificationProperties(this.data.post);\n    },\n    subject: function () {\n      return this.postAuthorName+' has created a new post: '+this.postTitle;\n    },\n    emailTemplate: \"emailNewPost\"\n  },\n\n  newPendingPost: {\n    properties: function () {\n      return Posts.getNotificationProperties(this.data.post);\n    },\n    subject: function () {\n      return this.postAuthorName+' has a new post pending approval: '+this.postTitle;\n    },\n    emailTemplate: \"emailNewPendingPost\"\n  },\n\n  postApproved: {\n    properties: function () {\n      return Posts.getNotificationProperties(this.data.post);\n    },\n    subject: function () {\n      return this.postAuthorName+' has a new post pending approval: '+this.postTitle;\n    },\n    emailTemplate: \"emailPostApproved\",\n    onsiteTemplate: \"notification_post_approved\"\n  },\n\n  newComment: {\n    properties: function () {\n      return Comments.getNotificationProperties(this.data.comment, this.data.post);\n    },\n    subject: function () {\n      return this.authorName+' left a new comment on your post \"' + this.postTitle + '\"';\n    },\n    emailTemplate: \"emailNewComment\",\n    onsiteTemplate: \"notification_new_comment\"\n  },\n\n  newReply: {\n    properties: function () {\n      return Comments.getNotificationProperties(this.data.comment, this.data.post);\n    },\n    subject: function () {\n      return this.authorName+' replied to your comment on \"'+this.postTitle+'\"';\n    },\n    emailTemplate: \"emailNewReply\",\n    onsiteTemplate: \"notification_new_reply\"\n  },\n\n  newCommentSubscribed: {\n    properties: function () {\n      return Comments.getNotificationProperties(this.data.comment, this.data.post);\n    },\n    subject: function () {\n      return this.authorName+' left a new comment on \"' + this.postTitle + '\"';\n    },\n    emailTemplate: \"notification_new_comment\",\n    onsite: \"notification_new_comment\"\n  }\n\n};\n\n// set up couriers\n_.each(notifications, function (notification, notificationName) {\n\n  var courier = {\n    media: {\n      email: {\n        emailRunner: function (user) {\n          var properties = notification.properties.call(this);\n          var subject = notification.subject.call(properties);\n          var html = Telescope.email.buildTemplate(Telescope.email.getTemplate(notification.emailTemplate)(properties));\n          Telescope.email.send(Users.getEmail(user), subject, html);\n        }\n      }\n    }\n  };\n\n  if (!!notification.onsiteTemplate) {\n    courier.media.onsite = {};\n    courier.message = function () {\n      var properties = notification.properties.call(this);\n      return Blaze.toHTML(Blaze.With(properties, function () {\n        return Template[notification.onsiteTemplate];\n      }));\n    };\n  }\n\n  Herald.addCourier(notificationName, courier);\n\n});","// ------------------------------------------------------------------------------------------- //\n// -----------------------------------------  Posts ------------------------------------------ //\n// ------------------------------------------------------------------------------------------- //\n\n// add new post notification callback on post submit\nfunction postSubmitNotification (post) {\n\n  var adminIds = _.pluck(Users.find({'isAdmin': true}, {fields: {_id:1}}).fetch(), '_id');\n  var notifiedUserIds = _.pluck(Users.find({'telescope.notifications.posts': true}, {fields: {_id:1}}).fetch(), '_id');\n  var notificationData = {\n    post: _.pick(post, '_id', 'userId', 'title', 'url')\n  };\n\n  // remove post author ID from arrays\n  adminIds = _.without(adminIds, post.userId);\n  notifiedUserIds = _.without(notifiedUserIds, post.userId);\n\n  if (post.status === Posts.config.STATUS_PENDING && !!adminIds.length) {\n    // if post is pending, only notify admins\n    Herald.createNotification(adminIds, {courier: 'newPendingPost', data: notificationData});\n  } else if (!!notifiedUserIds.length) {\n    // if post is approved, notify everybody\n    Herald.createNotification(notifiedUserIds, {courier: 'newPost', data: notificationData});\n  }\n\n}\nTelescope.callbacks.add(\"postSubmitAsync\", postSubmitNotification);\n\nfunction postApprovedNotification (post) {\n  \n  var notificationData = {\n    post: _.pick(post, '_id', 'userId', 'title', 'url')\n  };\n\n  Herald.createNotification(post.userId, {courier: 'postApproved', data: notificationData});\n}\nTelescope.callbacks.add(\"postApprovedAsync\", postApprovedNotification);\n\n// ------------------------------------------------------------------------------------------- //\n// ---------------------------------------- Comments ----------------------------------------- //\n// ------------------------------------------------------------------------------------------- //\n\n// add new comment notification callback on comment submit\nfunction commentSubmitNotifications (comment) {\n\n  // note: dummy content has disableNotifications set to true\n  if(Meteor.isServer && !comment.disableNotifications){\n\n    var post = Posts.findOne(comment.postId),\n        postAuthor = Users.findOne(post.userId),\n        userIdsNotified = [],\n        notificationData = {\n          comment: _.pick(comment, '_id', 'userId', 'author', 'htmlBody'),\n          post: _.pick(post, '_id', 'userId', 'title', 'url')\n        };\n\n\n    // 1. Notify author of post (if they have new comment notifications turned on)\n    //    but do not notify author of post if they're the ones posting the comment\n    if (Users.getSetting(postAuthor, \"notifications.comments\", true) && comment.userId !== postAuthor._id) {\n      Herald.createNotification(post.userId, {courier: 'newComment', data: notificationData});\n      userIdsNotified.push(post.userId);\n    }\n\n    // 2. Notify author of comment being replied to\n    if (!!comment.parentCommentId) {\n\n      var parentComment = Comments.findOne(comment.parentCommentId);\n\n      // do not notify author of parent comment if they're also post author or comment author\n      // (someone could be replying to their own comment)\n      if (parentComment.userId !== post.userId && parentComment.userId !== comment.userId) {\n\n        var parentCommentAuthor = Users.findOne(parentComment.userId);\n\n        // do not notify parent comment author if they have reply notifications turned off\n        if (Users.getSetting(parentCommentAuthor, \"notifications.replies\", true)) {\n\n          // add parent comment to notification data\n          notificationData.parentComment = _.pick(parentComment, '_id', 'userId', 'author', 'htmlBody');\n\n          Herald.createNotification(parentComment.userId, {courier: 'newReply', data: notificationData});\n          userIdsNotified.push(parentComment.userId);\n        }\n      }\n\n    }\n\n    // 3. Notify users subscribed to the thread\n    // TODO: ideally this would be injected from the telescope-subscribe-to-posts package\n    if (!!post.subscribers) {\n\n      // remove userIds of users that have already been notified\n      // and of comment author (they could be replying in a thread they're subscribed to)\n      var subscriberIdsToNotify = _.difference(post.subscribers, userIdsNotified, [comment.userId]);\n      Herald.createNotification(subscriberIdsToNotify, {courier: 'newCommentSubscribed', data: notificationData});\n\n      userIdsNotified = userIdsNotified.concat(subscriberIdsToNotify);\n\n    }\n\n  }\n}\nTelescope.callbacks.add(\"commentSubmitAsync\", commentSubmitNotifications);","Telescope.modules.add(\"secondaryNav\", {\n  template:'notifications_menu',\n  order: 20\n});\n\nTelescope.modules.add(\"mobileNav\", {\n  template:'notifications_menu',\n  order: 20\n});","TAPi18n.packages[\"telescope:notifications\"] = {\"translation_function_name\":\"__\",\"helper_name\":\"_\",\"namespace\":\"project\"};\n\n// define package's translation function (proxy to the i18next)\n__ = TAPi18n._getPackageI18nextProxy(\"project\");\n","getUnsubscribeLink = function(user){\n  return Telescope.utils.getRouteUrl('unsubscribe', {hash: user.telescope.emailHash});\n};\n\nMeteor.methods({\n  unsubscribeUser : function(hash){\n    check(hash, String);\n    // TO-DO: currently, if you have somebody's email you can unsubscribe them\n    // A user-specific salt should be added to the hashing method to prevent this\n    var user = Meteor.users.findOne({\"telescope.emailHash\": hash});\n    if(user){\n      Meteor.users.update(user._id, {\n        $set: {\n          'profile.notifications.users' : 0,\n          'profile.notifications.posts' : 0,\n          'profile.notifications.comments' : 0,\n          'profile.notifications.replies' : 0\n        }\n      });\n      return true;\n    }\n    return false;\n  }\n});\n\n","Meteor.startup(function () {\n  \n  // Notification email\n\n  Router.route('/email/notification/:id?', {\n    name: 'notification',\n    where: 'server',\n    action: function() {\n      var notification = Herald.collection.findOne(this.params.id);\n      var notificationContents = buildEmailNotification(notification);\n      this.response.write(notificationContents.html);\n      this.response.end();\n    }\n  });\n\n  // New user email\n\n  Router.route('/email/new-user/:id?', {\n    name: 'newUser',\n    where: 'server',\n    action: function() {\n      var html;\n      var user = Meteor.users.findOne(this.params.id);\n      var emailProperties = {\n        profileUrl: Users.getProfileUrl(user),\n        username: Users.getUserName(user)\n      };\n      html = Telescope.email.getTemplate('emailNewUser')(emailProperties);\n      this.response.write(Telescope.email.buildTemplate(html));\n      this.response.end();\n    }\n  });\n\n  // New post email\n\n  Router.route('/email/new-post/:id?', {\n    name: 'newPost',\n    where: 'server',\n    action: function() {\n      var html;\n      var post = Posts.findOne(this.params.id);\n      if (!!post) {\n        html = Telescope.email.getTemplate('emailNewPost')(Posts.getNotificationProperties(post));\n      } else {\n        html = \"<h3>No post found.</h3>\"\n      }\n      this.response.write(Telescope.email.buildTemplate(html));\n      this.response.end();\n    }\n  });\n\n  // Post approved\n\n  Router.route('/email/post-approved/:id?', {\n    name: 'postApproved',\n    where: 'server',\n    action: function() {\n      var html;\n      var post = Posts.findOne(this.params.id);\n      if (!!post) {\n        html = Telescope.email.getTemplate('emailPostApproved')(Posts.getNotificationProperties(post));\n      } else {\n        html = \"<h3>No post found.</h3>\"\n      }\n      this.response.write(Telescope.email.buildTemplate(html));\n      this.response.end();\n    }\n  });\n\n  // New comment email\n\n  Router.route('/email/new-comment/:id?', {\n    name: 'newComment',\n    where: 'server',\n    action: function() {\n      var html;\n      var comment = Comments.findOne(this.params.id);\n      var post = Posts.findOne(comment.postId);\n      if (!!comment) {\n        html = Telescope.email.getTemplate('emailNewComment')(Comments.getNotificationProperties(comment, post));\n      } else {\n        html = \"<h3>No post found.</h3>\"\n      }\n      this.response.write(Telescope.email.buildTemplate(html));\n      this.response.end();\n    }\n  });\n\n  // New reply email\n\n  Router.route('/email/new-reply/:id?', {\n    name: 'newReply',\n    where: 'server',\n    action: function() {\n      var html;\n      var comment = Comments.findOne(this.params.id);\n      var post = Posts.findOne(comment.postId);\n      if (!!comment) {\n        html = Telescope.email.getTemplate('emailNewReply')(Comments.getNotificationProperties(comment, post));\n      } else {\n        html = \"<h3>No post found.</h3>\"\n      }\n      this.response.write(Telescope.email.buildTemplate(html));\n      this.response.end();\n    }\n  });\n});\n","Handlebars = Handlebars || {};Handlebars.templates = Handlebars.templates || {} ;var template = OriginalHandlebars.compile(\"<span class=\\\"heading\\\">{{username}}, welcome to {{siteTitle}}!</span><br><br>\\n\\nYou've just been invited. <a href=\\\"{{siteUrl}}\\\">Start posting</a>.<br><br>\");Handlebars.templates[\"emailAccountApproved\"] = function (data, partials) { partials = (partials || {});return template(data || {}, { helpers: OriginalHandlebars.helpers,partials: partials,name: \"emailAccountApproved\"});};","Handlebars = Handlebars || {};Handlebars.templates = Handlebars.templates || {} ;var template = OriginalHandlebars.compile(\"<span class=\\\"heading\\\">\\n<a href=\\\"{{profileUrl}}\\\">{{authorName}}</a>\\nleft a new comment on \\n<a href=\\\"{{postUrl}}\\\" class=\\\"action-link\\\">{{postTitle}}</a>:\\n</span>\\n<br/><br/>\\n\\n<div class=\\\"comment-body\\\">\\n{{{htmlBody}}}\\n</div>\\n<br>\\n\\n<a href=\\\"{{commentUrl}}\\\" class=\\\"action-link\\\">Reply</a><br/><br/>\");Handlebars.templates[\"emailNewComment\"] = function (data, partials) { partials = (partials || {});return template(data || {}, { helpers: OriginalHandlebars.helpers,partials: partials,name: \"emailNewComment\"});};","Handlebars = Handlebars || {};Handlebars.templates = Handlebars.templates || {} ;var template = OriginalHandlebars.compile(\"<span class=\\\"heading\\\">\\n<a href=\\\"{{profileUrl}}\\\">{{postAuthorName}}</a>\\nhas created a new post:\\n{{#if url}}\\n  <a href=\\\"{{linkUrl}}\\\" class=\\\"action-link\\\">{{postTitle}}}</a>\\n{{else}}\\n  {{postTitle}}}\\n{{/if}}\\n</span><br><br>\\n\\n{{#if htmlBody}}\\n  <div class=\\\"post-body\\\">\\n  {{{htmlBody}}}\\n  </div>\\n  <br>\\n{{/if}}\\n\\n<a href=\\\"{{postUrl}}\\\">Discuss</a><br><br>\\n\");Handlebars.templates[\"emailNewPost\"] = function (data, partials) { partials = (partials || {});return template(data || {}, { helpers: OriginalHandlebars.helpers,partials: partials,name: \"emailNewPost\"});};","Handlebars = Handlebars || {};Handlebars.templates = Handlebars.templates || {} ;var template = OriginalHandlebars.compile(\"<span class=\\\"heading\\\">\\n<a href=\\\"{{profileUrl}}\\\">{{postAuthorName}}</a>\\nhas a new post pending approval:\\n{{#if url}}\\n  <a href=\\\"{{linkUrl}}\\\" class=\\\"action-link\\\">{{postTitle}}}</a>\\n{{else}}\\n  {{postTitle}}}\\n{{/if}}\\n</span><br><br>\\n\\n{{#if htmlBody}}\\n  <div class=\\\"post-body\\\">\\n  {{{htmlBody}}}\\n  </div>\\n  <br>\\n{{/if}}\\n\\n<a href=\\\"{{postUrl}}\\\">Go to post</a><br><br>\\n\");Handlebars.templates[\"emailNewPendingPost\"] = function (data, partials) { partials = (partials || {});return template(data || {}, { helpers: OriginalHandlebars.helpers,partials: partials,name: \"emailNewPendingPost\"});};","Handlebars = Handlebars || {};Handlebars.templates = Handlebars.templates || {} ;var template = OriginalHandlebars.compile(\"<span class=\\\"heading\\\">\\nCongratulations, your post has been approved:\\n</span>\\n<br><br>\\n<a href=\\\"{{postUrl}}\\\" class=\\\"action-link\\\">{{postTitle}}}</a>\\n<br><br>\");Handlebars.templates[\"emailPostApproved\"] = function (data, partials) { partials = (partials || {});return template(data || {}, { helpers: OriginalHandlebars.helpers,partials: partials,name: \"emailPostApproved\"});};","Handlebars = Handlebars || {};Handlebars.templates = Handlebars.templates || {} ;var template = OriginalHandlebars.compile(\"<span class=\\\"heading\\\"><a href=\\\"{{profileUrl}}\\\">{{authorName}}</a>\\nhas replied to your comment on\\n<a href=\\\"{{postUrl}}\\\" class=\\\"action-link\\\">{{postTitle}}</a>:\\n</span>\\n<br/><br/>\\n\\n<div class=\\\"comment-body\\\">\\n{{{htmlBody}}}\\n</div>\\n<br>\\n\\n<a href=\\\"{{commentUrl}}\\\" class=\\\"action-link\\\">Reply</a><br/><br/>\");Handlebars.templates[\"emailNewReply\"] = function (data, partials) { partials = (partials || {});return template(data || {}, { helpers: OriginalHandlebars.helpers,partials: partials,name: \"emailNewReply\"});};","Handlebars = Handlebars || {};Handlebars.templates = Handlebars.templates || {} ;var template = OriginalHandlebars.compile(\"<span class=\\\"heading\\\">A new user account has been created: <a href=\\\"{{profileUrl}}\\\">{{username}}</a></span><br><br>\");Handlebars.templates[\"emailNewUser\"] = function (data, partials) { partials = (partials || {});return template(data || {}, { helpers: OriginalHandlebars.helpers,partials: partials,name: \"emailNewUser\"});};","var _ = Package.underscore._,\n    package_name = \"telescope:notifications\",\n    namespace = \"telescope:notifications\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"ar\"])) {\n  TAPi18n.translations[\"ar\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"ar\"][namespace])) {\n  TAPi18n.translations[\"ar\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"ar\"][namespace], {\"a_new_comment_on_your_post\":\"تعليق جديد حول مشاركتك\",\"you_have_a_new_comment_by\":\"لديك تعليق جديد من\",\"on_your_post\":\" حول مشاركتك\",\"has_created_a_new_post\":\" اضاف مشاركة جديدة\",\"someone_replied_to_your_comment_on\":\"احدهم قام باضافة اجابة لتعليقك حول\",\"no_notifications\":\"0 تعليقات\",\"1_notification\":\"1 تعليق\",\"notifications\":\"تعليقات\",\"mark_all_as_read\":\"اجعلها مقرؤة\",\"has_replied_to_your_comment_on\":\" قام باضافة تعليق حول\",\"mark_as_read\":\"إجعلها مقروءة\"});\nTAPi18n._registerServerTranslator(\"ar\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:notifications\",\n    namespace = \"telescope:notifications\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"bg\"])) {\n  TAPi18n.translations[\"bg\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"bg\"][namespace])) {\n  TAPi18n.translations[\"bg\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"bg\"][namespace], {\"a_new_comment_on_your_post\":\"Нов коментар на ваша публикация\",\"you_have_a_new_comment_by\":\"Имате нов коментар от \",\"on_your_post\":\" на ваша публикация\",\"has_created_a_new_post\":\" е създадена нова публикация\",\"someone_replied_to_your_comment_on\":\"Някой отговори на коментара ви относно\",\"no_notifications\":\"Няма известия\",\"1_notification\":\"1 известие\",\"notifications\":\"известия\",\"mark_all_as_read\":\"Отбележи всичко като прочетено\",\"has_replied_to_your_comment_on\":\" е отговорил на коментара ви за\",\"mark_as_read\":\"Маркирай като прочетено\"});\nTAPi18n._registerServerTranslator(\"bg\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:notifications\",\n    namespace = \"telescope:notifications\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"de\"])) {\n  TAPi18n.translations[\"de\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"de\"][namespace])) {\n  TAPi18n.translations[\"de\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"de\"][namespace], {\"a_new_comment_on_your_post\":\"Ein neuer Kommentar zu Deinem Link\",\"you_have_a_new_comment_by\":\"Du hast einen neuen Kommentar von \",\"on_your_post\":\" bei Deinem Link\",\"has_created_a_new_post\":\" hat einen neuen Link erstellt\",\"someone_replied_to_your_comment_on\":\"Jemand hat auf Deinen Kommentar geantwortet bei\",\"no_notifications\":\"Keine Benachrichtigungen\",\"1_notification\":\"1 Benachrichtigung\",\"notifications\":\"Benachrichtigungen\",\"mark_all_as_read\":\"Alle als gelesen markieren\",\"has_replied_to_your_comment_on\":\" hat auf Deinen Kommentar geantwortet bei\"});\nTAPi18n._registerServerTranslator(\"de\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:notifications\",\n    namespace = \"telescope:notifications\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"el\"])) {\n  TAPi18n.translations[\"el\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"el\"][namespace])) {\n  TAPi18n.translations[\"el\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"el\"][namespace], {\"a_new_comment_on_your_post\":\"Νέο σχόλιο στη δημοσίευση σου\",\"you_have_a_new_comment_by\":\"Νέο σχόλιο από\",\"on_your_post\":\" στη δημοσίευση σου\",\"has_created_a_new_post\":\" έκανε μια νέα δημοσίευση\",\"someone_replied_to_your_comment_on\":\"Κάποιος απάντησε στο σχόλιό σου\",\"no_notifications\":\"Καμία ειδοποίηση\",\"1_notification\":\"1 ειδοποίηση\",\"notifications\":\"ειδοποίησεις\",\"mark_all_as_read\":\"Μάρκαρε τα όλα ότι τα διάβασες\",\"has_replied_to_your_comment_on\":\" απάντησε στο σχόλιό σου\",\"mark_as_read\":\"To διάβασα\"});\nTAPi18n._registerServerTranslator(\"el\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:notifications\",\n    namespace = \"telescope:notifications\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n// integrate the fallback language translations \ntranslations = {};\ntranslations[namespace] = {\"a_new_comment_on_your_post\":\"A new comment on your post\",\"you_have_a_new_comment_by\":\"You have a new comment by \",\"on_your_post\":\" on your post\",\"has_created_a_new_post\":\" has created a new post\",\"someone_replied_to_your_comment_on\":\"Someone replied to your comment on\",\"no_notifications\":\"No notifications\",\"1_notification\":\"1 notification\",\"notifications\":\"notifications\",\"mark_all_as_read\":\"Mark all as read\",\"left_a_new_comment_on\":\"left a new comment on\",\"has_replied_to_your_comment_on\":\"has replied to your comment on\",\"mark_as_read\":\"Mark as read\",\"you_have_been_unsubscribed_from_all_notifications\":\"You have been unsubscribed from all notifications.\",\"user_not_found\":\"User not found\",\"notifications_fieldset\":\"Notifications\",\"emailNotifications\":\"Email Notifications\",\"your_post\":\"Your post\",\"has_been_approved\":\"has been approved\"};\nTAPi18n._loadLangFileObject(\"en\", translations);\nTAPi18n._registerServerTranslator(\"en\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:notifications\",\n    namespace = \"telescope:notifications\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"es\"])) {\n  TAPi18n.translations[\"es\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"es\"][namespace])) {\n  TAPi18n.translations[\"es\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"es\"][namespace], {\"a_new_comment_on_your_post\":\"Un nuevo comentario en su post\",\"you_have_a_new_comment_by\":\"Tiene un nuevo comentario de \",\"on_your_post\":\" en su post\",\"has_created_a_new_post\":\" ha creado un nuevo post\",\"someone_replied_to_your_comment_on\":\"Alguien respondió a tu comentario en\",\"no_notifications\":\"Ninguna notificación\",\"1_notification\":\"1 notificación\",\"notifications\":\"notificaciones\",\"mark_all_as_read\":\"Marcar todas como leídas\",\"left_a_new_comment_on\":\"ha dejado un nuevo comentario en\",\"has_replied_to_your_comment_on\":\" ha respondido a su comentario sobre\",\"mark_as_read\":\"Marcar como leído\",\"you_have_been_unsubscribed_from_all_notifications\":\"Ha dado de baja de todas las notificaciones.\",\"user_not_found\":\"Usuario no encontrado\",\"notifications_fieldset\":\"Notificaciones\",\"emailNotifications\":\"Notificaciónes por Email\",\"your_post\":\"Tú post\",\"has_been_approved\":\"ha sido aprobado\"});\nTAPi18n._registerServerTranslator(\"es\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:notifications\",\n    namespace = \"telescope:notifications\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"fr\"])) {\n  TAPi18n.translations[\"fr\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"fr\"][namespace])) {\n  TAPi18n.translations[\"fr\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"fr\"][namespace], {\"a_new_comment_on_your_post\":\"Un nouveau commentaire sur votre post\",\"you_have_a_new_comment_by\":\"Vous avez un nouveau commentaire de \",\"on_your_post\":\" sur votre post\",\"has_created_a_new_post\":\" a créé un nouveau post\",\"someone_replied_to_your_comment_on\":\"Quelqu'un à répondu à votre commentaire sur\",\"no_notifications\":\"Aucune notification\",\"1_notification\":\"1 notification\",\"notifications\":\"notifications\",\"mark_all_as_read\":\"Tout marquer comme lu\",\"left_a_new_comment_on\":\"a laissé un nouveau commentaire sur\",\"has_replied_to_your_comment_on\":\"a répondu à votre commentaire sur\",\"mark_as_read\":\"Marquer comme lu\",\"you_have_been_unsubscribed_from_all_notifications\":\"Vous avez été désabonné de toutes les notifications.\",\"user_not_found\":\"Utilisateur non trouvé\",\"notifications_fieldset\":\"Notifications\",\"emailNotifications\":\"Notifications par Email\",\"your_post\":\"Votre post\",\"has_been_approved\":\"a été approuvé\"});\nTAPi18n._registerServerTranslator(\"fr\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:notifications\",\n    namespace = \"telescope:notifications\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"it\"])) {\n  TAPi18n.translations[\"it\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"it\"][namespace])) {\n  TAPi18n.translations[\"it\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"it\"][namespace], {\"a_new_comment_on_your_post\":\"Un nuovo commento sul tuo post\",\"you_have_a_new_comment_by\":\"Hai un nuovo commento di \",\"on_your_post\":\" sul tuo post\",\"has_created_a_new_post\":\" ha creato un nuovo post\",\"someone_replied_to_your_comment_on\":\"Qualcuno ha risposto al tuo commento su\",\"no_notifications\":\"Nessuna notifica\",\"1_notification\":\"1 notifica\",\"notifications\":\"notifiche\",\"mark_all_as_read\":\"Segna tutte come lette\",\"has_replied_to_your_comment_on\":\" ha risposto al tuo commento su\"});\nTAPi18n._registerServerTranslator(\"it\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:notifications\",\n    namespace = \"telescope:notifications\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"nl\"])) {\n  TAPi18n.translations[\"nl\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"nl\"][namespace])) {\n  TAPi18n.translations[\"nl\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"nl\"][namespace], {\"a_new_comment_on_your_post\":\"Nieuwe reactie op je artikel\",\"you_have_a_new_comment_by\":\"Nieuwe reactie van \",\"on_your_post\":\" op jouw artikel\",\"has_created_a_new_post\":\" heeft een nieuw artikel geplaatst\",\"someone_replied_to_your_comment_on\":\"Iemand heeft gereageerd op \",\"no_notifications\":\"Geen berichten\",\"1_notification\":\"1 bericht\",\"notifications\":\"notificaties\",\"mark_all_as_read\":\"Markeer alles als gelezen\",\"has_replied_to_your_comment_on\":\" heeft gereageerd op jouw reactie op \",\"mark_as_read\":\"Markeer als gelezen\"});\nTAPi18n._registerServerTranslator(\"nl\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:notifications\",\n    namespace = \"telescope:notifications\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"pl\"])) {\n  TAPi18n.translations[\"pl\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"pl\"][namespace])) {\n  TAPi18n.translations[\"pl\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"pl\"][namespace], {\"a_new_comment_on_your_post\":\"Nowy komentarz\",\"you_have_a_new_comment_by\":\"Pojawił się nowy komentarz \",\"on_your_post\":\" dla twojego posta\",\"has_created_a_new_post\":\" utworzył nowy post\",\"someone_replied_to_your_comment_on\":\"Ktoś odpowiedział na twój komentarz w\",\"no_notifications\":\"Brak powiadomień\",\"1_notification\":\"1 powiadomienie\",\"notifications\":\"powiadomień\",\"mark_all_as_read\":\"Oznacz wszystkie jako przeczytane\",\"left_a_new_comment_on\":\"dodał nowy komentarz w\",\"has_replied_to_your_comment_on\":\"odpowiedział na twój komentarz w\",\"mark_as_read\":\"Oznacz jako przeczytane\",\"you_have_been_unsubscribed_from_all_notifications\":\"Zostałeś wypisany ze wszystkich powiadomień.\",\"user_not_found\":\"Użytkownik nie został odnaleziony\",\"notifications_fieldset\":\"Powiadomienia\",\"emailNotifications\":\"Powiadomienia Email\",\"your_post\":\"Twój post\",\"has_been_approved\":\"został zaakceptowany\"});\nTAPi18n._registerServerTranslator(\"pl\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:notifications\",\n    namespace = \"telescope:notifications\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"pt-BR\"])) {\n  TAPi18n.translations[\"pt-BR\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"pt-BR\"][namespace])) {\n  TAPi18n.translations[\"pt-BR\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"pt-BR\"][namespace], {\"a_new_comment_on_your_post\":\"Um novo comentário em sua postagem\",\"you_have_a_new_comment_by\":\"Você possui um novo comentário por \",\"on_your_post\":\" em sua postagem\",\"has_created_a_new_post\":\" criou uma nova postagem\",\"someone_replied_to_your_comment_on\":\"Alguém respondeu ao seu comentário em\",\"no_notifications\":\"Sem notificações\",\"1_notification\":\"1 notificação\",\"notifications\":\"notificações\",\"mark_all_as_read\":\"Marcar todas como lidas\",\"left_a_new_comment_on\":\"deixou um novo comentário em\",\"has_replied_to_your_comment_on\":\"respondeu ao seu comentário em\",\"mark_as_read\":\"Marcar como lido\",\"you_have_been_unsubscribed_from_all_notifications\":\"Você se desinscreveu de todas as notificações.\",\"user_not_found\":\"Usuário não encontrado\",\"notifications_fieldset\":\"Notificações\",\"emailNotifications\":\"Notificações por Email\",\"your_post\":\"Sua postagem\",\"has_been_approved\":\"foi aprovada\"});\nTAPi18n._registerServerTranslator(\"pt-BR\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:notifications\",\n    namespace = \"telescope:notifications\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"ro\"])) {\n  TAPi18n.translations[\"ro\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"ro\"][namespace])) {\n  TAPi18n.translations[\"ro\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"ro\"][namespace], {\"a_new_comment_on_your_post\":\"Un nou comentariu la postarea ta\",\"you_have_a_new_comment_by\":\"Ai un nou comentariu de la \",\"on_your_post\":\" la postarea ta\",\"has_created_a_new_post\":\" a publicat o nouă postare\",\"someone_replied_to_your_comment_on\":\"Cineva a lăsat un comentariu la\",\"no_notifications\":\"Nici o notificare\",\"1_notification\":\"1 Notificare\",\"notifications\":\"Notificări\",\"mark_all_as_read\":\"Marchează toate ca citite\",\"has_replied_to_your_comment_on\":\" a răspuns la comentariul tău la\",\"mark_as_read\":\"Postări contra trend-ului\"});\nTAPi18n._registerServerTranslator(\"ro\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:notifications\",\n    namespace = \"telescope:notifications\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"ru\"])) {\n  TAPi18n.translations[\"ru\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"ru\"][namespace])) {\n  TAPi18n.translations[\"ru\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"ru\"][namespace], {\"a_new_comment_on_your_post\":\"Новый комментарий по вашему посту\",\"you_have_a_new_comment_by\":\"У вас есть новый комментарий от \",\"on_your_post\":\" по вашему посту\",\"has_created_a_new_post\":\" создал новый пост\",\"someone_replied_to_your_comment_on\":\"Кто-то ответил на ваш комментарий\",\"no_notifications\":\"Оповещений нет\",\"1_notification\":\"1 оповещение\",\"notifications\":\"оповещения\",\"mark_all_as_read\":\"Отметить всё прочитанным\",\"has_replied_to_your_comment_on\":\" ответил(а) на ваш комментарий по\",\"mark_as_read\":\"Отметить прочитанным\"});\nTAPi18n._registerServerTranslator(\"ru\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:notifications\",\n    namespace = \"telescope:notifications\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"sv\"])) {\n  TAPi18n.translations[\"sv\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"sv\"][namespace])) {\n  TAPi18n.translations[\"sv\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"sv\"][namespace], {\"a_new_comment_on_your_post\":\"En ny kommentar på ditt inlägg\",\"you_have_a_new_comment_by\":\"Du har en ny kommentar från \",\"on_your_post\":\" på ditt inlägg\",\"has_created_a_new_post\":\" har skapat ett nytt inlägg\",\"someone_replied_to_your_comment_on\":\"Någon svarade på din kommentar gällande\",\"no_notifications\":\"Inga notifikationer\",\"1_notification\":\"En notifikation\",\"notifications\":\"notifikationer\",\"mark_all_as_read\":\"Markera alla som lästa\",\"left_a_new_comment_on\":\"lämnade en ny kommentar på\",\"has_replied_to_your_comment_on\":\" har svarat på din kommentar gällande\",\"mark_as_read\":\"Markera som läst\",\"you_have_been_unsubscribed_from_all_notifications\":\"Du har avregistrerat dig från alla notifikationer.\",\"user_not_found\":\"Användaren hittades inte\",\"notifications_fieldset\":\"Notifikationer\",\"emailNotifications\":\"E\",\"your_post\":\"Ditt inlägg\",\"has_been_approved\":\"har godkänts\"});\nTAPi18n._registerServerTranslator(\"sv\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:notifications\",\n    namespace = \"telescope:notifications\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"tr\"])) {\n  TAPi18n.translations[\"tr\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"tr\"][namespace])) {\n  TAPi18n.translations[\"tr\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"tr\"][namespace], {\"a_new_comment_on_your_post\":\"Şu paylaşımınıza yeni bir yorum yapıldı: \",\"you_have_a_new_comment_by\":\"Şu kişiden yeni bir yorum aldınız: \",\"on_your_post\":\" paylaşımınızda\",\"has_created_a_new_post\":\" yeni bir paylaşım yaptı\",\"someone_replied_to_your_comment_on\":\"Birisi yorumunuza cevap verdi şu konu hakkında: \",\"no_notifications\":\"Bildirim yok\",\"1_notification\":\"1 bildirim\",\"notifications\":\"Bildirimler\",\"mark_all_as_read\":\"Hepsini okunmuş olarak işaretle\",\"has_replied_to_your_comment_on\":\" yorumunuza cevap verdi şu konu hakkında:\",\"mark_as_read\":\"Okundu olarak işaretle\"});\nTAPi18n._registerServerTranslator(\"tr\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:notifications\",\n    namespace = \"telescope:notifications\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"vi\"])) {\n  TAPi18n.translations[\"vi\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"vi\"][namespace])) {\n  TAPi18n.translations[\"vi\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"vi\"][namespace], {\"a_new_comment_on_your_post\":\"Có ý kiến mới trên bài của bạn\",\"you_have_a_new_comment_by\":\"Bạn có ý kiến mới bởi \",\"on_your_post\":\" trên bài của bạn\",\"has_created_a_new_post\":\" đã bạo bài mới\",\"someone_replied_to_your_comment_on\":\"Có người trả lời ý kiến của bạn\",\"no_notifications\":\"Không có thông báo\",\"1_notification\":\"1 thông báo\",\"notifications\":\"Thông báo\",\"mark_all_as_read\":\"Đánh dấu đã đọc\",\"has_replied_to_your_comment_on\":\" đã trả lời ý kiến của bạn\",\"mark_as_read\":\"Đã đọc\"});\nTAPi18n._registerServerTranslator(\"vi\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:notifications\",\n    namespace = \"telescope:notifications\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"zh-CN\"])) {\n  TAPi18n.translations[\"zh-CN\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"zh-CN\"][namespace])) {\n  TAPi18n.translations[\"zh-CN\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"zh-CN\"][namespace], {\"a_new_comment_on_your_post\":\"你发表的主题有新的评论\",\"you_have_a_new_comment_by\":\"你有一个新的评论在 \",\"on_your_post\":\" 在你的帖子\",\"has_created_a_new_post\":\" 发一个新帖\",\"someone_replied_to_your_comment_on\":\"有人回复了你的评论\",\"no_notifications\":\"无消息\",\"1_notification\":\"1 个消息\",\"notifications\":\"消息\",\"mark_all_as_read\":\"标记所有\",\"has_replied_to_your_comment_on\":\" 已经有人回复了你的评论\"});\nTAPi18n._registerServerTranslator(\"zh-CN\", namespace);\n"]}