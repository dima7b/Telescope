{"version":3,"sources":["telescope:users//Applications/MAMP/websites/stewardsof/packages/telescope-users/package-tap.i18n","telescope:users/lib/namespace.js","telescope:users/lib/roles.js","telescope:users/lib/permissions.js","telescope:users/lib/users.js","telescope:users/lib/avatars.js","telescope:users/lib/callbacks.js","telescope:users/lib/modules.js","telescope:users/lib/helpers.js","telescope:users/lib/menu.js","telescope:users/lib/pubsub.js","telescope:users/lib/methods.js","telescope:users/lib/routes.js","telescope:users/lib/server/publications.js","telescope:users/lib/server/create_user.js","telescope:users//Applications/MAMP/websites/stewardsof/packages/telescope-users/i18n/ar.i18n.json","telescope:users//Applications/MAMP/websites/stewardsof/packages/telescope-users/i18n/bg.i18n.json","telescope:users//Applications/MAMP/websites/stewardsof/packages/telescope-users/i18n/de.i18n.json","telescope:users//Applications/MAMP/websites/stewardsof/packages/telescope-users/i18n/el.i18n.json","telescope:users//Applications/MAMP/websites/stewardsof/packages/telescope-users/i18n/en.i18n.json","telescope:users//Applications/MAMP/websites/stewardsof/packages/telescope-users/i18n/es.i18n.json","telescope:users//Applications/MAMP/websites/stewardsof/packages/telescope-users/i18n/fr.i18n.json","telescope:users//Applications/MAMP/websites/stewardsof/packages/telescope-users/i18n/it.i18n.json","telescope:users//Applications/MAMP/websites/stewardsof/packages/telescope-users/i18n/nl.i18n.json","telescope:users//Applications/MAMP/websites/stewardsof/packages/telescope-users/i18n/pl.i18n.json","telescope:users//Applications/MAMP/websites/stewardsof/packages/telescope-users/i18n/pt-BR.i18n.json","telescope:users//Applications/MAMP/websites/stewardsof/packages/telescope-users/i18n/ro.i18n.json","telescope:users//Applications/MAMP/websites/stewardsof/packages/telescope-users/i18n/ru.i18n.json","telescope:users//Applications/MAMP/websites/stewardsof/packages/telescope-users/i18n/sv.i18n.json","telescope:users//Applications/MAMP/websites/stewardsof/packages/telescope-users/i18n/tr.i18n.json","telescope:users//Applications/MAMP/websites/stewardsof/packages/telescope-users/i18n/vi.i18n.json","telescope:users//Applications/MAMP/websites/stewardsof/packages/telescope-users/i18n/zh-CN.i18n.json"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iH;;AAEA,+D;AACA,gD;;;;;;;;;;;;;;;;;;;ACHA,G;AACA,4B;AACA,mB;AACA,G;AACA,qB;;AAEA,yC;AACA,4C;AACA,yB;AACA,wB;AACA,Y;AACA,2B;AACA,K;AACA,gD;AACA,8C;AACA,U;AACA,wB;AACA,G;AACA,E;;;;;;;;;;;;;;;;;;;AClBA,G;AACA,kB;AACA,sB;AACA,G;AACA,c;;AAEA,G;AACA,8B;AACA,iE;AACA,G;AACA,0C;AACA,O;AACA,2C;AACA,oC;AACA,e;AACA,uC;AACA,G;AACA,E;AACA,oC;;AAEA,G;AACA,kC;AACA,iE;AACA,sF;AACA,G;AACA,oD;AACA,O;AACA,2C;AACA,4B;AACA,qE;AACA,0C;AACA,Y;AACA,qD;AACA,uC;AACA,K;AACA,e;AACA,uC;AACA,G;AACA,E;;AAEA,oC;;AAEA,4C;AACA,O;AACA,2C;AACA,4D;AACA,e;AACA,uC;AACA,G;AACA,E;AACA,wC;;AAEA,sB;AACA,yC;AACA,2B;AACA,mC;AACA,O;AACA,gC;AACA,0C;AACA,I;AACA,0B;AACA,kC;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;AC/DA,G;AACA,wB;AACA,uB;AACA,G;AACA,e;;AAEA,G;AACA,mD;AACA,uC;AACA,G;AACA,kC;AACA,iD;;AAEA,0B;AACA,oD;AACA,kE;AACA,K;;AAEA,wE;AACA,G;AACA,c;AACA,E;;AAEA,wC;AACA,6E;AACA,iD;AACA,2E;AACA,G;AACA,c;AACA,E;;AAEA,8C;AACA,8D;AACA,8B;AACA,E;;AAEA,mD;AACA,wE;AACA,E;;;AAGA,+C;AACA,8D;AACA,8B;AACA,E;;AAEA,oD;AACA,yE;AACA,E;;AAEA,+C;AACA,8D;;AAEA,c;AACA,8C;AACA,oC;AACA,gB;AACA,iD;AACA,mC;AACA,kB;AACA,Y;AACA,mB;AACA,K;AACA,U;AACA,gB;AACA,G;AACA,E;;AAEA,kD;AACA,2C;AACA,E;;AAEA,+C;AACA,2C;AACA,E;;AAEA,G;AACA,sC;AACA,wD;AACA,uD;AACA,G;AACA,4C;AACA,8D;;AAEA,2B;AACA,iB;AACA,G;;AAEA,wC;AACA,kD;;AAEA,kC;AACA,E;;AAEA,kD;AACA,0C;AACA,wC;AACA,E;;AAEA,G;AACA,qC;AACA,wD;AACA,6D;AACA,G;AACA,gD;;AAEA,mC;AACA,iB;AACA,G;;AAEA,qH;AACA,sG;;AAEA,mC;;AAEA,E;;AAEA,a;AACA,iF;AACA,wD;AACA,6D;AACA,G;AACA,4C;;AAEA,6C;AACA,6C;AACA,E;;AAEA,oC;AACA,wD;AACA,E;;;;;;;;;;;;;;;;;;;AClIA,G;AACA,c;AACA,uB;AACA,G;AACA,4C;AACA,W;AACA,gB;AACA,I;AACA,U;AACA,iB;AACA,kB;AACA,I;AACA,Y;AACA,gB;AACA,kB;AACA,G;AACA,G;;AAEA,G;AACA,mB;AACA,uB;AACA,G;AACA,+C;AACA,K;AACA,0B;AACA,I;AACA,Q;AACA,iB;AACA,mB;AACA,oC;AACA,e;AACA,a;AACA,K;AACA,I;AACA,K;AACA,uB;AACA,I;AACA,iB;AACA,iB;AACA,iB;AACA,kB;AACA,I;AACA,K;AACA,+G;AACA,I;AACA,gB;AACA,iB;AACA,mB;AACA,iB;AACA,kB;AACA,mC;AACA,I;AACA,K;AACA,yC;AACA,I;AACA,sB;AACA,oC;AACA,iB;AACA,kB;AACA,I;AACA,K;AACA,uC;AACA,I;AACA,mB;AACA,oC;AACA,iB;AACA,kB;AACA,I;AACA,K;AACA,iC;AACA,I;AACA,U;AACA,iB;AACA,mB;AACA,oC;AACA,mB;AACA,mC;AACA,sF;AACA,I;AACA,K;AACA,kF;AACA,I;AACA,c;AACA,iB;AACA,iB;AACA,kB;AACA,I;AACA,K;AACA,qC;AACA,I;AACA,Y;AACA,iB;AACA,iB;AACA,kB;AACA,mB;AACA,e;AACA,gB;AACA,M;AACA,gC;AACA,I;AACA,K;AACA,oB;AACA,I;AACA,U;AACA,iB;AACA,kB;AACA,iB;AACA,kB;AACA,I;AACA,K;AACA,oB;AACA,I;AACA,c;AACA,iB;AACA,iB;AACA,kB;AACA,I;AACA,K;AACA,6D;AACA,I;AACA,a;AACA,iB;AACA,mB;AACA,oC;AACA,mB;AACA,e;AACA,gB;AACA,K;AACA,I;AACA,K;AACA,6E;AACA,I;AACA,S;AACA,iB;AACA,iB;AACA,kB;AACA,I;AACA,K;AACA,+B;AACA,I;AACA,oB;AACA,iB;AACA,mB;AACA,iB;AACA,kB;AACA,oC;AACA,oC;AACA,I;AACA,K;AACA,wC;AACA,I;AACA,oB;AACA,oC;AACA,iB;AACA,kB;AACA,I;AACA,K;AACA,qC;AACA,I;AACA,iB;AACA,oC;AACA,iB;AACA,kB;AACA,I;AACA,K;AACA,iC;AACA,I;AACA,Y;AACA,iB;AACA,kC;AACA,iB;AACA,kB;AACA,mB;AACA,mC;AACA,G;AACA,G;;AAEA,G;AACA,e;AACA,uB;AACA,G;AACA,kC;AACA,Q;AACA,iB;AACA,iB;AACA,kB;AACA,I;AACA,a;AACA,iB;AACA,qC;AACA,iB;AACA,kB;AACA,I;AACA,W;AACA,mB;AACA,kB;AACA,I;AACA,uB;AACA,iB;AACA,oC;AACA,kB;AACA,I;AACA,wB;AACA,kB;AACA,kB;AACA,I;AACA,c;AACA,e;AACA,iB;AACA,kB;AACA,I;AACA,Y;AACA,kB;AACA,mB;AACA,0B;AACA,e;AACA,gB;AACA,K;AACA,I;AACA,Y;AACA,iB;AACA,mB;AACA,kB;AACA,I;AACA,yC;AACA,qC;AACA,kB;AACA,I;AACA,a;AACA,iB;AACA,mB;AACA,kB;AACA,G;AACA,G;;AAEA,gC;;AAEA,G;AACA,2C;AACA,G;AACA,iC;;AAEA,G;AACA,+B;AACA,G;;AAEA,a;AACA,wD;AACA,uD;AACA,G;;;;;;;;;;;;;;;;;;;;ACzPA,kB;AACA,2B;AACA,0C;AACA,E;;;;;;;;;;;;;;;;;;;ACHA,sD;AACA,sD;AACA,sD;;AAEA,G;AACA,sD;AACA,G;AACA,4C;;AAEA,oC;AACA,0D;;AAEA,8F;AACA,wC;AACA,gE;AACA,G;AACA,E;AACA,G;;AAEA,G;AACA,4D;AACA,G;AACA,kE;AACA,iD;AACA,2E;AACA,0G;AACA,G;AACA,G;;AAEA,G;AACA,mB;AACA,G;AACA,kE;AACA,2B;AACA,iE;AACA,G;AACA,G;;AAEA,G;AACA,kG;AACA,G;AACA,uB;AACA,oE;AACA,mB;AACA,yD;AACA,+E;AACA,sD;AACA,+D;AACA,0D;AACA,mE;AACA,8G;AACA,O;;AAEA,6C;AACA,0B;AACA,0C;AACA,2C;AACA,O;;AAEA,K;AACA,K;AACA,C;;AAEA,sD;AACA,sD;AACA,sD;;AAEA,G;AACA,iC;AACA,wE;AACA,yC;AACA,G;AACA,oC;AACA,gF;AACA,wB;AACA,mC;AACA,gB;AACA,e;AACA,uB;AACA,mB;AACA,sB;AACA,sB;AACA,uB;AACA,yB;AACA,0B;AACA,2B;AACA,K;AACA,I;AACA,wC;;AAEA,mE;AACA,sB;AACA,yC;AACA,4D;AACA,G;;AAEA,6C;AACA,8B;AACA,uD;AACA,iC;AACA,mD;AACA,U;AACA,+C;AACA,G;;AAEA,kC;AACA,4E;;AAEA,mF;AACA,6H;;AAEA,iF;;AAEA,c;AACA,C;AACA,mD;;;AAGA,qC;AACA,yC;AACA,C;AACA,uE;;;;;;;;;;;;;;;;;;;;ACxHA,yC;AACA,G;AACA,0B;AACA,Y;AACA,I;AACA,G;AACA,2B;AACA,Y;AACA,I;AACA,G;AACA,mC;AACA,Y;AACA,I;AACA,G;AACA,qC;AACA,Y;AACA,I;AACA,G;AACA,8B;AACA,Y;AACA,G;AACA,G;;AAEA,sC;AACA,G;AACA,6B;AACA,Y;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;AC7BA,oB;AACA,oB;AACA,oB;;AAEA,G;AACA,kE;AACA,uB;AACA,G;AACA,qC;AACA,M;AACA,sB;AACA,2B;AACA,2F;AACA,8C;AACA,G;AACA,gB;AACA,uB;AACA,gB;AACA,G;AACA,E;AACA,4E;AACA,oG;;AAEA,G;AACA,iF;AACA,uB;AACA,G;AACA,wC;AACA,oC;AACA,c;AACA,U;AACA,iH;AACA,G;AACA,E;AACA,kF;AACA,0G;;AAEA,G;AACA,2B;AACA,uF;AACA,8B;AACA,G;AACA,mD;AACA,oC;AACA,c;AACA,G;AACA,8F;AACA,0E;AACA,4F;AACA,E;AACA,sG;;AAEA,G;AACA,4B;AACA,uB;AACA,G;AACA,wC;AACA,iF;AACA,8D;AACA,gC;AACA,mF;AACA,4C;AACA,G;AACA,c;AACA,E;AACA,kF;AACA,0G;;AAEA,G;AACA,2B;AACA,uB;AACA,G;AACA,uC;AACA,iF;AACA,6D;AACA,+B;AACA,+H;AACA,2C;AACA,G;AACA,c;AACA,E;AACA,gF;AACA,wG;;AAEA,G;AACA,qB;AACA,uB;AACA,G;AACA,kC;AACA,6C;AACA,gC;AACA,Q;AACA,gB;AACA,G;AACA,E;AACA,sE;AACA,8F;;AAEA,G;AACA,0B;AACA,uB;AACA,G;AACA,sC;AACA,6C;AACA,6C;AACA,E;AACA,8E;AACA,sG;;AAEA,G;AACA,wC;AACA,uB;AACA,G;AACA,6C;AACA,+E;AACA,+D;AACA,mB;AACA,K;AACA,G;AACA,c;AACA,E;AACA,4F;AACA,oH;;AAEA,G;AACA,qB;AACA,uB;AACA,8B;AACA,+B;AACA,G;AACA,+D;AACA,+B;AACA,sC;;AAEA,0F;AACA,oG;;AAEA,uB;AACA,2D;AACA,iE;AACA,U;AACA,wB;AACA,G;AACA,E;AACA,8H;;AAEA,G;AACA,qB;AACA,uB;AACA,8B;AACA,+B;AACA,G;AACA,wD;AACA,a;AACA,I;AACA,4F;AACA,oG;;AAEA,8B;AACA,iC;AACA,qC;;AAEA,G;AACA,E;AACA,0E;;AAEA,G;AACA,qC;AACA,uB;AACA,uB;AACA,G;AACA,0C;AACA,oD;AACA,E;AACA,oF;;AAEA,G;AACA,uC;AACA,uB;AACA,uB;AACA,G;AACA,4C;AACA,sD;AACA,E;AACA,wF;;AAEA,mB;AACA,mB;AACA,mB;;AAEA,8C;AACA,yE;AACA,E;;AAEA,kD;AACA,iC;AACA,6C;AACA,W;AACA,8E;AACA,yD;AACA,E;;AAEA,gE;AACA,sB;AACA,+B;AACA,qB;AACA,gB;AACA,+C;AACA,K;AACA,K;AACA,uB;AACA,E;;AAEA,iD;AACA,gD;AACA,kC;AACA,uB;AACA,+B;AACA,uH;AACA,8G;AACA,Q;AACA,2B;AACA,4B;AACA,G;AACA,E;;AAEA,G;AACA,8D;AACA,2B;AACA,yB;AACA,wB;AACA,G;AACA,wD;AACA,gB;AACA,6B;;AAEA,mB;AACA,mB;AACA,mC;AACA,8D;AACA,Y;AACA,qB;AACA,iE;AACA,Y;AACA,iB;AACA,+B;AACA,Y;AACA,G;;AAEA,iB;AACA,oB;AACA,6B;AACA,Y;AACA,iB;AACA,2B;AACA,Y;AACA,qB;AACA,+B;AACA,Y;AACA,wB;AACA,kC;AACA,Y;AACA,wB;AACA,kC;AACA,G;AACA,U;AACA,e;AACA,yC;AACA,I;AACA,E;;;AAGA,8C;AACA,iD;AACA,E;;AAEA,gC;AACA,6C;AACA,E;;AAEA,yC;AACA,4D;AACA,E;;AAEA,sC;AACA,0D;AACA,E;;;AAGA,G;AACA,kC;AACA,kE;AACA,G;AACA,uC;AACA,4C;AACA,8D;AACA,kC;AACA,4B;AACA,K;AACA,gB;AACA,E;;AAEA,G;AACA,iD;AACA,uB;AACA,G;AACA,6C;AACA,kE;AACA,0D;AACA,K;AACA,E;AACA,4F;AACA,oH;;;;;;;;;;;;;;;;;;;ACxTA,qC;AACA,G;AACA,wB;AACA,+B;AACA,mF;AACA,M;AACA,qB;AACA,oC;AACA,I;AACA,G;AACA,wB;AACA,+B;AACA,2E;AACA,M;AACA,0B;AACA,oC;AACA,I;AACA,G;AACA,sB;AACA,sB;AACA,4B;AACA,mB;AACA,I;AACA,G;AACA,qB;AACA,sB;AACA,2B;AACA,G;AACA,G;;AAEA,2C;AACA,sC;AACA,G;AACA,6B;AACA,mB;AACA,kC;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;ACrCA,oC;AACA,oC;AACA,oC;;AAEA,G;AACA,oC;AACA,0B;AACA,G;AACA,kB;;AAEA,G;AACA,4C;AACA,iB;AACA,G;;AAEA,0D;;AAEA,2C;AACA,uG;;AAEA,wB;AACA,yE;AACA,6C;AACA,mD;AACA,+B;AACA,sC;AACA,G;;AAEA,G;AACA,qF;AACA,iB;AACA,G;AACA,iC;AACA,mC;AACA,E;;AAEA,G;AACA,mE;AACA,iB;AACA,G;AACA,iC;AACA,Y;AACA,8B;AACA,yB;AACA,gC;AACA,iB;AACA,2B;AACA,yB;AACA,0B;AACA,6C;AACA,mD;AACA,+B;AACA,sC;AACA,iH;AACA,E;;;AAGA,G;AACA,8D;AACA,2B;AACA,yB;AACA,wB;AACA,G;AACA,+D;AACA,gB;AACA,6B;;AAEA,mB;AACA,mB;AACA,mC;AACA,8D;AACA,Y;AACA,qB;AACA,iE;AACA,Y;AACA,iB;AACA,+B;AACA,Y;AACA,G;;AAEA,iB;AACA,oB;AACA,6B;AACA,Y;AACA,iB;AACA,2B;AACA,Y;AACA,qB;AACA,+B;AACA,Y;AACA,wB;AACA,kC;AACA,Y;AACA,wB;AACA,kC;AACA,G;AACA,U;AACA,e;AACA,yC;AACA,I;AACA,E;;;;;;;;;;;;;;;;;;;ACpGA,6D;;AAEA,iC;;AAEA,+E;;AAEA,+B;;AAEA,E;;AAEA,gB;AACA,oD;AACA,I;AACA,mG;AACA,0B;;AAEA,oC;AACA,qC;AACA,8C;;AAEA,8E;;AAEA,wC;AACA,sD;AACA,6E;AACA,K;;AAEA,sF;AACA,0B;AACA,qE;AACA,K;;AAEA,6D;AACA,4G;AACA,4D;AACA,mD;AACA,qC;AACA,2G;AACA,O;;AAEA,K;;AAEA,iE;AACA,oD;AACA,2C;AACA,kD;AACA,sD;AACA,sC;AACA,sD;AACA,mH;AACA,S;;AAEA,S;AACA,O;;AAEA,gD;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;;ACzDA,4B;;AAEA,uB;;AAEA,iD;;AAEA,sB;AACA,Y;AACA,0E;AACA,M;AACA,I;;AAEA,wB;AACA,2E;AACA,I;;AAEA,oB;;AAEA,+D;AACA,qF;;AAEA,0C;AACA,mC;AACA,qE;AACA,Y;AACA,c;AACA,oC;AACA,Q;AACA,K;;AAEA,I;;AAEA,yB;AACA,gD;AACA,I;;AAEA,+B;AACA,iF;AACA,I;;AAEA,kB;;AAEA,G;;AAEA,sC;;AAEA,iD;AACA,sB;AACA,Y;AACA,qE;AACA,M;AACA,I;AACA,oB;AACA,mD;AACA,+G;AACA,Y;AACA,gB;AACA,M;AACA,I;AACA,kB;AACA,G;;AAEA,4B;;AAEA,c;;AAEA,6B;AACA,oB;AACA,yB;AACA,gC;AACA,gC;AACA,S;AACA,kB;AACA,K;AACA,K;;AAEA,iB;;AAEA,qC;AACA,yB;AACA,6B;AACA,sC;AACA,K;;AAEA,c;;AAEA,qC;AACA,sB;AACA,0B;AACA,uC;AACA,iC;AACA,qE;AACA,4B;AACA,wC;AACA,yD;AACA,U;AACA,oB;AACA,c;AACA,iC;AACA,O;AACA,K;AACA,K;;AAEA,4B;AACA,gC;AACA,0B;AACA,sC;AACA,K;;AAEA,c;;AAEA,oC;AACA,4C;AACA,2B;AACA,K;;AAEA,qC;;AAEA,sC;AACA,wB;AACA,4B;AACA,sB;AACA,c;AACA,8B;AACA,Q;AACA,K;AACA,K;;AAEA,G;;;;;;;;;;;;;;;;;;;AChIA,gC;AACA,iD;AACA,gD;AACA,sE;AACA,qE;AACA,+F;AACA,a;AACA,uD;AACA,G;AACA,Y;AACA,G;;AAEA,6C;AACA,6C;AACA,8D;AACA,e;AACA,G;;AAEA,oD;AACA,6C;AACA,8D;AACA,e;AACA,G;;AAEA,sD;AACA,6C;AACA,8D;AACA,e;AACA,G;;AAEA,2B;;AAEA,0C;AACA,4F;AACA,c;AACA,G;;AAEA,yD;AACA,0B;;AAEA,4C;AACA,wG;AACA,wC;AACA,gF;AACA,G;AACA,Y;AACA,G;;AAEA,iD;AACA,qD;AACA,sF;;AAEA,+C;AACA,sC;AACA,wB;AACA,U;AACA,c;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;;AC1DA,8C;AACA,gE;AACA,c;AACA,G;;;;;;;;;;;;;;;;;;ACHA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,ymD;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,gxD;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,k0D;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,+zD;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,gD;AACA,kB;AACA,8kE;AACA,gD;AACA,mD;;;;;;;;;;;;;;;;;;;ACXA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,64E;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,06E;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,gwD;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,w3D;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,msD;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,kD;AACA,qC;AACA,C;;AAEA,6D;AACA,gD;AACA,C;;AAEA,k1D;AACA,sD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,m2D;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,+0D;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,mrE;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,krD;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,stD;AACA,mD;;;;;;;;;;;;;;;;;;;AChBA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,kD;AACA,qC;AACA,C;;AAEA,6D;AACA,gD;AACA,C;;AAEA,wsC;AACA,sD","file":"/packages/telescope_users.js","sourcesContent":["TAPi18n.packages[\"telescope:users\"] = {\"translation_function_name\":\"__\",\"helper_name\":\"_\",\"namespace\":\"project\"};\n\n// define package's translation function (proxy to the i18next)\n__ = TAPi18n._getPackageI18nextProxy(\"project\");\n","/**\n * Telescope Users namespace\n * @namespace Users\n */\nUsers = Meteor.users;\n\nUsers.getUser = function (userOrUserId) {\n  if (typeof userOrUserId === \"undefined\") {\n    if (!Meteor.user()) {\n      throw new Error();\n    } else {\n      return Meteor.user();\n    }\n  } else if (typeof userOrUserId === \"string\") {\n    return Meteor.users.findOne(userOrUserId);\n  } else {\n    return userOrUserId;\n  }\n};\n","/**\n * Telescope roles\n * @namespace Users.is\n */\nUsers.is = {};\n\n/**\n * Check if a user is an admin\n * @param {Object|string} userOrUserId - The user or their userId\n */\nUsers.is.admin = function (userOrUserId) {\n  try {\n    var user = Users.getUser(userOrUserId);\n    return !!user && !!user.isAdmin;\n  } catch (e) {\n    return false; // user not logged in\n  }\n};\nUsers.is.adminById = Users.is.admin;\n\n/**\n * Check if a user owns a document\n * @param {Object|string} userOrUserId - The user or their userId\n * @param {Object} document - The document to check (post, comment, user object, etc.)\n */\nUsers.is.owner = function (userOrUserId, document) {\n  try {\n    var user = Users.getUser(userOrUserId);\n    if (!!document.userId) {\n      // case 1: document is a post or a comment, use userId to check\n      return user._id === document.userId;\n    } else {\n      // case 2: document is a user, use _id to check\n      return user._id === document._id;\n    }\n  } catch (e) {\n    return false; // user not logged in\n  }\n};\n\nUsers.is.ownerById = Users.is.owner;\n\nUsers.is.invited = function (userOrUserId) {\n  try {\n    var user = Users.getUser(userOrUserId);\n    return Users.is.admin(user) || user.telescope.isInvited;\n  } catch (e) {\n    return false; // user not logged in\n  }\n};\nUsers.is.invitedById = Users.is.invited;\n\nMeteor.users.helpers({\n  // conflicts with user.isAdmin property\n  // isAdmin: function () {\n  //   return Users.is.admin(this);\n  // },\n  isOwner: function (document) {\n    return Users.is.owner(this, document);\n  },\n  isInvited: function () {\n    return Users.is.invited(this);\n  }\n});","/**\n * Telescope permissions\n * @namespace Users.can\n */\nUsers.can = {};\n\n/**\n * Permissions checks.  Return true if all is well.\n * @param {Object} user - Meteor.user()\n */\nUsers.can.view = function (user) {\n  if (Settings.get('requireViewInvite', false)) {\n\n    if (Meteor.isClient) {\n      // on client only, default to the current user\n      user = (typeof user === 'undefined') ? Meteor.user() : user;\n    }\n\n    return (!!user && (Users.is.admin(user) || Users.is.invited(user)));\n  }\n  return true;\n};\n\nUsers.can.viewById = function (userId) {\n  // if an invite is required to view, run permission check, else return true\n  if (Settings.get('requireViewInvite', false)) {\n    return !!userId ? Users.can.view(Meteor.users.findOne(userId)) : false;\n  }\n  return true;\n};\n\nUsers.can.viewPendingPosts = function (user) {\n  user = (typeof user === 'undefined') ? Meteor.user() : user;\n  return Users.is.admin(user);\n};\n\nUsers.can.viewPendingPost = function (user, post) {\n  return Users.is.owner(user, post) || Users.can.viewPendingPosts(user);\n};\n\n\nUsers.can.viewRejectedPosts = function (user) {\n  user = (typeof user === 'undefined') ? Meteor.user() : user;\n  return Users.is.admin(user);\n};\n\nUsers.can.viewRejectedPost = function (user, post) {\n  return Users.is.owner(user, post) || Users.can.viewRejectedPosts(user);\n};\n\nUsers.can.post = function (user, returnError) {\n  user = (typeof user === 'undefined') ? Meteor.user() : user;\n\n  if (!user) {\n    return returnError ? \"no_account\" : false;\n  } else if (Users.is.admin(user)) {\n    return true;\n  } else if (Settings.get('requirePostInvite')) {\n    if (user.telescope.isInvited) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return true;\n  }\n};\n\nUsers.can.comment = function (user, returnError) {\n  return Users.can.post(user, returnError);\n};\n\nUsers.can.vote = function (user, returnError) {\n  return Users.can.post(user, returnError);\n};\n\n/**\n * Check if a user can edit a document\n * @param {Object} user - The user performing the action\n * @param {Object} document - The document being edited\n */\nUsers.can.edit = function (user, document) {\n  user = (typeof user === 'undefined') ? Meteor.user() : user;\n\n  if (!user || !document) {\n    return false;\n  }\n\n  var adminCheck = Users.is.admin(user);\n  var ownerCheck = Users.is.owner(user, document);\n\n  return adminCheck || ownerCheck;\n};\n\nUsers.can.editById = function (userId, document) {\n  var user = Meteor.users.findOne(userId);\n  return Users.can.edit(user, document);\n};\n\n/**\n * Check if a user can submit a field\n * @param {Object} user - The user performing the action\n * @param {Object} field - The field being edited or inserted\n */\nUsers.can.submitField = function (user, field) {\n\n  if (!field.editableBy || !user) {\n    return false;\n  }\n\n  var adminCheck = _.contains(field.editableBy, \"admin\") && Users.is.admin(user); // is the field editable by admins?\n  var memberCheck = _.contains(field.editableBy, \"member\"); // is the field editable by regular users?\n\n  return adminCheck || memberCheck;\n\n};\n\n/** @function\n * Check if a user can edit a field – for now, identical to Users.can.submitField\n * @param {Object} user - The user performing the action\n * @param {Object} field - The field being edited or inserted\n */\nUsers.can.editField = Users.can.submitField;\n\nUsers.can.currentUserEdit = function (item) {\n  return Users.can.edit(Meteor.user(), item);\n};\n\nUsers.can.invite = function (user) {\n  return Users.is.invited(user) || Users.is.admin(user);\n};\n","/**\n * Vote schema\n * @type {SimpleSchema}\n */\nTelescope.schemas.votes = new SimpleSchema({\n  itemId: {\n    type: String\n  },\n  power: {\n    type: Number,\n    optional: true\n  },\n  votedAt: {\n    type: Date, \n    optional: true\n  }\n});\n\n/**\n * User Data schema\n * @type {SimpleSchema}\n */\nTelescope.schemas.userData = new SimpleSchema({\n  /**\n    Bio (Markdown version)\n  */\n  bio: {\n    type: String,\n    optional: true,\n    editableBy: [\"member\", \"admin\"],\n    autoform: {\n      rows: 5\n    }\n  },\n  /**\n    Total comment count\n  */\n  commentCount: {\n    type: Number,\n    public: true,\n    optional: true\n  },\n  /**\n    The name displayed throughout the app. Can contain spaces and special characters, doesn't need to be unique\n  */\n  displayName: {\n    type: String,\n    optional: true,\n    public: true,\n    profile: true,\n    editableBy: [\"member\", \"admin\"]\n  },\n  /**\n    An array containing comment downvotes\n  */\n  downvotedComments: {\n    type: [Telescope.schemas.votes],\n    public: true,\n    optional: true\n  },\n  /**\n    An array containing posts downvotes\n  */\n  downvotedPosts: {\n    type: [Telescope.schemas.votes],\n    public: true,\n    optional: true\n  },\n  /**\n    The user's email. Modifiable.\n  */\n  email: {\n    type: String,\n    optional: true,\n    regEx: SimpleSchema.RegEx.Email,\n    required: true,\n    editableBy: [\"member\", \"admin\"]\n    // unique: true // note: find a way to fix duplicate accounts before enabling this\n  },\n  /**\n    A hash of the email, used for Gravatar // TODO: change this when email changes\n  */\n  emailHash: {\n    type: String,\n    public: true,\n    optional: true\n  },\n  /**\n    The HTML version of the bio field\n  */\n  htmlBio: {\n    type: String,\n    public: true,\n    profile: true,\n    optional: true,\n    autoform: {\n      omit: true\n    },\n    template: \"user_profile_bio\"\n  },\n  /**\n    The user's karma\n  */\n  karma: {\n    type: Number,\n    decimal: true,\n    public: true,\n    optional: true\n  },\n  /**\n    Total post count\n  */\n  postCount: {\n    type: Number,\n    public: true,\n    optional: true\n  },\n  /**\n    A blackbox modifiable object to store the user's settings\n  */\n  settings: {\n    type: Object,\n    optional: true,\n    editableBy: [\"member\", \"admin\"],\n    blackbox: true,\n    autoform: {\n      omit: true\n    }\n  },\n  /**\n    The user's profile URL slug // TODO: change this when displayName changes\n  */\n  slug: {\n    type: String,\n    public: true,\n    optional: true\n  },\n  /**\n    The user's Twitter username\n  */\n  twitterUsername: {\n    type: String,\n    optional: true,\n    public: true,\n    profile: true,\n    editableBy: [\"member\", \"admin\"],\n    template: \"user_profile_twitter\"\n  },\n  /**\n    An array containing comments upvotes\n  */\n  upvotedComments: {\n    type: [Telescope.schemas.votes],\n    public: true,\n    optional: true\n  },\n  /**\n    An array containing posts upvotes\n  */\n  upvotedPosts: {\n    type: [Telescope.schemas.votes],\n    public: true,\n    optional: true\n  },\n  /**\n    A link to the user's homepage\n  */\n  website: {\n    type: String,\n    regEx: SimpleSchema.RegEx.Url,\n    public: true,\n    profile: true,\n    optional: true,\n    editableBy: [\"member\", \"admin\"]\n  }\n});\n\n/**\n * Users schema\n * @type {SimpleSchema}\n */\nUsers.schema = new SimpleSchema({ \n  _id: {\n    type: String,\n    public: true,\n    optional: true\n  },\n  username: {\n    type: String,\n    // regEx: /^[a-z0-9A-Z_]{3,15}$/,\n    public: true,\n    optional: true\n  },\n  emails: {\n    type: [Object],\n    optional: true\n  },\n  \"emails.$.address\": {\n    type: String,\n    regEx: SimpleSchema.RegEx.Email,\n    optional: true\n  },\n  \"emails.$.verified\": {\n    type: Boolean,\n    optional: true\n  },\n  createdAt: {\n    type: Date,\n    public: true,\n    optional: true\n  },\n  isAdmin: {\n    type: Boolean,\n    optional: true,\n    editableBy: [\"admin\"],\n    autoform: {\n      omit: true\n    }\n  },\n  profile: {\n    type: Object,\n    optional: true,\n    blackbox: true\n  },\n  telescope: { // telescope-specific data\n    type: Telescope.schemas.userData,\n    optional: true\n  },\n  services: {\n    type: Object,\n    optional: true,\n    blackbox: true\n  }\n});\n\nUsers.schema.internationalize();\n\n/**\n * Attach schema to Meteor.users collection\n */\nUsers.attachSchema(Users.schema);\n\n/**\n * Users collection permissions\n */\n\nUsers.allow({\n  update: _.partial(Telescope.allowCheck, Meteor.users),\n  remove: _.partial(Telescope.allowCheck, Meteor.users)\n});\n\n","Avatar.options = {\n  fallbackType: 'initials',\n  emailHashProperty: 'telescope.emailHash'\n};\n","//////////////////////////////////////////////////////\n// Collection Hooks                                 //\n//////////////////////////////////////////////////////\n\n/**\n * Generate HTML body from Markdown on user bio insert\n */\nUsers.after.insert(function (userId, user) {\n\n  // run create user async callbacks\n  Telescope.callbacks.runAsync(\"onCreateUserAsync\", user);\n\n  // check if all required fields have been filled in. If so, run profile completion callbacks\n  if (Users.hasCompletedProfile(user)) {\n    Telescope.callbacks.runAsync(\"profileCompletedAsync\", user);\n  }\n  \n});\n\n/**\n * Generate HTML body from Markdown when user bio is updated\n */\nUsers.before.update(function (userId, doc, fieldNames, modifier) {\n  // if bio is being modified, update htmlBio too\n  if (Meteor.isServer && modifier.$set && modifier.$set[\"telescope.bio\"]) {\n    modifier.$set[\"telescope.htmlBio\"] = Telescope.utils.sanitize(marked(modifier.$set[\"telescope.bio\"]));\n  }\n});\n\n/**\n * Disallow $rename\n */\nUsers.before.update(function (userId, doc, fieldNames, modifier) {\n  if (!!modifier.$rename) {\n    throw new Meteor.Error(\"illegal $rename operator detected!\");\n  }\n});\n\n/**\n * If user.telescope.email has changed, check for existing emails and change user.emails if needed\n */\n if (Meteor.isServer) {\n  Users.before.update(function (userId, doc, fieldNames, modifier) {\n    var user = doc;\n    // if email is being modified, update user.emails too\n    if (Meteor.isServer && modifier.$set && modifier.$set[\"telescope.email\"]) {\n      var newEmail = modifier.$set[\"telescope.email\"];\n      // check for existing emails and throw error if necessary\n      var userWithSameEmail = Users.findByEmail(newEmail);\n      if (userWithSameEmail && userWithSameEmail._id !== doc._id) {\n        throw new Meteor.Error(\"email_taken2\", i18n.t(\"this_email_is_already_taken\") + \" (\" + newEmail + \")\");\n      }\n\n      // if user.emails exists, change it too\n      if (!!user.emails) {\n        user.emails[0].address = newEmail;\n        modifier.$set.emails = user.emails;\n      }\n\n    }\n  });\n}\n\n//////////////////////////////////////////////////////\n// Callbacks                                        //\n//////////////////////////////////////////////////////\n\n/**\n * Set up user object on creation\n * @param {Object} user – the user object being iterated on and returned\n * @param {Object} options – user options\n */\nfunction setupUser (user, options) {\n  // ------------------------------ Properties ------------------------------ //\n  var userProperties = {\n    profile: options.profile || {},\n    telescope: {\n      karma: 0,\n      isInvited: false,\n      postCount: 0,\n      commentCount: 0,\n      invitedCount: 0,\n      upvotedPosts: [],\n      downvotedPosts: [],\n      upvotedComments: [],\n      downvotedComments: []\n    }\n  };\n  user = _.extend(user, userProperties);\n\n  // set email on user.telescope, and use it to generate email hash\n  if (options.email) {\n    user.telescope.email = options.email;\n    user.telescope.emailHash = Gravatar.hash(options.email);\n  }\n\n  // look in a few places for the displayName\n  if (user.profile.username) {\n    user.telescope.displayName = user.profile.username;\n  } else if (user.profile.name) {\n    user.telescope.displayName = user.profile.name;\n  } else {\n    user.telescope.displayName = user.username;\n  }\n\n  // create slug from display name\n  user.telescope.slug = Telescope.utils.slugify(user.telescope.displayName);\n\n  // if this is not a dummy account, and is the first user ever, make them an admin\n  user.isAdmin = (!user.profile.isDummy && Meteor.users.find({'profile.isDummy': {$ne: true}}).count() === 0) ? true : false;\n\n  Events.track('new user', {username: user.username, email: user.profile.email});\n\n  return user;\n}\nTelescope.callbacks.add(\"onCreateUser\", setupUser);\n\n\nfunction hasCompletedProfile (user) {\n  return Users.hasCompletedProfile(user);\n}\nTelescope.callbacks.add(\"profileCompletedChecks\", hasCompletedProfile);\n","\nTelescope.modules.add(\"profileDisplay\", [\n  {\n    template: 'user_info',\n    order: 1\n  },\n  {\n    template: 'user_posts',\n    order: 2\n  },\n  {\n    template: 'user_upvoted_posts',\n    order: 3\n  },\n  {\n    template: 'user_downvoted_posts',\n    order: 5\n  },\n  {\n    template: 'user_comments',\n    order: 5\n  }\n]);\n\nTelescope.modules.add(\"profileEdit\", [\n  {\n    template: 'user_account',\n    order: 1\n  }\n]);","////////////////////\n//  User Getters  //\n////////////////////\n\n/**\n * Get a user's username (unique, no special characters or spaces)\n * @param {Object} user\n */\nUsers.getUserName = function (user) {\n  try{\n    if (user.username)\n      return user.username;\n    if (user && user.services && user.services.twitter && user.services.twitter.screenName)\n      return user.services.twitter.screenName;\n  }\n  catch (error){\n    console.log(error);\n    return null;\n  }\n};\nUsers.helpers({getUserName: function () {return Users.getUserName(this);}});\nUsers.getUserNameById = function (userId) {return Users.getUserName(Meteor.users.findOne(userId))}; \n\n/**\n * Get a user's display name (not unique, can take special characters and spaces)\n * @param {Object} user\n */\nUsers.getDisplayName = function (user) {\n  if (typeof user === \"undefined\") {\n    return \"\";\n  } else {\n    return (user.telescope && user.telescope.displayName) ? user.telescope.displayName : Users.getUserName(user);\n  }\n};\nUsers.helpers({getDisplayName: function () {return Users.getDisplayName(this);}});\nUsers.getDisplayNameById = function (userId) {return Users.getDisplayName(Meteor.users.findOne(userId));};\n\n/**\n * Get a user's profile URL\n * @param {Object} user (note: we only actually need either the _id or slug properties)\n * @param {Boolean} isAbsolute\n */\nUsers.getProfileUrl = function (user, isAbsolute) {\n  if (typeof user === \"undefined\") {\n    return \"\";\n  }\n  var isAbsolute = typeof isAbsolute === \"undefined\" ? false : isAbsolute; // default to false\n  var prefix = isAbsolute ? Telescope.utils.getSiteUrl().slice(0,-1) : \"\";\n  return prefix + Router.path(\"user_profile\", {_idOrSlug: user.telescope.slug || user._id});\n};\nUsers.helpers({getProfileUrl: function (isAbsolute) {return Users.getProfileUrl(this, isAbsolute);}});\n\n/**\n * Get a user's Twitter name\n * @param {Object} user\n */\nUsers.getTwitterName = function (user) {\n  // return twitter name provided by user, or else the one used for twitter login\n  if(Telescope.utils.checkNested(user, 'profile', 'twitter')){\n    return user.profile.twitter;\n  }else if(Telescope.utils.checkNested(user, 'services', 'twitter', 'screenName')){\n    return user.services.twitter.screenName;\n  }\n  return null;\n};\nUsers.helpers({getTwitterName: function () {return Users.getTwitterName(this);}});\nUsers.getTwitterNameById = function (userId) {return Users.getTwitterName(Meteor.users.findOne(userId));};\n\n/**\n * Get a user's GitHub name\n * @param {Object} user\n */\nUsers.getGitHubName = function (user) {\n  // return twitter name provided by user, or else the one used for twitter login\n  if(Telescope.utils.checkNested(user, 'profile', 'github')){\n    return user.profile.github;\n  }else if(Telescope.utils.checkNested(user, 'services', 'github', 'screenName')){ // TODO: double-check this with GitHub login\n    return user.services.github.screenName;\n  }\n  return null;\n};\nUsers.helpers({getGitHubName: function () {return Users.getGitHubName(this);}});\nUsers.getGitHubNameById = function (userId) {return Users.getGitHubName(Meteor.users.findOne(userId));};\n\n/**\n * Get a user's email\n * @param {Object} user\n */\nUsers.getEmail = function (user) {\n  if(user.telescope && user.telescope.email){\n    return user.telescope.email;\n  }else{\n    return null;\n  }\n};\nUsers.helpers({getEmail: function () {return Users.getEmail(this);}});\nUsers.getEmailById = function (userId) {return Users.getEmail(Meteor.users.findOne(userId));};\n\n/**\n * Get a user's email hash\n * @param {Object} user\n */\nUsers.getEmailHash = function (user) {\n  // has to be this way to work with Gravatar\n  return Gravatar.hash(Users.getEmail(user));\n};\nUsers.helpers({getEmailHash: function () {return Users.getEmailHash(this);}});\nUsers.getEmailHashById = function (userId) {return Users.getEmailHash(Meteor.users.findOne(userId));};\n\n/**\n * Check if a user's profile is complete\n * @param {Object} user\n */\nUsers.userProfileComplete = function (user) {\n  for (var i = 0; i < Telescope.callbacks.profileCompletedChecks.length; i++) {\n    if (!Telescope.callbacks.profileCompletedChecks[i](user)) {\n      return false;\n    }\n  }\n  return true;\n};\nUsers.helpers({userProfileComplete: function () {return Users.userProfileComplete(this);}});\nUsers.userProfileCompleteById = function (userId) {return Users.userProfileComplete(Meteor.users.findOne(userId));};\n\n/**\n * Get a user setting\n * @param {Object} user\n * @param {String} settingName\n * @param {Object} defaultValue\n */\nUsers.getSetting = function (user, settingName, defaultValue) {\n  user = user || Meteor.user();\n  defaultValue = defaultValue || null;\n\n  // all settings should be in the user.telescope namespace, so add \"telescope.\" if needed\n  settingName = settingName.slice(0,10) === \"telescope.\" ? settingName : \"telescope.\" + settingName;\n\n  if (user.telescope) {\n    var settingValue = this.getProperty(user, settingName);\n    return (settingValue === null) ? defaultValue : settingValue;\n  } else {\n    return defaultValue;\n  }\n};\nUsers.helpers({getSetting: function (settingName, defaultValue) {return Users.getSetting(this, settingName, defaultValue);}});\n\n/**\n * Set a user setting\n * @param {Object} user\n * @param {String} settingName\n * @param {Object} defaultValue\n */\nUsers.setSetting = function (user, settingName, value) {\n  if (user) {\n    \n    // all settings should be in the user.telescope namespace, so add \"telescope.\" if needed\n    var field = settingName.slice(0,10) === \"telescope.\" ? settingName : \"telescope.\" + settingName;\n\n    var modifier = {$set: {}};\n    modifier.$set[field] = value;\n    Users.update(user._id, modifier);\n\n  }\n};\nUsers.helpers({setSetting: function () {return Users.setSetting(this);}});\n\n/**\n * Check if a user has upvoted a post\n * @param {Object} user\n * @param {Object} post\n */\nUsers.hasUpvoted = function (user, post) {\n  return user && _.include(post.upvoters, user._id);\n};\nUsers.helpers({hasUpvoted: function (post) {return Users.hasUpvoted(this, post);}});\n\n/**\n * Check if a user has downvoted a post\n * @param {Object} user\n * @param {Object} post\n */\nUsers.hasDownvoted = function (user, post) {\n  return user && _.include(post.downvoters, user._id);\n};\nUsers.helpers({hasDownvoted: function (post) {return Users.hasDownvoted(this, post);}});\n\n///////////////////\n// Other Helpers //\n///////////////////\n\nUsers.findLast = function (user, collection) {\n  return collection.findOne({userId: user._id}, {sort: {createdAt: -1}});\n};\n\nUsers.timeSinceLast = function (user, collection){\n  var now = new Date().getTime();\n  var last = this.findLast(user, collection);\n  if(!last)\n    return 999; // if this is the user's first post or comment ever, stop here\n  return Math.abs(Math.floor((now-last.createdAt)/1000));\n};\n\nUsers.numberOfItemsInPast24Hours = function (user, collection) {\n  var mNow = moment();\n  var items = collection.find({\n    userId: user._id,\n    createdAt: {\n      $gte: mNow.subtract(24, 'hours').toDate()\n    }\n  });\n  return items.count();\n};\n\nUsers.getProperty = function (object, property) {\n  // recursive function to get nested properties\n  var array = property.split('.');\n  if(array.length > 1){\n    var parent = array.shift();\n    // if our property is not at this level, call function again one level deeper if we can go deeper, else return null\n    return (typeof object[parent] === \"undefined\") ? null : this.getProperty(object[parent], array.join('.'));\n  }else{\n    // else return property\n    return object[array[0]];\n  }\n};\n\n/**\n * Build Users subscription with filter, sort, and limit args.\n * @param {String} filterBy\n * @param {String} sortBy\n * @param {Number} limit\n */\nUsers.getSubParams = function(filterBy, sortBy, limit) {\n  var find = {},\n      sort = {createdAt: -1};\n\n  switch(filterBy){\n    case 'invited':\n      // consider admins as invited\n      find = { $or: [{ isInvited: true }, { isAdmin: true }]};\n      break;\n    case 'uninvited':\n      find = { $and: [{ isInvited: false }, { isAdmin: false }]};\n      break;\n    case 'admin':\n      find = { isAdmin: true };\n      break;\n  }\n\n  switch(sortBy){\n    case 'username':\n      sort = { username: 1 };\n      break;\n    case 'karma':\n      sort = { karma: -1 };\n      break;\n    case 'postCount':\n      sort = { postCount: -1 };\n      break;\n    case 'commentCount':\n      sort = { commentCount: -1 };\n      break;\n    case 'invitedCount':\n      sort = { invitedCount: -1 };\n  }\n  return {\n    find: find,\n    options: { sort: sort, limit: limit }\n  };\n};\n\n\nUsers.updateAdmin = function (userId, admin) {\n  Users.update(userId, {$set: {isAdmin: admin}});\n};\n\nUsers.adminUsers = function () {\n  return this.find({isAdmin : true}).fetch();\n};\n\nUsers.getCurrentUserEmail = function () {\n  return Meteor.user() ? Users.getEmail(Meteor.user()) : '';\n};\n\nUsers.findByEmail = function (email) {\n  return Meteor.users.findOne({\"telescope.email\": email});\n};\n\n\n/**\n * @method Users.getRequiredFields\n * Get a list of all fields required for a profile to be complete.\n */\nUsers.getRequiredFields = function () {\n  var schema = Users.simpleSchema()._schema;\n  var fields = _.filter(_.keys(schema), function (fieldName) {\n    var field = schema[fieldName];\n    return !!field.required;\n  });\n  return fields;\n};\n\n/**\n * Check if the user has completed their profile.\n * @param {Object} user\n */\nUsers.hasCompletedProfile = function (user) {\n  return _.every(Users.getRequiredFields(), function (fieldName) {\n    return !!Telescope.getNestedProperty(user, fieldName);\n  });\n};\nUsers.helpers({hasCompletedProfile: function () {return Users.hasCompletedProfile(this);}});\nUsers.hasCompletedProfileById = function (userId) {return Users.hasCompletedProfile(Meteor.users.findOne(userId));};\n","Telescope.menuItems.add(\"userMenu\", [\n  {\n    route: function () {\n      var user = Meteor.user();\n      return Router.path('user_profile', {_idOrSlug: user && user.telescope.slug});\n    },\n    label: 'profile',\n    description: 'view_your_profile'\n  },\n  {\n    route: function () {\n      var user = Meteor.user();\n      return Router.path('user_edit', {slug: user && user.telescope.slug});\n    },\n    label: 'edit_account',\n    description: 'edit_your_profile'\n  },\n  {\n    route: 'settings',\n    label: 'settings',\n    description: 'settings',\n    adminOnly: true\n  },\n  {\n    route: 'signOut',\n    label: 'sign_out',\n    description: 'sign_out'\n  }\n]);\n\n// array containing items in the admin menu\nTelescope.menuItems.add(\"adminMenu\", [\n  {\n    route: 'users_dashboard',\n    label: 'users',\n    description: 'users_dashboard'\n  }\n]);","////////////////////////////////////\n// Publications and Subscriptions //\n////////////////////////////////////\n\n/**\n * Users pub/sub configs and methods\n * @namespace Users.pubsub\n */\nUsers.pubsub = {};\n\n/**\n * Default user object fields in publication\n * @type {Object}\n */\n\nvar publicFields = Users.simpleSchema().getPublicFields();\n\n// add public fields as specified in schema\nUsers.pubsub.publicProperties = _.object(publicFields, _.map(publicFields, function () {return true}));\n\n// add a few more fields\nUsers.pubsub.publicProperties = _.extend(Users.pubsub.publicProperties, {\n  'services.twitter.profile_image_url': true,\n  'services.twitter.profile_image_url_https': true,\n  'services.facebook.id': true,\n  'services.twitter.screenName': true,\n});\n\n/**\n * Options for your own user account (for security reasons, block certain properties)\n * @type {Object}\n */\nUsers.pubsub.hiddenProperties = {\n  'services.password.bcrypt': false\n};\n\n/**\n * Minimum required properties to display avatars and display names\n * @type {Object}\n */\nUsers.pubsub.avatarProperties = {\n  _id: true,\n  'telescope.emailHash': true,\n  'telescope.slug': true,\n  'telescope.displayName': true,\n  username: true,\n  'profile.username': true,\n  'profile.github': true,\n  'profile.twitter': true,\n  'services.twitter.profile_image_url': true,\n  'services.twitter.profile_image_url_https': true,\n  'services.facebook.id': true,\n  'services.twitter.screenName': true,\n  'services.github.screenName': true, // Github is not really used, but there are some mentions to it in the code\n};\n\n\n/**\n * Build Users subscription with filter, sort, and limit args.\n * @param {String} filterBy\n * @param {String} sortBy\n * @param {Number} limit\n */\nUsers.pubsub.getSubParams = function(filterBy, sortBy, limit) {\n  var find = {},\n      sort = {createdAt: -1};\n\n  switch(filterBy){\n    case 'invited':\n      // consider admins as invited\n      find = { $or: [{ isInvited: true }, { isAdmin: true }]};\n      break;\n    case 'uninvited':\n      find = { $and: [{ isInvited: false }, { isAdmin: false }]};\n      break;\n    case 'admin':\n      find = { isAdmin: true };\n      break;\n  }\n\n  switch(sortBy){\n    case 'username':\n      sort = { username: 1 };\n      break;\n    case 'karma':\n      sort = { karma: -1 };\n      break;\n    case 'postCount':\n      sort = { postCount: -1 };\n      break;\n    case 'commentCount':\n      sort = { commentCount: -1 };\n      break;\n    case 'invitedCount':\n      sort = { invitedCount: -1 };\n  }\n  return {\n    find: find,\n    options: { sort: sort, limit: limit }\n  };\n};\n","var completeUserProfile = function (modifier, userId, user) {\n\n  Users.update(userId, modifier);\n\n  Telescope.callbacks.runAsync(\"profileCompletedAsync\", Users.findOne(userId));\n\n  return Users.findOne(userId);\n\n};\n\nMeteor.methods({\n  completeUserProfile: function (modifier, userId) {\n    \n    check(modifier, Match.OneOf({$set: Object}, {$unset: Object}, {$set: Object, $unset: Object}));\n    check(userId, String);\n\n    var currentUser = Meteor.user(),\n        user = Users.findOne(userId),\n        schema = Users.simpleSchema()._schema;\n\n    // ------------------------------ Checks ------------------------------ //\n\n    // check that user can edit document\n    if (!user || !Users.can.edit(currentUser, user)) {\n      throw new Meteor.Error(601, i18n.t('sorry_you_cannot_edit_this_user'));\n    }\n\n    // if an $unset modifier is present, it means one or more of the fields is missing\n    if (modifier.$unset) {\n      throw new Meteor.Error(601, i18n.t('all_fields_are_required'));\n    }\n\n    // check for existing emails and throw error if necessary\n    // NOTE: redundant with collection hook, but better to throw the error here to avoid wiping out the form\n    if (modifier.$set && modifier.$set[\"telescope.email\"]) {\n      var email = modifier.$set[\"telescope.email\"];\n      if (Users.findByEmail(email)) {\n        throw new Meteor.Error(\"email_taken1\", i18n.t(\"this_email_is_already_taken\") + \" (\" + email + \")\");\n      }\n\n    }\n\n    // go over each field and throw an error if it's not editable\n    // loop over each operation ($set, $unset, etc.)\n    _.each(modifier, function (operation) {\n      // loop over each property being operated on\n      _.keys(operation).forEach(function (fieldName) {\n        var field = schema[fieldName];\n        if (!Users.can.editField(user, field, user)) {\n          throw new Meteor.Error(\"disallowed_property\", i18n.t('disallowed_property_detected') + \": \" + fieldName);\n        }\n\n      });\n    });\n\n    completeUserProfile(modifier, userId, user);\n  }\n});\n","// Controller for user pages\n\nUsers.controllers = {};\n\nUsers.controllers.page = RouteController.extend({\n\n  waitOn: function() {\n    return [\n      Telescope.subsManager.subscribe('singleUser', this.params._idOrSlug)\n    ];\n  },\n\n  getUser: function () {\n    return Meteor.users.findOne({\"telescope.slug\": this.params._idOrSlug});\n  },\n\n  data: function() {\n\n    var findById = Meteor.users.findOne(this.params._idOrSlug);\n    var findBySlug = Meteor.users.findOne({\"telescope.slug\": this.params._idOrSlug});\n\n    if (typeof findById !== 'undefined') {\n      // redirect to slug-based URL\n      Router.go(Users.getProfileUrl(findById), {replaceState: true});\n    } else {\n      return {\n        user: findById || findBySlug\n      };\n    }\n\n  },\n\n  getTitle: function () {\n    return Users.getDisplayName(this.getUser());\n  },\n\n  getDescription: function () {\n    return i18n.t('the_profile_of') + ' ' + Users.getDisplayName(this.getUser());\n  },\n\n  fastRender: true\n\n});\n\n// Controller for user account editing\n\nUsers.controllers.edit = RouteController.extend({\n  waitOn: function() {\n    return [\n      Telescope.subsManager.subscribe('singleUser', this.params.slug)\n    ];\n  },\n  data: function() {\n    // if there is no slug, default to current user\n    var user = !!this.params.slug ? Meteor.users.findOne({\"telescope.slug\": this.params.slug}) : Meteor.user();\n    return {\n      user: user\n    };\n  },\n  fastRender: true\n});\n\nMeteor.startup(function () {\n\n// User Logout\n\n  Router.route('/sign-out', {\n    name: 'signOut',\n    template: 'sign_out',\n    onBeforeAction: function() {\n      Meteor.logout(function() {\n      });\n      this.next();\n    }\n  });\n\n  // User Profile\n\n  Router.route('/users/:_idOrSlug', {\n    name: 'user_profile',\n    template: 'user_profile',\n    controller: Users.controllers.page\n  });\n\n  // User Edit\n\n  Router.route('/users/:slug/edit', {\n    name: 'user_edit',\n    template: 'user_edit',\n    controller: Users.controllers.edit,\n    onBeforeAction: function () {\n      // Only allow users with permissions to see the user edit page.\n      if (Meteor.user() && (\n        Users.is.admin(Meteor.user()) ||\n        this.params.slug === Meteor.user().telescope.slug\n      )) {\n        this.next();\n      } else {\n        this.render('no_rights');\n      }\n    }\n  });\n\n  Router.route('/account', {\n    name: 'userAccountShortcut',\n    template: 'user_edit',\n    controller: Users.controllers.edit\n  });\n\n  // All Users\n\n  Router.route('/users-dashboard', {\n    controller: Telescope.controllers.admin,\n    name: 'users_dashboard'\n  });\n\n  // Unsubscribe (from notifications)\n\n  Router.route('/unsubscribe/:hash', {\n    name: 'unsubscribe',\n    template: 'unsubscribe',\n    data: function() {\n      return {\n        hash: this.params.hash\n      };\n    }\n  });\n\n});\n","// accept either an ID or a slug\nMeteor.publish('singleUser', function(idOrSlug) {\n  var findById = Meteor.users.findOne(idOrSlug);\n  var findBySlug = Meteor.users.findOne({\"telescope.slug\": idOrSlug});\n  var user = typeof findById !== 'undefined' ? findById : findBySlug;\n  var options = Users.is.adminById(this.userId) ? {} : {fields: Users.pubsub.publicProperties};\n  if (user) {\n    return Meteor.users.find({_id: user._id}, options);\n  }\n  return [];\n});\n\nMeteor.publish('userPosts', function(terms) {\n  var parameters = Posts.getSubParams(terms);\n  var posts = Posts.find(parameters.find, parameters.options);\n  return posts;\n});\n\nMeteor.publish('userUpvotedPosts', function(terms) {\n  var parameters = Posts.getSubParams(terms);\n  var posts = Posts.find(parameters.find, parameters.options);\n  return posts;\n});\n\nMeteor.publish('userDownvotedPosts', function(terms) {\n  var parameters = Posts.getSubParams(terms);\n  var posts = Posts.find(parameters.find, parameters.options);\n  return posts;\n});\n\n// Publish the current user\n\nMeteor.publish('currentUser', function() {\n  var user = Meteor.users.find({_id: this.userId}, {fields: Users.pubsub.hiddenProperties});\n  return user;\n});\n\n// publish all users for admins to make autocomplete work\n// TODO: find a better way\n\nMeteor.publish('allUsersAdmin', function() {\n  var selector = Settings.get('requirePostInvite') ? {isInvited: true} : {}; // only users that can post\n  if (Users.is.adminById(this.userId)) {\n    return Meteor.users.find(selector, {fields: Users.pubsub.avatarProperties});\n  }\n  return [];\n});\n\n// Publish all users to reactive-table (if admin)\n// Limit, filter, and sort handled by reactive-table.\n// https://github.com/aslagle/reactive-table#server-side-pagination-and-filtering-beta\n\nReactiveTable.publish(\"all-users\", function() {\n  if(Users.is.adminById(this.userId)){\n    return Meteor.users;\n  } else {\n    return [];\n  }\n});\n","Accounts.onCreateUser(function(options, user){\n  user = Telescope.callbacks.run(\"onCreateUser\", user, options);\n  return user;\n});","var _ = Package.underscore._,\n    package_name = \"telescope:users\",\n    namespace = \"telescope:users\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"ar\"])) {\n  TAPi18n.translations[\"ar\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"ar\"][namespace])) {\n  TAPi18n.translations[\"ar\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"ar\"][namespace], {\"bio\":\"السيرة الذاتية\",\"email\":\"البريد اﻻلكتروني\",\"please_complete_your_profile_below_before_continuing\":\"شكرا  لاستكمال ملفك الشخصي قبل المتابعة.\",\"account\":\"حساب\",\"username\":\"اسم المستخدم\",\"display_name\":\"اﻻسم الحقيقي\",\"password\":\"كلمة المرور\",\"change_password\":\"تبديل كلمة المرور\",\"old_password\":\"كلمة المرور القديمة\",\"new_password\":\"كلمة المرور الجديدة\",\"email_notifications\":\"إشعارات بالبريد الإلكتروني\",\"new_posts\":\"مشاركة جديدة\",\"comments_on_my_posts\":\"تعليقات على مشاركاتي\",\"replies_to_my_comments\":\"اجابة تعليقاتي\",\"comments\":\"تعليقات\",\"forgot_password\":\"نسيت كلمة المرور؟\",\"profile_updated\":\"تحديث الملف الشخصي\",\"please_fill_in_your_email_below_to_finish_signing_up\":\"تفضل بأدخل بريدك الالكتروني لإنهاء إنشاء الحساب\",\"invite\":\"قم بدعوة\",\"uninvite\":\"الغاء الدعوة\",\"make_admin\":\"عين مشرف\",\"unadmin\":\"الغي مشرف\",\"delete_user\":\"احذف مستخدم\",\"are_you_sure_you_want_to_delete\":\"هل انت متاكد من الحذف؟ \",\"reset_password\":\"اعادة كلمة المرور\",\"password_reset_link_sent\":\"قد تم ارسال رابط ﻻسترجاع كلمة المرور\",\"name\":\"اﻻسم\",\"posts\":\"المشاركات\",\"comments_\":\"التعليقات\",\"karma\":\"Karma\",\"is_invited\":\"هل هو مدعو؟\",\"is_admin\":\"هل هو مشرف؟\",\"delete\":\"حذف\",\"member_since\":\"عضو منذ\",\"edit_profile\":\"تغيير الملف الشخصي\",\"sign_in\":\"دخول\",\"sign_in_\":\"دخول\",\"sign_up_\":\"استحدث حساب\",\"dont_have_an_account\":\"ﻻ تمتلك حساب؟\",\"already_have_an_account\":\"تمتلك حساب؟\",\"sign_up\":\"استحدث حساب\",\"please_fill_in_all_fields\":\"يتوجب مل كل الخانات\",\"invite_\":\"دعوة \",\"left\":\" باقي\",\"invite_none_left\":\"دعوات (0 متبقي)\",\"all\":\"الكل\",\"invited\":\"مدعو\",\"uninvited\":\"غير مدعو\",\"filter_by\":\"فرز ب\",\"sort_by\":\"ترتيب حسب\"});\nTAPi18n._registerServerTranslator(\"ar\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:users\",\n    namespace = \"telescope:users\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"bg\"])) {\n  TAPi18n.translations[\"bg\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"bg\"][namespace])) {\n  TAPi18n.translations[\"bg\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"bg\"][namespace], {\"bio\":\"Биография\",\"email\":\"Емайл\",\"please_complete_your_profile_below_before_continuing\":\"Моля попълнете вашия профил по-долу, преди да продължите.\",\"account\":\"Акаунт\",\"username\":\"Потребителско име\",\"display_name\":\"Прякор\",\"password\":\"Парола\",\"change_password\":\"Променете парола?\",\"old_password\":\"Стара парола\",\"new_password\":\"Нова парола\",\"email_notifications\":\"Емайл известия\",\"new_posts\":\"Нови Публикации\",\"comments_on_my_posts\":\"Коментари на мои публикации\",\"replies_to_my_comments\":\"Отговори на мои коментари\",\"comments\":\"коментари\",\"forgot_password\":\"Забравена Парола?\",\"profile_updated\":\"Профила е обновен\",\"please_fill_in_your_email_below_to_finish_signing_up\":\"Моля попълнете емайл адреса си за да завършите регистрацията.\",\"invite\":\"Покана\",\"uninvite\":\"Отмяна на покана\",\"make_admin\":\"Направи администратор\",\"unadmin\":\"Премахване на администраторски права\",\"delete_user\":\"Изтриване на потребител\",\"are_you_sure_you_want_to_delete\":\"Сигурни ли сте, че искате да изтриете \",\"reset_password\":\"Нулиране на парола\",\"password_reset_link_sent\":\"Линка за нулиране на паролата ви е изпратен!\",\"name\":\"Име\",\"posts\":\"Публикации\",\"comments_\":\"Коментари\",\"karma\":\"Карма\",\"is_invited\":\"Е поканен?\",\"is_admin\":\"Е Администратор?\",\"delete\":\"Изтриване\",\"member_since\":\"Потребител от\",\"edit_profile\":\"Промяна на профила\",\"sign_in\":\"Влезте\",\"sign_in_\":\"Влезте!\",\"sign_up_\":\"Регистрирайте се!\",\"dont_have_an_account\":\"Нямате Акаунт?\",\"already_have_an_account\":\"Вече имате акаунт?\",\"sign_up\":\"Регистрирай се\",\"please_fill_in_all_fields\":\"Моля попълнете всички полета\",\"invite_\":\"Покани \",\"left\":\" остава\",\"invite_none_left\":\"Покана (none left)\",\"all\":\"Всичко\",\"invited\":\"Поканен\",\"uninvited\":\"Поканата е отхвърлена\",\"filter_by\":\"Филтрирай по \",\"sort_by\":\"Сортирай по \"});\nTAPi18n._registerServerTranslator(\"bg\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:users\",\n    namespace = \"telescope:users\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"de\"])) {\n  TAPi18n.translations[\"de\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"de\"][namespace])) {\n  TAPi18n.translations[\"de\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"de\"][namespace], {\"bio\":\"Bio\",\"email\":\"Email\",\"please_complete_your_profile_below_before_continuing\":\"Bitte füllen Dein Profil vollständig aus bevor du fortfährst.\",\"account\":\"Konto\",\"username\":\"Benutzername\",\"display_name\":\"Angezeigter Name\",\"password\":\"Passwort\",\"change_password\":\"Passwort ändern?\",\"old_password\":\"Altes Passwort\",\"new_password\":\"Neues Passwort\",\"email_notifications\":\"Email-Benachrichtigung\",\"new_posts\":\"Neue Links\",\"comments_on_my_posts\":\"Kommentare zu meinen Links\",\"replies_to_my_comments\":\"Antworten auf meine Kommentare\",\"comments\":\"Kommentare\",\"forgot_password\":\"Passwort vergessen?\",\"profile_updated\":\"Profil aktualisiert\",\"please_fill_in_your_email_below_to_finish_signing_up\":\"Bitte trage Deine Email-Adresse ein um die Registrierung abzuschließen.\",\"invite\":\"Einladen\",\"uninvite\":\"Ausladen\",\"make_admin\":\"Zum Admin ernennen\",\"unadmin\":\"Als Admin entfernen\",\"delete_user\":\"Benutzer löschen\",\"are_you_sure_you_want_to_delete\":\"Bist du Dir sicher, dass du folgendes löschen willst: \",\"reset_password\":\"Passwort zurücksetzen\",\"password_reset_link_sent\":\"Ein Link zum zurücksetzen des Passworts wurde versendet!\",\"name\":\"Name\",\"posts\":\"Links\",\"comments_\":\"Kommentare\",\"karma\":\"Karma\",\"is_invited\":\"Wurde eingeladen?\",\"is_admin\":\"Ist Admin?\",\"delete\":\"Löschen\",\"member_since\":\"Mitglied seit\",\"edit_profile\":\"Profil bearbeiten\",\"sign_in\":\"Einloggen\",\"sign_in_\":\"Einloggen!\",\"sign_up_\":\"Registrieren!\",\"dont_have_an_account\":\"Du hast noch kein Konto?\",\"already_have_an_account\":\"Du hast bereits ein Konto?\",\"sign_up\":\"Registrieren\",\"please_fill_in_all_fields\":\"Bitte fülle alle Felder aus\",\"invite_\":\"Einladung(en) \",\"left\":\" übrig\",\"invite_none_left\":\"Einladungen (keine übrig)\",\"all\":\"Alle\",\"invited\":\"Eingeladen\",\"uninvited\":\"Nicht eingeladen\",\"filter_by\":\"Filtern nach\",\"sort_by\":\"Sortieren nach\"});\nTAPi18n._registerServerTranslator(\"de\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:users\",\n    namespace = \"telescope:users\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"el\"])) {\n  TAPi18n.translations[\"el\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"el\"][namespace])) {\n  TAPi18n.translations[\"el\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"el\"][namespace], {\"bio\":\"Βιογραφία\",\"email\":\"Email\",\"please_complete_your_profile_below_before_continuing\":\"Παρακαλώ συμπληρώστε το προφίλ σας πριν συνεχισετε.\",\"account\":\"Λογαριασμός\",\"username\":\"Ονομα χρήστη\",\"display_name\":\"Παρατσούκλι\",\"password\":\"κωδικός\",\"change_password\":\"Αλλαγή κωδικού?\",\"old_password\":\"Παλιός κωδικός\",\"new_password\":\"Νέος κωδικός\",\"email_notifications\":\"Ειδοποιήσεις μέσω Email\",\"new_posts\":\"Νέες δημοσιεύσεις\",\"comments_on_my_posts\":\"Σχόλια στις δημοσιέυσεις μου\",\"replies_to_my_comments\":\"Απαντήσεις στα σχόλια μου\",\"comments\":\"Σχόλια\",\"forgot_password\":\"Ξέχασες τον κωδικό σου;\",\"profile_updated\":\"Το προφίλ ενημερώθηκε\",\"please_fill_in_your_email_below_to_finish_signing_up\":\"Παρακαλώ συμπλήρωσε το email για να ολοκληρώσεις την εγγραφή σου.\",\"invite\":\"Προσκληση\",\"uninvite\":\"Διαγραφή πρόσκλησης\",\"make_admin\":\"Δικαίωμα διαχειριστή\",\"unadmin\":\"Διαγραφή δικαίωματος διαχειριστή\",\"delete_user\":\"Διαγραφή χρήστη\",\"are_you_sure_you_want_to_delete\":\"Είσαι σίγουρος για την διαγραφή\",\"reset_password\":\"Επαναφορά κωδικού\",\"password_reset_link_sent\":\"Στείλαμε σύνδεσμο επαναφοράς κωδικου στο email!\",\"name\":\"Όνομα\",\"posts\":\"Δημοσιεύσεις\",\"comments_\":\"Σχόλια\",\"karma\":\"Karma\",\"is_invited\":\"Έχει προσκληση?\",\"is_admin\":\"Είναι διαχειριστής?\",\"delete\":\"Διαγραφή\",\"member_since\":\"Μέλος από\",\"edit_profile\":\"Επεξεργασία Προφίλ\",\"sign_in\":\"Σύνδεση\",\"sign_in_\":\"Σύνδεση!\",\"sign_up_\":\"Εγγραφή!\",\"dont_have_an_account\":\"Δεν έχεις λογαριασμό;\",\"already_have_an_account\":\"Έχεις ήδη λογαριασμό;\",\"sign_up\":\"Εγγραφλη\",\"please_fill_in_all_fields\":\"Παρακαλώ συμπληρώστε τα πεδία\",\"invite_\":\"Πρόσκληση \",\"left\":\" αριστερά\",\"invite_none_left\":\"Πρόσκληση (κανένας αριστερά)\",\"all\":\"Όλους\",\"invited\":\"Αυτούς που έχουν πρόσκληση\",\"uninvited\":\"Αυτούς που ΔΕΝ έχουν πρόσκληση\",\"filter_by\":\"Δείξε \",\"sort_by\":\"Ταξινόμηση\"});\nTAPi18n._registerServerTranslator(\"el\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:users\",\n    namespace = \"telescope:users\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n// integrate the fallback language translations \ntranslations = {};\ntranslations[namespace] = {\"please_fill_in_missing_information_to_finish_signing_up\":\"Please fill in missing information below to finish signing up.\",\"bio\":\"Bio\",\"displayName\":\"Name\",\"email\":\"Email\",\"twitterUsername\":\"Twitter Username\",\"website\":\"Website\",\"htmlBio\":\"Bio\",\"user_profile_saved\":\"User profile saved\",\"this_email_is_already_taken\":\"This email is already taken\",\"all_fields_are_required\":\"All fields are required\",\"please_complete_your_profile_below_before_continuing\":\"Please complete your profile below before continuing.\",\"account\":\"Account\",\"username\":\"Username\",\"display_name\":\"Display Name\",\"city\":\"City\",\"twitter_username\":\"Twitter Username\",\"github_username\":\"GitHub Username\",\"site_url\":\"Site URL\",\"password\":\"Password\",\"change_password\":\"Change Password?\",\"old_password\":\"Old Password\",\"new_password\":\"New Password\",\"email_notifications\":\"Email Notifications\",\"new_users\":\"New users\",\"new_posts\":\"New Posts\",\"comments_on_my_posts\":\"Comments on my posts\",\"replies_to_my_comments\":\"Replies to my comments\",\"comments\":\"Comments\",\"forgot_password\":\"Forgot password?\",\"profile_updated\":\"Profile updated\",\"please_fill_in_your_email_below_to_finish_signing_up\":\"Please fill in your email below to finish the registration.\",\"invite\":\"Invite\",\"uninvite\":\"Uninvite\",\"make_admin\":\"Make admin\",\"unadmin\":\"Unadmin\",\"delete_user\":\"Delete User\",\"are_you_sure_you_want_to_delete\":\"Are you sure you want to delete \",\"reset_password\":\"Reset Password\",\"password_reset_link_sent\":\"Password reset link sent!\",\"name\":\"Name\",\"posts\":\"Posts\",\"comments_\":\"Comments\",\"karma\":\"Karma\",\"is_invited\":\"Is Invited?\",\"is_admin\":\"Is Admin?\",\"delete\":\"Delete\",\"member_since\":\"Member since\",\"edit_profile\":\"Edit profile\",\"sign_in\":\"Sign In\",\"sign_in_\":\"Sign in!\",\"sign_up_\":\"Register!\",\"dont_have_an_account\":\"Don't have an account?\",\"already_have_an_account\":\"Already have an account?\",\"sign_up\":\"Register\",\"please_fill_in_all_fields\":\"Please fill in all fields\",\"invite_\":\"Invite \",\"left\":\" left\",\"invite_none_left\":\"Invite (none left)\",\"all\":\"All\",\"invited\":\"Invited\",\"uninvited\":\"Uninvited\",\"filter_by\":\"Filter by\",\"sort_by\":\"Sort by\"};\nTAPi18n._loadLangFileObject(\"en\", translations);\nTAPi18n._registerServerTranslator(\"en\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:users\",\n    namespace = \"telescope:users\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"es\"])) {\n  TAPi18n.translations[\"es\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"es\"][namespace])) {\n  TAPi18n.translations[\"es\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"es\"][namespace], {\"please_fill_in_missing_information_to_finish_signing_up\":\"Por favor, complete la información que falta a continuación para terminar el registro.\",\"bio\":\"Bio\",\"displayName\":\"Nombre\",\"email\":\"Email\",\"twitterUsername\":\"Nombre De Usuario De Twitter\",\"website\":\"Sitio web\",\"htmlBio\":\"Biografía\",\"user_profile_saved\":\"Perfil de usuario guardado\",\"this_email_is_already_taken\":\"Este correo electrónico ya existe\",\"all_fields_are_required\":\"Todos los campos son obligatorios\",\"please_complete_your_profile_below_before_continuing\":\"Por favor complete su perfil antes de seguir.\",\"account\":\"Cuenta\",\"username\":\"Nombre de usuario\",\"display_name\":\"Nombre\",\"city\":\"Ciudad\",\"twitter_username\":\"Nombre De Usuario De Twitter\",\"github_username\":\"Nombre De Usuario De Github\",\"site_url\":\"URL del sitio web\",\"password\":\"Contraseña\",\"change_password\":\"Cambiar de contraseña\",\"old_password\":\"Contraseña Anterior\",\"new_password\":\"Contraseña Nueva \",\"email_notifications\":\"Notificaciones por Email\",\"new_users\":\"Nuevos usuarios\",\"new_posts\":\"Nuevo Post\",\"comments_on_my_posts\":\"Comentarios en mis posts\",\"replies_to_my_comments\":\"Respuestas a mis comentarios\",\"comments\":\"comentarios\",\"forgot_password\":\"Olvidaste tu contraseña?\",\"profile_updated\":\"Perfil actualizado\",\"please_fill_in_your_email_below_to_finish_signing_up\":\"Por favor, introduzca su email a continuación para terminar el registro.\",\"invite\":\"Invitar\",\"uninvite\":\"Cancelar la invitación\",\"make_admin\":\"Hacer admin\",\"unadmin\":\"Borrar de admin\",\"delete_user\":\"Borrar usuario\",\"are_you_sure_you_want_to_delete\":\"¿Está seguro de que desea eliminar?\",\"reset_password\":\"Restablecer contraseña\",\"password_reset_link_sent\":\"Enlace de restablecimiento de contraseña enviado a su email.\",\"name\":\"Nombre\",\"posts\":\"Posts\",\"comments_\":\"Comentarios\",\"karma\":\"Karma\",\"is_invited\":\"¿Esta invitado?\",\"is_admin\":\"¿Es admin?\",\"delete\":\"Borrar\",\"member_since\":\"Miembro desde\",\"edit_profile\":\"Modificar el perfil\",\"sign_in\":\"Ingresar\",\"sign_in_\":\"Ingresar!\",\"sign_up_\":\"Registrarse!\",\"dont_have_an_account\":\"¿No tiene cuenta de usuario?\",\"already_have_an_account\":\"¿Ya tiene cuenta?\",\"sign_up\":\"Registrarse\",\"please_fill_in_all_fields\":\"Por favor, llena todos los campos\",\"invite_\":\"Invitación \",\"left\":\" restante\",\"invite_none_left\":\"Invitación (no queda)\",\"all\":\"Todos\",\"invited\":\"Invitados\",\"uninvited\":\"No invitado\",\"filter_by\":\"Filtrar por\",\"sort_by\":\"Ordenar por\"});\nTAPi18n._registerServerTranslator(\"es\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:users\",\n    namespace = \"telescope:users\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"fr\"])) {\n  TAPi18n.translations[\"fr\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"fr\"][namespace])) {\n  TAPi18n.translations[\"fr\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"fr\"][namespace], {\"please_fill_in_missing_information_to_finish_signing_up\":\"Veuillez remplir les informations manquantes pour compléter votre inscription.\",\"bio\":\"Bio\",\"displayName\":\"Nom Affiché\",\"email\":\"Adresse mail\",\"twitterUsername\":\"Identifiant Twitter\",\"website\":\"Site Web\",\"htmlBio\":\"Bio\",\"user_profile_saved\":\"Profil utilisateur sauvegardé\",\"this_email_is_already_taken\":\"Cet e-mail est déjà utilisé\",\"all_fields_are_required\":\"Tous les champs sont requis\",\"please_complete_your_profile_below_before_continuing\":\"Merci de compléter votre profil avant de continuer.\",\"account\":\"Compte\",\"username\":\"Nom d'utilisateur\",\"display_name\":\"Nom réel\",\"city\":\"Ville\",\"twitter_username\":\"Nom d'utilisateur Twitter\",\"github_username\":\"Nom d'utilisateur GitHub\",\"site_url\":\"Url du site\",\"password\":\"Mot de passe\",\"change_password\":\"Changer le mot de passe\",\"old_password\":\"Ancien mot de passe\",\"new_password\":\"Nouveau mot de passe\",\"email_notifications\":\"Notifications par mail\",\"new_users\":\"ÈNouveaux utilisateurs\",\"new_posts\":\"Nouveau post\",\"comments_on_my_posts\":\"Commentaires sur mes posts\",\"replies_to_my_comments\":\"Reponses à mes commentaires\",\"comments\":\"Commentaires\",\"forgot_password\":\"Mot de passe oublié ?\",\"profile_updated\":\"Profil mis à jour\",\"please_fill_in_your_email_below_to_finish_signing_up\":\"Merci de saisir votre email pour finir la création de votre compte\",\"invite\":\"Inviter\",\"uninvite\":\"Annuler l'invitation\",\"make_admin\":\"Rendre admin\",\"unadmin\":\"Supprimer les droits d'admin\",\"delete_user\":\"Supprimer l'utilisateur\",\"are_you_sure_you_want_to_delete\":\"Etes-vous sûr de vouloir supprimer ?\",\"reset_password\":\"Réinitialiser le mot de passe\",\"password_reset_link_sent\":\"Un lien pour réinitialiser votre mot de passe a été envoyé !\",\"name\":\"Nom\",\"posts\":\"Posts\",\"comments_\":\"Commentaires\",\"karma\":\"Karma\",\"is_invited\":\"Est-il invité ?\",\"is_admin\":\"Est-il administrateur ?\",\"delete\":\"Supprimer\",\"member_since\":\"Membre depuis\",\"edit_profile\":\"Modifier le profil\",\"sign_in\":\"Connexion\",\"sign_in_\":\"Connexion\",\"sign_up_\":\"Créer un compte.\",\"dont_have_an_account\":\"Pas de compte ?\",\"already_have_an_account\":\"Déjà un compte ?\",\"sign_up\":\"Créer un compte\",\"please_fill_in_all_fields\":\"Vous devez remplir tous les champs.\",\"invite_\":\"Invitation \",\"left\":\" restante\",\"invite_none_left\":\"Invitation (aucune restante)\",\"all\":\"Tout(e)s\",\"invited\":\"Invité(e)\",\"uninvited\":\"Pas invité(e)\",\"filter_by\":\"Filtrer par\",\"sort_by\":\"Trier par\"});\nTAPi18n._registerServerTranslator(\"fr\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:users\",\n    namespace = \"telescope:users\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"it\"])) {\n  TAPi18n.translations[\"it\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"it\"][namespace])) {\n  TAPi18n.translations[\"it\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"it\"][namespace], {\"bio\":\"Biografia\",\"email\":\"Email\",\"please_complete_your_profile_below_before_continuing\":\"Per favore completa il tuo profilo qua sotto prima di proseguire.\",\"account\":\"Account\",\"username\":\"Nome Utente\",\"display_name\":\"Nome Visualizzato\",\"password\":\"Password\",\"change_password\":\"Cambio Password?\",\"old_password\":\"Vecchia Password\",\"new_password\":\"Nuova Password\",\"email_notifications\":\"Notifiche via Email\",\"new_posts\":\"Nuovi Posts\",\"comments_on_my_posts\":\"Commenti ai miei post\",\"replies_to_my_comments\":\"Risposte ai miei commenti\",\"comments\":\"commenti\",\"forgot_password\":\"Password dimenticata?\",\"profile_updated\":\"Profilo aggiornato\",\"please_fill_in_your_email_below_to_finish_signing_up\":\"Per favore inserisci qua sotto la tua email per completare la registrazione.\",\"invite\":\"Invita\",\"uninvite\":\"Annulla l'invito\",\"make_admin\":\"Rendi amministratore\",\"unadmin\":\"Annulla amministratore\",\"delete_user\":\"Elimina Utente\",\"are_you_sure_you_want_to_delete\":\"Sei sicuro di voler eliminare \",\"reset_password\":\"Reimposta Password\",\"password_reset_link_sent\":\"Link per reimpostare la password inviato!\",\"name\":\"Nome\",\"posts\":\"Post\",\"comments_\":\"Commenti\",\"karma\":\"Karma\",\"is_invited\":\"È Invitato?\",\"is_admin\":\"È Amministratore?\",\"delete\":\"Elimina\",\"member_since\":\"Membro dal\",\"edit_profile\":\"Modifica profilo\",\"sign_in\":\"Accedi\",\"sign_in_\":\"Accedi!\",\"sign_up_\":\"Registrati!\",\"dont_have_an_account\":\"Non hai un account?\",\"already_have_an_account\":\"Hai già un account?\",\"sign_up\":\"Registrati\",\"please_fill_in_all_fields\":\"Per favore compila tutti i campi\",\"invite_\":\"Invita \",\"left\":\" sinistra\",\"invite_none_left\":\"Invita (nessuno rimasto)\",\"all\":\"Tutti\",\"invited\":\"Invitati\",\"uninvited\":\"Non invitati\",\"filter_by\":\"Filtra per\",\"sort_by\":\"Ordina per\"});\nTAPi18n._registerServerTranslator(\"it\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:users\",\n    namespace = \"telescope:users\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"nl\"])) {\n  TAPi18n.translations[\"nl\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"nl\"][namespace])) {\n  TAPi18n.translations[\"nl\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"nl\"][namespace], {\"bio\":\"Bio\",\"email\":\"Email\",\"please_complete_your_profile_below_before_continuing\":\"Maak eerst je profiel af alvorens verder te gaan.\",\"account\":\"Account\",\"username\":\"Gebruikersnaam\",\"display_name\":\"Weergave naam\",\"twitter_username\":\"Twitter gebruikersnaam\",\"github_username\":\"GitHub gebruikersnaam\",\"site_url\":\"Website URL\",\"password\":\"Wachtwoord\",\"change_password\":\"Wachtwoord veranderen?\",\"old_password\":\"Oud wachtwoord\",\"new_password\":\"Nieuw wachtwoord\",\"email_notifications\":\"Email Notificaties\",\"new_users\":\"Nieuwe gebruikers\",\"new_posts\":\"Nieuwe artikelen\",\"comments_on_my_posts\":\"Reacties op mijn artikelen\",\"replies_to_my_comments\":\"Antwoorden op mijn reacties\",\"comments\":\"Reacties\",\"forgot_password\":\"Wachtwoord vergeten?\",\"profile_updated\":\"Profiel bijgewerkt\",\"please_fill_in_your_email_below_to_finish_signing_up\":\"Vul je email in om de registratie af te ronden.\",\"invite\":\"Uitnodigen\",\"uninvite\":\"Uitnodiging intrekken\",\"make_admin\":\"Beheerder maken\",\"unadmin\":\"Beheer rechten ontnemen\",\"delete_user\":\"Gberuiker verwijderen\",\"are_you_sure_you_want_to_delete\":\"Verwijder \",\"reset_password\":\"Reset wachtwoord\",\"password_reset_link_sent\":\"Wacthwoord reset link verstuurd!\",\"name\":\"Naam\",\"posts\":\"Artikelen\",\"comments_\":\"Reacties\",\"karma\":\"Karma\",\"is_invited\":\"Is uitgenodigd?\",\"is_admin\":\"Is beheerder?\",\"delete\":\"Verwijder\",\"member_since\":\"Lid sinds\",\"edit_profile\":\"Bewerk profiel\",\"sign_in\":\"Inloggen\",\"sign_in_\":\"Inloggen!\",\"sign_up_\":\"Registreren!\",\"dont_have_an_account\":\"Geen account?\",\"already_have_an_account\":\"Heb je al een account?\",\"sign_up\":\"Registreren\",\"please_fill_in_all_fields\":\"Alle velden invullen a.u.b.\",\"invite_\":\"Uitnodiging sturen aan \",\"left\":\" resterend\",\"invite_none_left\":\"Invite (geen resterend)\",\"all\":\"Alles\",\"invited\":\"Uitgenodigd\",\"uninvited\":\"Uitnoding ongedaan gemaakt\",\"filter_by\":\"Filteren\",\"sort_by\":\"Sorteer\"});\nTAPi18n._registerServerTranslator(\"nl\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:users\",\n    namespace = \"telescope:users\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"pl\"])) {\n  TAPi18n.translations[\"pl\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"pl\"][namespace])) {\n  TAPi18n.translations[\"pl\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"pl\"][namespace], {\"bio\":\"Bio\",\"email\":\"Email\",\"please_complete_your_profile_below_before_continuing\":\"Uzupełnij profil.\",\"account\":\"Konto\",\"username\":\"Nick\",\"display_name\":\"Nazwa wyświetlana\",\"twitter_username\":\"Twitter\",\"github_username\":\"GitHub\",\"site_url\":\"Strona WWW\",\"password\":\"Hasło\",\"change_password\":\"Zmienić hasło?\",\"old_password\":\"Stare hasło\",\"new_password\":\"Nowe hasło\",\"email_notifications\":\"Notyfikacje email\",\"new_users\":\"Nowi użytkownicy\",\"new_posts\":\"Nowe posty\",\"comments_on_my_posts\":\"Komentarze do moich postów\",\"replies_to_my_comments\":\"Odpowiedzi na moje komentarze\",\"comments\":\"Comments\",\"forgot_password\":\"Zapomniałeś hasło?\",\"profile_updated\":\"Profil został zaktualizowany\",\"please_fill_in_your_email_below_to_finish_signing_up\":\"Uzupełnij email.\",\"invite\":\"Zaproś\",\"uninvite\":\"Wyproś\",\"make_admin\":\"Mianuj admina\",\"unadmin\":\"Zdejmij admina\",\"delete_user\":\"Usuń użytkownika\",\"are_you_sure_you_want_to_delete\":\"Jesteś pewny, że chcesz usunąć \",\"reset_password\":\"Resetuj hasło\",\"password_reset_link_sent\":\"Link z nowym hasłem został wysłany!\",\"name\":\"Imię\",\"posts\":\"Posty\",\"comments_\":\"Komentarze\",\"karma\":\"Karma\",\"is_invited\":\"Czy jest zaproszony?\",\"is_admin\":\"Czy jest adminem?\",\"delete\":\"Usuń\",\"member_since\":\"Zarejestrowany od\",\"edit_profile\":\"Edytuj profil\",\"sign_in\":\"Zaloguj\",\"sign_in_\":\"Zaloguj!\",\"sign_up_\":\"Zarejestruj!\",\"dont_have_an_account\":\"Nie masz konta?\",\"already_have_an_account\":\"Masz już konto?\",\"sign_up\":\"Zarejestruj\",\"please_fill_in_all_fields\":\"Uzupełnij pola\",\"invite_\":\"Zaproś \",\"left\":\" left\",\"invite_none_left\":\"Zaproszenia (brak)\",\"all\":\"Wszyscy\",\"invited\":\"Zaproszeni\",\"uninvited\":\"Niezaproszeni\",\"filter_by\":\"Filtruj po\",\"sort_by\":\"Sortuj po\"});\nTAPi18n._registerServerTranslator(\"pl\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:users\",\n    namespace = \"telescope:users\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"pt-BR\"])) {\n  TAPi18n.translations[\"pt-BR\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"pt-BR\"][namespace])) {\n  TAPi18n.translations[\"pt-BR\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"pt-BR\"][namespace], {\"bio\":\"Bio\",\"email\":\"Email\",\"please_complete_your_profile_below_before_continuing\":\"Por favor, complete seu perfil abaixo antes de continuar.\",\"account\":\"Conta\",\"username\":\"Nome de usuário\",\"display_name\":\"Nome de exibição\",\"twitter_username\":\"Twitter\",\"github_username\":\"GitHub\",\"site_url\":\"URL do Site\",\"password\":\"Senha\",\"change_password\":\"Mudar Senha?\",\"old_password\":\"Senha Antiga\",\"new_password\":\"Nova Senha\",\"email_notifications\":\"Notificações por Email\",\"new_users\":\"Novos usuários\",\"new_posts\":\"Novas Postagens\",\"comments_on_my_posts\":\"Comentários em minhas postagens\",\"replies_to_my_comments\":\"Respostas aos meus comentários\",\"comments\":\"Comentários\",\"forgot_password\":\"Esqueceu sua senha?\",\"profile_updated\":\"Perfil atualizado\",\"please_fill_in_your_email_below_to_finish_signing_up\":\"Por favor, preencha seu email abaixo para finalizar o registro.\",\"invite\":\"Convite\",\"uninvite\":\"Desconvidar\",\"make_admin\":\"Tornar admin\",\"unadmin\":\"Retirar do admin\",\"delete_user\":\"Deletar Usuário\",\"are_you_sure_you_want_to_delete\":\"Está certo de que deseja deletar \",\"reset_password\":\"Resetar Senhar\",\"password_reset_link_sent\":\"Link de reset de senha enviado!\",\"name\":\"Nome\",\"posts\":\"Postagens\",\"comments_\":\"Comentários\",\"karma\":\"Carma\",\"is_invited\":\"Foi Convidado?\",\"is_admin\":\"É Admin?\",\"delete\":\"Deletar\",\"member_since\":\"Membro desde\",\"edit_profile\":\"Editar perfil\",\"sign_in\":\"Entrar\",\"sign_in_\":\"Entrar!\",\"sign_up_\":\"Registrar!\",\"dont_have_an_account\":\"Não possui uma conta?\",\"already_have_an_account\":\"Já possui uma conta?\",\"sign_up\":\"Registrar\",\"please_fill_in_all_fields\":\"Por favor, preencha todos os campos\",\"invite_\":\"Convidar \",\"left\":\" restantes\",\"invite_none_left\":\"Convidar (nenhum restante)\",\"all\":\"Todos\",\"invited\":\"Convidado\",\"uninvited\":\"Desconvidado\",\"filter_by\":\"Filtrar por\",\"sort_by\":\"Distribuir por\"});\nTAPi18n._registerServerTranslator(\"pt-BR\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:users\",\n    namespace = \"telescope:users\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"ro\"])) {\n  TAPi18n.translations[\"ro\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"ro\"][namespace])) {\n  TAPi18n.translations[\"ro\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"ro\"][namespace], {\"bio\":\"Despre tine\",\"email\":\"Email\",\"please_complete_your_profile_below_before_continuing\":\"Te rugăm să completezi toate datele înainte de a trece mai departe.\",\"account\":\"Profil\",\"username\":\"Nume utilizator\",\"display_name\":\"Nume afișat public\",\"password\":\"Parola\",\"change_password\":\"Schimbă parola?\",\"old_password\":\"Parola veche\",\"new_password\":\"Parola nouă\",\"email_notifications\":\"Notificări prin email\",\"new_posts\":\"Postări noi\",\"comments_on_my_posts\":\"Comentarii la postările mele\",\"replies_to_my_comments\":\"Răspunsuri la postările mele\",\"comments\":\"Comentarii\",\"forgot_password\":\"Ați uitat parola?\",\"profile_updated\":\"Profilul a fost actualizat\",\"please_fill_in_your_email_below_to_finish_signing_up\":\"Vă rugăm treceți adresa de email pentru a finaliza înregistrarea.\",\"invite\":\"Invație\",\"uninvite\":\"Retrage invitația\",\"make_admin\":\"Promovează ca administrator\",\"unadmin\":\"Retrage dreptul de administrator\",\"delete_user\":\"Șterge utilizator\",\"are_you_sure_you_want_to_delete\":\"Ești sigur că vrei să ștergi următoarele: \",\"reset_password\":\"Resetează parola\",\"password_reset_link_sent\":\"Un link pentru resetarea parolei tocmai a fost trimis!\",\"name\":\"Nume\",\"posts\":\"Postări\",\"comments_\":\"Comentarii\",\"karma\":\"Karma\",\"is_invited\":\"Este invitat?\",\"is_admin\":\"Este administrator?\",\"delete\":\"Șterge\",\"member_since\":\"Vechime\",\"edit_profile\":\"Editează profilul\",\"sign_in\":\"Logare\",\"sign_in_\":\"Logare!\",\"sign_up_\":\"Înregistrare!\",\"dont_have_an_account\":\"Nu ești înregistrat?\",\"already_have_an_account\":\"Ești deja înregistrat?\",\"sign_up\":\"Înregistrează-te\",\"please_fill_in_all_fields\":\"Te rugăm să completezi toate câmpurile necesare.\",\"invite_\":\"Invitați(i) \",\"left\":\" rămase\",\"invite_none_left\":\"Număr de invitații epuizat\",\"all\":\"Toți\",\"invited\":\"cei invitați\",\"uninvited\":\"cei neinvitați\",\"filter_by\":\"Filtreză după\",\"sort_by\":\"Sorteză după\"});\nTAPi18n._registerServerTranslator(\"ro\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:users\",\n    namespace = \"telescope:users\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"ru\"])) {\n  TAPi18n.translations[\"ru\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"ru\"][namespace])) {\n  TAPi18n.translations[\"ru\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"ru\"][namespace], {\"bio\":\"Обо мне\",\"email\":\"Email\",\"please_complete_your_profile_below_before_continuing\":\"Заполните ваш профиль перед тем, как продолжить.\",\"account\":\"Аккаунт\",\"username\":\"Имя пользователя\",\"display_name\":\"Показать имя\",\"twitter_username\":\"Имя в Twitter\",\"github_username\":\"Имя в GitHub\",\"site_url\":\"URL сайта\",\"password\":\"Пароль\",\"change_password\":\"Сменить пароль?\",\"old_password\":\"Старый пароль\",\"new_password\":\"Новый пароль\",\"email_notifications\":\"Email оповещение\",\"new_users\":\"Новые пользователи\",\"new_posts\":\"Новые посты\",\"comments_on_my_posts\":\"Комментариев под моими постами\",\"replies_to_my_comments\":\"Ответов на мои комментарии\",\"comments\":\"Комментарии\",\"forgot_password\":\"Забыли пароль?\",\"profile_updated\":\"Профиль обновлён\",\"please_fill_in_your_email_below_to_finish_signing_up\":\"Пожалуйста, укажите ваш email ниже для окончания регистрации.\",\"invite\":\"Инвайт\",\"uninvite\":\"Отменить инвайт\",\"make_admin\":\"Сделать админом\",\"unadmin\":\"Отметить админа\",\"delete_user\":\"Удалить пользователя\",\"are_you_sure_you_want_to_delete\":\"Уверены, что хотите удалить \",\"reset_password\":\"Сбросить пароль\",\"password_reset_link_sent\":\"Ссылка для сброса пароля отправлена!\",\"name\":\"Имя\",\"posts\":\"Посты\",\"comments_\":\"Комментарии\",\"karma\":\"Карма\",\"is_invited\":\"Приглашён?\",\"is_admin\":\"Админ?\",\"delete\":\"Удалить\",\"member_since\":\"Является членом с\",\"edit_profile\":\"Редактировать профиль\",\"sign_in\":\"Войти\",\"sign_in_\":\"Войти!\",\"sign_up_\":\"Зарегистрироваться!\",\"dont_have_an_account\":\"Нет аккаунта?\",\"already_have_an_account\":\"Уже есть аккаунт?\",\"sign_up\":\"Зарегистрироваться\",\"please_fill_in_all_fields\":\"Заполните все поля\",\"invite_\":\"Пригласить \",\"left\":\" покинул(а)\",\"invite_none_left\":\"Пригласить (не осталось)\",\"all\":\"Все\",\"invited\":\"Приглашённые\",\"uninvited\":\"Неприглашённые\",\"filter_by\":\"Фильтровать по\",\"sort_by\":\"Сортировать по\"});\nTAPi18n._registerServerTranslator(\"ru\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:users\",\n    namespace = \"telescope:users\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"sv\"])) {\n  TAPi18n.translations[\"sv\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"sv\"][namespace])) {\n  TAPi18n.translations[\"sv\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"sv\"][namespace], {\"please_fill_in_missing_information_to_finish_signing_up\":\"Vänligen fyll i avsaknade fält nedan för att bli medlem.\",\"bio\":\"Biografi\",\"displayName\":\"Namn\",\"email\":\"E-post\",\"twitterUsername\":\"Twitter-konto\",\"website\":\"Webbplats\",\"htmlBio\":\"Bio\",\"user_profile_saved\":\"Användarprofil sparad\",\"this_email_is_already_taken\":\"E-postadressen är redan taget\",\"all_fields_are_required\":\"Alla fält är obligatoriska\",\"please_complete_your_profile_below_before_continuing\":\"Vänligen fyll i din profil innan du fortsätter.\",\"account\":\"Profil\",\"username\":\"Användarnamn\",\"display_name\":\"Visningsnamn\",\"city\":\"Stad\",\"twitter_username\":\"Twitter-konto\",\"github_username\":\"GitHub-konto\",\"site_url\":\"Hemside-adress\",\"password\":\"Lösenord\",\"change_password\":\"Byta lösenord?\",\"old_password\":\"Gammalt lösenord\",\"new_password\":\"Nytt lösenord\",\"email_notifications\":\"E-post-notifikationer\",\"new_users\":\"Nya användare\",\"new_posts\":\"Nya inlägg\",\"comments_on_my_posts\":\"Kommentarer på mina inlägg\",\"replies_to_my_comments\":\"Svar på mina kommentarer\",\"comments\":\"Kommentarer\",\"forgot_password\":\"Glömt lösenord?\",\"profile_updated\":\"Profil uppdaterad\",\"please_fill_in_your_email_below_to_finish_signing_up\":\"Vänligen fyll i din E-post för att bli medlem.\",\"invite\":\"Bjud in\",\"uninvite\":\"Avbryt inbjudning\",\"make_admin\":\"Gör till admin\",\"unadmin\":\"Gör inte till admin\",\"delete_user\":\"Ta bort användare\",\"are_you_sure_you_want_to_delete\":\"Är du säker att du vill ta bort \",\"reset_password\":\"Återställ lösenord\",\"password_reset_link_sent\":\"Återställningslänk skickad!\",\"name\":\"Namn\",\"posts\":\"Inlägg\",\"comments_\":\"Kommentarer\",\"karma\":\"Karma\",\"is_invited\":\"Är inbjuden?\",\"is_admin\":\"Är admin?\",\"delete\":\"Ta bort\",\"member_since\":\"Medlem sen\",\"edit_profile\":\"Redigera profil\",\"sign_in\":\"Logga in\",\"sign_in_\":\"Logga in!\",\"sign_up_\":\"Bli Medlem!\",\"dont_have_an_account\":\"Har du inget konto?\",\"already_have_an_account\":\"Har du redan ett konto?\",\"sign_up\":\"Bli Medlem\",\"please_fill_in_all_fields\":\"Vänligen fyll i samtliga fält\",\"invite_\":\"Bjud in \",\"left\":\" kvar\",\"invite_none_left\":\"Inbjudningar (inga kvar)\",\"all\":\"Alla\",\"invited\":\"Inbjuden\",\"uninvited\":\"Oinbjuden\",\"filter_by\":\"Filtrera på\",\"sort_by\":\"Sortera på\"});\nTAPi18n._registerServerTranslator(\"sv\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:users\",\n    namespace = \"telescope:users\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"tr\"])) {\n  TAPi18n.translations[\"tr\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"tr\"][namespace])) {\n  TAPi18n.translations[\"tr\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"tr\"][namespace], {\"bio\":\"Bio\",\"email\":\"Eposta\",\"please_complete_your_profile_below_before_continuing\":\"Lütfen devam etmeden önce aşağıdaki profilinizi tamamlayınız\",\"account\":\"Hesap\",\"username\":\"Kullanıcı adı\",\"display_name\":\"Görülen isim\",\"password\":\"şifre\",\"change_password\":\"şifreyi değiştir?\",\"old_password\":\"Eski şifre\",\"new_password\":\"Yeni şifre\",\"email_notifications\":\"e-posta bildirimi\",\"new_posts\":\"Yeni paylaşımlar\",\"comments_on_my_posts\":\"Paylaşımımdaki yorumlar\",\"replies_to_my_comments\":\"Yorumlarıma cevaplar\",\"comments\":\"Yorumlar\",\"forgot_password\":\"Şifreyi unuttunuz mu?\",\"profile_updated\":\"Profil güncellendi\",\"please_fill_in_your_email_below_to_finish_signing_up\":\"Lütfen kaydınızı tamamlamak için aşağıya e-posta adresinizi giriniz\",\"invite\":\"Davet et\",\"uninvite\":\"Daveti geri al\",\"make_admin\":\"Admin yap\",\"unadmin\":\"Adminliği kaldır\",\"delete_user\":\"Kullanıcıyı sil\",\"are_you_sure_you_want_to_delete\":\"Silmek istediğinize emin misiniz?\",\"reset_password\":\"Şifreyi sıfırla\",\"password_reset_link_sent\":\"Şifre sıfırlama bağlantısı gönderildi!\",\"name\":\"İsim\",\"posts\":\"Paylaşımlar\",\"karma\":\"Karma\",\"is_invited\":\"Davet edildi mi?\",\"is_admin\":\"Admin mi?\",\"delete\":\"Sil\",\"member_since\":\"Üyelik başlangıcı\",\"edit_profile\":\"Profili değiştir\",\"sign_in\":\"Giriş yap\",\"sign_in_\":\"Giriş yap!\",\"sign_up_\":\"Kayıt ol!\",\"dont_have_an_account\":\"Hesabınız yok mu?\",\"already_have_an_account\":\"Hesabınız var mı?\",\"sign_up\":\"Kayıt ol\",\"please_fill_in_all_fields\":\"Lütfen bütün alanları doldurunuz\",\"left\":\" kalan\",\"invite_none_left\":\"Davet et (hiç kalmadı)\",\"all\":\"Hepsi\",\"invited\":\"Davet edildi\",\"uninvited\":\"Davet edilmedi\",\"filter_by\":\"Filtreleme kıstası\",\"sort_by\":\"Sıralama kıstası\"});\nTAPi18n._registerServerTranslator(\"tr\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:users\",\n    namespace = \"telescope:users\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"vi\"])) {\n  TAPi18n.translations[\"vi\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"vi\"][namespace])) {\n  TAPi18n.translations[\"vi\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"vi\"][namespace], {\"bio\":\"Bio\",\"email\":\"Email\",\"please_complete_your_profile_below_before_continuing\":\"Xin điền thông tin hồ sơ của bạn để tiếp tục.\",\"account\":\"Tài khoản\",\"username\":\"Tên đăng nhập\",\"display_name\":\"Tên xuất hiện\",\"twitter_username\":\"Tài khoản Twitter\",\"github_username\":\"Tài khoản GitHub\",\"site_url\":\"Địa chỉ website\",\"password\":\"Mật khẩu\",\"change_password\":\"Thay đổi mật khẩu?\",\"old_password\":\"Mật khẩu cũ\",\"new_password\":\"Mật khẩu mới\",\"email_notifications\":\"Email thông báo\",\"new_users\":\"Người dùng mới\",\"new_posts\":\"Bài mới\",\"comments_on_my_posts\":\"Bình luận trên bài của tôi\",\"replies_to_my_comments\":\"Trả lời ý kiến của tôi\",\"comments\":\"ý kiến\",\"forgot_password\":\"Quyên mật khẩu?\",\"profile_updated\":\"Cập nhật hồ sơ\",\"please_fill_in_your_email_below_to_finish_signing_up\":\"Xin nhập email của bạn dưới đây để hoàn thành việc đăng ký.\",\"invite\":\"Mời\",\"uninvite\":\"Không mời\",\"make_admin\":\"Thiết lập Admin\",\"unadmin\":\"Ngắt Admin\",\"delete_user\":\"Xóa người dùng\",\"are_you_sure_you_want_to_delete\":\"Bạn có chắc muốn xóa?\",\"reset_password\":\"Thiết lập lại mật khẩu\",\"password_reset_link_sent\":\"Mật khẩu đã được gửi!\",\"name\":\"Tên\",\"posts\":\"Bài\",\"comments_\":\"Ý kiến\",\"karma\":\"Karma\",\"is_invited\":\"Được mời?\",\"is_admin\":\"Admin?\",\"delete\":\"Xóa\",\"member_since\":\"Thành viên từ\",\"edit_profile\":\"Sửa hồ sơ\",\"sign_in\":\"Đăng nhập\",\"sign_in_\":\"Đăng nhập!\",\"sign_up_\":\"Đăng ký!\",\"dont_have_an_account\":\"Bạn không có tài khoản?\",\"already_have_an_account\":\"Bạn đã có tài khoản?\",\"sign_up\":\"Đăng ký\",\"please_fill_in_all_fields\":\"Nhập thông tin\",\"invite_\":\"Mời \",\"left\":\" left\",\"invite_none_left\":\"Invite (none left)\",\"all\":\"Tất cả\",\"invited\":\"Mời\",\"uninvited\":\"Không mời\",\"filter_by\":\"Lọc theo\",\"sort_by\":\"Sắp xếp theo\"});\nTAPi18n._registerServerTranslator(\"vi\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"telescope:users\",\n    namespace = \"telescope:users\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"zh-CN\"])) {\n  TAPi18n.translations[\"zh-CN\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"zh-CN\"][namespace])) {\n  TAPi18n.translations[\"zh-CN\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"zh-CN\"][namespace], {\"bio\":\"小传\",\"email\":\"Email\",\"please_complete_your_profile_below_before_continuing\":\"在继续之前请填写相关资料.\",\"account\":\"帐号\",\"username\":\"用户名\",\"display_name\":\"昵称\",\"password\":\"密码\",\"change_password\":\"修改密码?\",\"old_password\":\"旧密码\",\"new_password\":\"新密码\",\"email_notifications\":\"邮箱提醒\",\"new_posts\":\"最新主题\",\"comments_on_my_posts\":\"评论我的主题时\",\"replies_to_my_comments\":\"回复我的回复时\",\"comments\":\"评论数\",\"forgot_password\":\"忘记密码?\",\"profile_updated\":\"更新资料\",\"please_fill_in_your_email_below_to_finish_signing_up\":\"请填写你的电子邮件完成注册.\",\"invite\":\"邀请\",\"uninvite\":\"未激活\",\"make_admin\":\"设置为管理员\",\"unadmin\":\"取消管理资格\",\"delete_user\":\"删除用户\",\"are_you_sure_you_want_to_delete\":\"你确定要删除用户吗 \",\"reset_password\":\"重置密码\",\"password_reset_link_sent\":\"密码重置链接已发送\",\"name\":\"名字\",\"posts\":\"帖子数\",\"comments_\":\"评论数\",\"karma\":\"Karma\",\"is_invited\":\"邀请用户?\",\"is_admin\":\"管理员?\",\"delete\":\"删除\",\"member_since\":\"加入至今\",\"edit_profile\":\"修改个人资料\",\"sign_in\":\"登录\",\"sign_in_\":\"登录!\",\"sign_up_\":\"注册!\",\"dont_have_an_account\":\"还没有帐号?\",\"already_have_an_account\":\"已有帐号?\",\"sign_up\":\"注册\",\"please_fill_in_all_fields\":\"请填写完整\",\"invite_\":\"邀请 \",\"left\":\" restante\",\"invite_none_left\":\"Invite (none left)\",\"all\":\"全部\",\"invited\":\"邀请\",\"uninvited\":\"未被邀请\",\"filter_by\":\"过滤\",\"sort_by\":\"排序\"});\nTAPi18n._registerServerTranslator(\"zh-CN\", namespace);\n"]}