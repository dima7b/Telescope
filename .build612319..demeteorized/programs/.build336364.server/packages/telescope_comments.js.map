{"version":3,"sources":["telescope:comments/lib/comments.js","telescope:comments/lib/methods.js","telescope:comments/lib/callbacks.js","telescope:comments/lib/views.js","telescope:comments/lib/parameters.js","telescope:comments/lib/helpers.js","telescope:comments/lib/routes.js","telescope:comments/lib/server/publications.js","telescope:comments//Applications/MAMP/websites/stewardsof/packages/telescope-comments/i18n/ar.i18n.json","telescope:comments//Applications/MAMP/websites/stewardsof/packages/telescope-comments/i18n/bg.i18n.json","telescope:comments//Applications/MAMP/websites/stewardsof/packages/telescope-comments/i18n/de.i18n.json","telescope:comments//Applications/MAMP/websites/stewardsof/packages/telescope-comments/i18n/el.i18n.json","telescope:comments//Applications/MAMP/websites/stewardsof/packages/telescope-comments/i18n/en.i18n.json","telescope:comments//Applications/MAMP/websites/stewardsof/packages/telescope-comments/i18n/es.i18n.json","telescope:comments//Applications/MAMP/websites/stewardsof/packages/telescope-comments/i18n/fr.i18n.json","telescope:comments//Applications/MAMP/websites/stewardsof/packages/telescope-comments/i18n/it.i18n.json","telescope:comments//Applications/MAMP/websites/stewardsof/packages/telescope-comments/i18n/nl.i18n.json","telescope:comments//Applications/MAMP/websites/stewardsof/packages/telescope-comments/i18n/pl.i18n.json","telescope:comments//Applications/MAMP/websites/stewardsof/packages/telescope-comments/i18n/pt-BR.i18n.json","telescope:comments//Applications/MAMP/websites/stewardsof/packages/telescope-comments/i18n/ro.i18n.json","telescope:comments//Applications/MAMP/websites/stewardsof/packages/telescope-comments/i18n/ru.i18n.json","telescope:comments//Applications/MAMP/websites/stewardsof/packages/telescope-comments/i18n/sv.i18n.json","telescope:comments//Applications/MAMP/websites/stewardsof/packages/telescope-comments/i18n/tr.i18n.json","telescope:comments//Applications/MAMP/websites/stewardsof/packages/telescope-comments/i18n/vi.i18n.json","telescope:comments//Applications/MAMP/websites/stewardsof/packages/telescope-comments/i18n/zh-CN.i18n.json"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,G;AACA,qC;AACA,sB;AACA,G;AACA,4C;;AAEA,G;AACA,kB;AACA,uB;AACA,G;AACA,oC;AACA,K;AACA,M;AACA,I;AACA,Q;AACA,iB;AACA,kB;AACA,I;AACA,K;AACA,oD;AACA,I;AACA,oB;AACA,iB;AACA,oC;AACA,a;AACA,oC;AACA,mB;AACA,e;AACA,mC;AACA,K;AACA,I;AACA,K;AACA,8D;AACA,I;AACA,sB;AACA,iB;AACA,oC;AACA,a;AACA,oC;AACA,mB;AACA,e;AACA,mC;AACA,K;AACA,I;AACA,K;AACA,qC;AACA,I;AACA,c;AACA,e;AACA,kB;AACA,I;AACA,K;AACA,+G;AACA,I;AACA,a;AACA,e;AACA,kB;AACA,I;AACA,K;AACA,+B;AACA,I;AACA,S;AACA,iB;AACA,c;AACA,oC;AACA,e;AACA,a;AACA,K;AACA,I;AACA,K;AACA,wC;AACA,I;AACA,a;AACA,iB;AACA,kB;AACA,I;AACA,K;AACA,4D;AACA,I;AACA,c;AACA,iB;AACA,kB;AACA,kB;AACA,I;AACA,K;AACA,wD;AACA,I;AACA,U;AACA,iB;AACA,kB;AACA,kB;AACA,I;AACA,K;AACA,kD;AACA,I;AACA,Y;AACA,iB;AACA,kB;AACA,I;AACA,K;AACA,8C;AACA,I;AACA,a;AACA,mB;AACA,kB;AACA,I;AACA,K;AACA,oD;AACA,I;AACA,c;AACA,iB;AACA,kB;AACA,I;AACA,K;AACA,gD;AACA,I;AACA,e;AACA,mB;AACA,kB;AACA,I;AACA,K;AACA,6B;AACA,I;AACA,W;AACA,iB;AACA,kB;AACA,I;AACA,K;AACA,2F;AACA,I;AACA,a;AACA,kB;AACA,kB;AACA,I;AACA,K;AACA,oB;AACA,I;AACA,W;AACA,iB;AACA,mB;AACA,oC;AACA,a;AACA,oG;AACA,e;AACA,mC;AACA,K;AACA,I;AACA,K;AACA,8B;AACA,I;AACA,W;AACA,iB;AACA,kB;AACA,I;AACA,K;AACA,yF;AACA,I;AACA,c;AACA,kB;AACA,kB;AACA,G;AACA,G;;AAEA,mC;AACA,uC;;AAEA,gB;AACA,oD;AACA,mD;AACA,G;;;;;;;;;;;;;;;;;;;;ACxKA,iG;AACA,iG;AACA,iG;;AAEA,sC;;AAEA,qE;;AAEA,4E;;AAEA,+B;AACA,oB;AACA,gE;;AAEA,gF;;AAEA,2B;AACA,0B;AACA,yB;AACA,e;AACA,iB;AACA,iB;AACA,a;AACA,4C;AACA,I;;AAEA,iD;;AAEA,+E;;AAEA,wE;AACA,8D;;AAEA,gF;;AAEA,yC;;AAEA,+E;;AAEA,wE;AACA,wF;AACA,oF;;AAEA,iB;AACA,E;;AAEA,yD;;AAEA,+E;;AAEA,uE;;AAEA,4E;;AAEA,uC;;AAEA,+E;;AAEA,gF;;AAEA,kF;AACA,qC;AACA,E;;AAEA,iG;AACA,iG;AACA,iG;;AAEA,gB;AACA,mC;;AAEA,uG;AACA,4C;;AAEA,2B;AACA,a;AACA,W;;AAEA,2B;AACA,sB;;AAEA,6B;AACA,8C;AACA,iD;;AAEA,8E;;AAEA,kC;AACA,0C;AACA,6F;;AAEA,qF;;AAEA,0B;;AAEA,qE;AACA,mF;;AAEA,oE;AACA,kD;AACA,4I;;AAEA,K;;AAEA,kF;;AAEA,4B;AACA,a;;AAEA,kC;AACA,kD;;AAEA,oC;AACA,gD;AACA,iH;AACA,O;;AAEA,O;;AAEA,4D;AACA,0B;AACA,gC;AACA,K;;AAEA,oC;AACA,I;;AAEA,+C;;AAEA,uG;AACA,qD;AACA,6B;;AAEA,6B;AACA,8C;AACA,iD;;AAEA,8E;;AAEA,+B;AACA,kD;AACA,gF;AACA,K;;AAEA,iE;AACA,oD;AACA,2C;AACA,kD;AACA,sD;;AAEA,sC;AACA,yD;AACA,mH;AACA,S;;AAEA,S;AACA,O;;AAEA,gD;AACA,I;;AAEA,2C;;AAEA,6B;AACA,I;AACA,8C;AACA,6B;;AAEA,sC;;AAEA,kE;AACA,oC;AACA,mC;AACA,4C;AACA,S;;AAEA,qE;AACA,kD;AACA,8C;AACA,S;;AAEA,6D;AACA,iF;AACA,2C;AACA,gD;AACA,wB;AACA,4B;AACA,uB;AACA,U;;AAEA,U;;AAEA,mF;;AAEA,K;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;;ACrMA,sD;AACA,sD;AACA,sD;;AAEA,+C;AACA,gD;AACA,4D;AACA,G;;AAEA,qE;AACA,mD;AACA,+D;AACA,wC;AACA,kF;AACA,G;AACA,G;;AAEA,G;AACA,mB;AACA,G;AACA,qE;AACA,2B;AACA,iE;AACA,G;AACA,G;;AAEA,sD;AACA,sD;AACA,sD;;AAEA,2C;;AAEA,8B;;AAEA,4B;AACA,sC;AACA,6C;AACA,K;;AAEA,gB;AACA,gC;AACA,kC;AACA,8C;AACA,oC;AACA,K;;AAEA,iB;AACA,C;AACA,sE;;AAEA,qC;;AAEA,2D;;AAEA,mB;AACA,yD;;AAEA,iB;AACA,C;AACA,gE;;;;;;;;;;;;;;;;;;AC3DA,G;AACA,yE;AACA,4B;AACA,G;AACA,oB;;AAEA,G;AACA,iC;AACA,kD;AACA,0H;AACA,G;AACA,wD;AACA,0C;AACA,E;;AAEA,8E;AACA,iC;AACA,Y;AACA,a;AACA,G;AACA,E;;AAEA,qD;AACA,U;AACA,iC;AACA,wD;AACA,I;AACA,G;;AAEA,qD;AACA,U;AACA,iC;AACA,mC;AACA,I;AACA,G;;;;;;;;;;;;;;;;;;AClCA,G;AACA,kD;AACA,gE;AACA,wB;AACA,G;AACA,0C;;AAEA,wE;AACA,0B;AACA,E;AACA,qB;;AAEA,uB;;AAEA,kG;AACA,8C;;AAEA,+F;AACA,uF;;AAEA,mD;AACA,wD;AACA,iG;;AAEA,wF;AACA,yC;AACA,iE;;AAEA,mG;AACA,yG;AACA,wC;AACA,G;;AAEA,6B;;AAEA,oB;AACA,E;;;;;;;;;;;;;;;;;;ACpCA,kB;AACA,kB;AACA,kB;;AAEA,G;AACA,6B;AACA,0B;AACA,G;AACA,oD;AACA,8F;AACA,0E;AACA,uD;AACA,E;AACA,gF;;AAEA,mB;AACA,mB;AACA,mB;;AAEA,G;AACA,8B;AACA,0B;AACA,G;AACA,6C;AACA,kD;AACA,a;AACA,8B;AACA,U;AACA,0B;AACA,G;AACA,E;AACA,sF;;;;;;;;;;;;;;;;;;AC/BA,+B;;AAEA,0B;;AAEA,oD;AACA,sB;AACA,Y;AACA,mF;AACA,uE;AACA,qE;AACA,M;AACA,I;AACA,oB;AACA,Y;AACA,gD;AACA,M;AACA,I;AACA,8B;AACA,iC;AACA,I;AACA,kB;AACA,G;;AAEA,6B;;AAEA,kB;;AAEA,kC;AACA,yB;AACA,8B;AACA,0C;AACA,+B;AACA,mC;AACA,K;AACA,K;;AAEA,iB;;AAEA,uC;AACA,yB;AACA,6B;AACA,0C;AACA,+B;AACA,mC;AACA,K;AACA,K;;AAEA,G;;;;;;;;;;;;;;;;;;;AC/CA,qC;;;AAGA,6B;;AAEA,gD;AACA,sC;AACA,kD;AACA,sE;AACA,E;AACA,oE;AACA,uF;AACA,Y;AACA,e;AACA,gD;AACA,M;AACA,G;AACA,G;;AAEA,2B;;AAEA,gE;;AAEA,2B;;AAEA,sC;AACA,sD;AACA,iC;AACA,kH;AACA,oD;AACA,sF;AACA,G;AACA,Y;AACA,G;;AAEA,kD;;AAEA,mD;;AAEA,2B;;AAEA,sC;AACA,8C;AACA,wD;AACA,G;AACA,Y;AACA,G;;AAEA,+F;;AAEA,oD;;AAEA,2B;AACA,E;AACA,mB;;AAEA,sC;;AAEA,8C;;AAEA,oB;AACA,mC;;AAEA,+C;AACA,mB;AACA,kC;AACA,O;;AAEA,+F;AACA,I;AACA,K;;AAEA,G;;AAEA,Y;;AAEA,G;;;;;;;;;;;;;;;;;;AC5EA,6B;AACA,6B;AACA,0B;;AAEA,gC;AACA,yD;AACA,C;AACA,qD;AACA,+G;AACA,sD;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,mZ;AACA,mD;;;;;;;;;;;;;;;;;;;ACnBA,6B;AACA,6B;AACA,0B;;AAEA,gC;AACA,yD;AACA,C;AACA,0D;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,4a;AACA,mD;;;;;;;;;;;;;;;;;;;ACjBA,6B;AACA,6B;AACA,0B;;AAEA,gC;AACA,yD;AACA,C;AACA,qD;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,ya;AACA,mD;;;;;;;;;;;;;;;;;;;ACjBA,6B;AACA,6B;AACA,0B;;AAEA,gC;AACA,yD;AACA,C;AACA,qD;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,ga;AACA,mD;;;;;;;;;;;;;;;;;;;ACjBA,6B;AACA,6B;AACA,0B;;AAEA,gC;AACA,yD;AACA,C;AACA,gD;AACA,kB;AACA,ia;AACA,gD;AACA,mD;;;;;;;;;;;;;;;;;;;ACXA,6B;AACA,6B;AACA,0B;;AAEA,gC;AACA,yD;AACA,C;AACA,8D;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,gf;AACA,mD;;;;;;;;;;;;;;;;;;;ACjBA,6B;AACA,6B;AACA,0B;;AAEA,gC;AACA,yD;AACA,C;AACA,+D;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,qf;AACA,mD;;;;;;;;;;;;;;;;;;;ACjBA,6B;AACA,6B;AACA,0B;;AAEA,gC;AACA,yD;AACA,C;AACA,uD;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,ya;AACA,mD;;;;;;;;;;;;;;;;;;;ACjBA,6B;AACA,6B;AACA,0B;;AAEA,gC;AACA,yD;AACA,C;AACA,uD;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,4c;AACA,mD;;;;;;;;;;;;;;;;;;;ACjBA,6B;AACA,6B;AACA,0B;;AAEA,gC;AACA,yD;AACA,C;AACA,oD;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,+Y;AACA,mD;;;;;;;;;;;;;;;;;;;ACjBA,6B;AACA,6B;AACA,0B;;AAEA,gC;AACA,yD;AACA,C;AACA,iF;AACA,kD;AACA,qC;AACA,C;;AAEA,6D;AACA,gD;AACA,C;;AAEA,ge;AACA,sD;;;;;;;;;;;;;;;;;;;ACjBA,6B;AACA,6B;AACA,0B;;AAEA,gC;AACA,yD;AACA,C;AACA,sD;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,se;AACA,mD;;;;;;;;;;;;;;;;;;;ACjBA,6B;AACA,6B;AACA,0B;;AAEA,gC;AACA,yD;AACA,C;AACA,sD;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,ka;AACA,mD;;;;;;;;;;;;;;;;;;;ACjBA,6B;AACA,6B;AACA,0B;;AAEA,gC;AACA,yD;AACA,C;AACA,sD;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,wd;AACA,mD;;;;;;;;;;;;;;;;;;;ACjBA,6B;AACA,6B;AACA,0B;;AAEA,gC;AACA,yD;AACA,C;AACA,qD;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,0W;AACA,mD;;;;;;;;;;;;;;;;;;;ACjBA,6B;AACA,6B;AACA,0B;;AAEA,gC;AACA,yD;AACA,C;AACA,4D;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,kY;AACA,mD;;;;;;;;;;;;;;;;;;;ACjBA,6B;AACA,6B;AACA,0B;;AAEA,gC;AACA,yD;AACA,C;AACA,4D;AACA,kD;AACA,qC;AACA,C;;AAEA,6D;AACA,gD;AACA,C;;AAEA,yS;AACA,sD","file":"/packages/telescope_comments.js","sourcesContent":["/**\n * The global namespace for Comments.\n * @namespace Comments\n */\nComments = new Mongo.Collection(\"comments\");\n\n/**\n * Comments schema\n * @type {SimpleSchema}\n */\nComments.schema = new SimpleSchema({\n  /**\n    ID\n  */\n  _id: {\n    type: String,\n    optional: true\n  },\n  /**\n    The `_id` of the parent comment, if there is one\n  */\n  parentCommentId: {\n    type: String,\n    // regEx: SimpleSchema.RegEx.Id,\n    max: 500,\n    editableBy: [\"member\", \"admin\"],\n    optional: true,\n    autoform: {\n      omit: true // never show this\n    }\n  },\n  /**\n    The `_id` of the top-level parent comment, if there is one\n  */\n  topLevelCommentId: {\n    type: String,\n    // regEx: SimpleSchema.RegEx.Id,\n    max: 500,\n    editableBy: [\"member\", \"admin\"],\n    optional: true,\n    autoform: {\n      omit: true // never show this\n    }\n  },\n  /**\n    The timestamp of comment creation\n  */\n  createdAt: {\n    type: Date,\n    optional: true\n  },\n  /**\n    The timestamp of the comment being posted. For now, comments are always created and posted at the same time\n  */\n  postedAt: {\n    type: Date,\n    optional: true\n  },\n  /**\n    The comment body (Markdown)\n  */\n  body: {\n    type: String,\n    max: 3000,\n    editableBy: [\"member\", \"admin\"],\n    autoform: {\n      rows: 5\n    }\n  },\n  /**\n    The HTML version of the comment body\n  */\n  htmlBody: {\n    type: String,\n    optional: true\n  },\n  /**\n    The comment's base score (doesn't factor in comment age)\n  */\n  baseScore: {\n    type: Number,\n    decimal: true,\n    optional: true\n  },\n  /**\n    The comment's current score (factors in comment age)\n  */\n  score: {\n    type: Number,\n    decimal: true,\n    optional: true\n  },\n  /**\n    The number of upvotes the comment has received\n  */\n  upvotes: {\n    type: Number,\n    optional: true\n  },\n  /**\n    An array containing the `_id`s of upvoters\n  */\n  upvoters: {\n    type: [String],\n    optional: true\n  },\n  /**\n    The number of downvotes the comment has received\n  */\n  downvotes: {\n    type: Number,\n    optional: true\n  },\n  /**\n    An array containing the `_id`s of downvoters\n  */\n  downvoters: {\n    type: [String],\n    optional: true\n  },\n  /**\n    The comment author's name\n  */\n  author: {\n    type: String,\n    optional: true\n  },\n  /**\n    Whether the comment is inactive. Inactive comments' scores gets recalculated less often\n  */\n  inactive: {\n    type: Boolean,\n    optional: true\n  },\n  /**\n    The post's `_id`\n  */\n  postId: {\n    type: String,\n    optional: true,\n    // regEx: SimpleSchema.RegEx.Id,\n    max: 500,\n    editableBy: [\"member\", \"admin\"], // TODO: should users be able to set postId, but not modify it?\n    autoform: {\n      omit: true // never show this\n    }\n  },\n  /**\n    The comment author's `_id`\n  */\n  userId: {\n    type: String,\n    optional: true\n  },\n  /**\n    Whether the comment is deleted. Delete comments' content doesn't appear on the site. \n  */\n  isDeleted: {\n    type: Boolean,\n    optional: true\n  }\n});\n\nComments.schema.internationalize();\nComments.attachSchema(Comments.schema);\n\nComments.allow({\n  update: _.partial(Telescope.allowCheck, Comments),\n  remove: _.partial(Telescope.allowCheck, Comments)\n});\n","\n// ------------------------------------------------------------------------------------------- //\n// -------------------------------------- Submit Comment ------------------------------------- //\n// ------------------------------------------------------------------------------------------- //\n\nComments.submit = function (comment) {\n\n  var userId = comment.userId; // at this stage, a userId is expected\n\n  // ------------------------------ Checks ------------------------------ //\n\n  // Don't allow empty comments\n  if (!comment.body)\n    throw new Meteor.Error(704,i18n.t('your_comment_is_empty'));\n\n  // ------------------------------ Properties ------------------------------ //\n\n  var defaultProperties = {\n    createdAt: new Date(),\n    postedAt: new Date(),\n    upvotes: 0,\n    downvotes: 0,\n    baseScore: 0,\n    score: 0,\n    author: Users.getDisplayNameById(userId)\n  };\n\n  comment = _.extend(defaultProperties, comment);\n\n  // ------------------------------ Callbacks ------------------------------ //\n\n  // run all post submit server callbacks on comment object successively\n  comment = Telescope.callbacks.run(\"commentSubmit\", comment);\n\n  // -------------------------------- Insert -------------------------------- //\n\n  comment._id = Comments.insert(comment);\n\n  // --------------------- Server-side Async Callbacks --------------------- //\n\n  // run all post submit server callbacks on comment object successively\n  // note: query for comment to get fresh document with collection-hooks effects applied\n  Telescope.callbacks.runAsync(\"commentSubmitAsync\", Comments.findOne(comment._id));\n\n  return comment;\n};\n\nComments.edit = function (commentId, modifier, comment) {\n\n  // ------------------------------ Callbacks ------------------------------ //\n\n  modifier = Telescope.callbacks.run(\"commentEdit\", modifier, comment);\n\n  // ------------------------------ Update ------------------------------ //\n\n  Comments.update(commentId, modifier);\n\n  // ------------------------------ Callbacks ------------------------------ //\n\n  Telescope.callbacks.runAsync(\"commentEditAsync\", Comments.findOne(commentId));\n\n  // ------------------------------ After Update ------------------------------ //\n  return Comments.findOne(commentId);\n};\n\n// ------------------------------------------------------------------------------------------- //\n// ----------------------------------------- Methods ----------------------------------------- //\n// ------------------------------------------------------------------------------------------- //\n\nMeteor.methods({\n  submitComment: function(comment){\n\n    // checking might be redundant because SimpleSchema already enforces the schema, but you never know\n    check(comment, Comments.simpleSchema());\n\n    // required properties:\n    // postId\n    // body\n\n    // optional properties:\n    // parentCommentId\n\n    var user = Meteor.user(),\n        hasAdminRights = Users.is.admin(user),\n        schema = Comments.simpleSchema()._schema;\n\n    // ------------------------------ Checks ------------------------------ //\n\n    // check that user can comment\n    if (!user || !Users.can.comment(user))\n      throw new Meteor.Error(i18n.t('you_need_to_login_or_be_invited_to_post_new_comments'));\n\n    // ------------------------------ Rate Limiting ------------------------------ //\n\n    if (!hasAdminRights) {\n\n      var timeSinceLastComment = Users.timeSinceLast(user, Comments),\n          commentInterval = Math.abs(parseInt(Settings.get('commentInterval',15)));\n\n      // check that user waits more than 15 seconds between comments\n      if((timeSinceLastComment < commentInterval))\n        throw new Meteor.Error(704, i18n.t('please_wait')+(commentInterval-timeSinceLastComment)+i18n.t('seconds_before_commenting_again'));\n\n    }\n\n    // ------------------------------ Properties ------------------------------ //\n\n    // admin-only properties\n    // userId\n\n    // clear restricted properties\n    _.keys(comment).forEach(function (fieldName) {\n\n      var field = schema[fieldName];\n      if (!Users.can.submitField(user, field)) {\n        throw new Meteor.Error(\"disallowed_property\", i18n.t('disallowed_property_detected') + \": \" + fieldName);\n      }\n\n    });\n\n    // if no userId has been set, default to current user id\n    if (!comment.userId) {\n      comment.userId = user._id;\n    }\n\n    return Comments.submit(comment);\n  },\n\n  editComment: function (modifier, commentId) {\n\n    // checking might be redundant because SimpleSchema already enforces the schema, but you never know\n    check(modifier, {$set: Comments.simpleSchema()});\n    check(commentId, String);\n\n    var user = Meteor.user(),\n        comment = Comments.findOne(commentId),\n        schema = Comments.simpleSchema()._schema;\n\n    // ------------------------------ Checks ------------------------------ //\n\n    // check that user can edit\n    if (!user || !Users.can.edit(user, comment)) {\n      throw new Meteor.Error(601, i18n.t('sorry_you_cannot_edit_this_comment'));\n    }\n\n    // go over each field and throw an error if it's not editable\n    // loop over each operation ($set, $unset, etc.)\n    _.each(modifier, function (operation) {\n      // loop over each property being operated on\n      _.keys(operation).forEach(function (fieldName) {\n\n        var field = schema[fieldName];\n        if (!Users.can.editField(user, field, comment)) {\n          throw new Meteor.Error(\"disallowed_property\", i18n.t('disallowed_property_detected') + \": \" + fieldName);\n        }\n\n      });\n    });\n\n    Comments.edit(commentId, modifier, comment);\n  },\n\n  deleteCommentById: function (commentId) {\n\n    check(commentId, String);\n    \n    var comment = Comments.findOne(commentId);\n    var user = Meteor.user();\n\n    if(Users.can.edit(user, comment)){\n\n      // decrement post comment count and remove user ID from post\n      Posts.update(comment.postId, {\n        $inc:   {commentCount: -1},\n        $pull:  {commenters: comment.userId}\n      });\n\n      // decrement user comment count and remove comment ID from user\n      Meteor.users.update({_id: comment.userId}, {\n        $inc:   {'telescope.commentCount': -1}\n      });\n\n      // note: should we also decrease user's comment karma ?\n      // We don't actually delete the comment to avoid losing all child comments.\n      // Instead, we give it a special flag\n      Comments.update({_id: commentId}, {$set: {\n        body: 'Deleted',\n        htmlBody: 'Deleted',\n        isDeleted: true\n      }});\n\n    }else{\n\n      Messages.flash(\"You don't have permission to delete this comment.\", \"error\");\n\n    }\n  }\n});\n","//////////////////////////////////////////////////////\n// Collection Hooks                                 //\n//////////////////////////////////////////////////////\n\nComments.before.insert(function (userId, doc) {\n  // note: only actually sanitizes on the server\n  doc.htmlBody = Telescope.utils.sanitize(marked(doc.body));\n});\n\nComments.before.update(function (userId, doc, fieldNames, modifier) {\n  // if body is being modified, update htmlBody too\n  if (Meteor.isServer && modifier.$set && modifier.$set.body) {\n    modifier.$set = modifier.$set || {};\n    modifier.$set.htmlBody = Telescope.utils.sanitize(marked(modifier.$set.body));\n  }\n});\n\n/**\n * Disallow $rename\n */\nComments.before.update(function (userId, doc, fieldNames, modifier) {\n  if (!!modifier.$rename) {\n    throw new Meteor.Error(\"illegal $rename operator detected!\");\n  }\n});\n\n//////////////////////////////////////////////////////\n// Callbacks                                        //\n//////////////////////////////////////////////////////\n\nfunction afterCommentOperations (comment) {\n\n  var userId = comment.userId;\n\n  // increment comment count\n  Meteor.users.update({_id: userId}, {\n    $inc:       {'telescope.commentCount': 1}\n  });\n\n  // update post\n  Posts.update(comment.postId, {\n    $inc:       {commentCount: 1},\n    $set:       {lastCommentedAt: new Date()},\n    $addToSet:  {commenters: userId}\n  });\n\n  return comment;\n}\nTelescope.callbacks.add(\"commentSubmitAsync\", afterCommentOperations);\n\nfunction upvoteOwnComment (comment) {\n\n  var commentAuthor = Meteor.users.findOne(comment.userId);\n\n  // upvote comment\n  Telescope.upvoteItem(Comments, comment, commentAuthor);\n\n  return comment;\n}\nTelescope.callbacks.add(\"commentSubmitAsync\", upvoteOwnComment);","/**\n * Comment views are filters used for subscribing to and viewing comments\n * @namespace Comments.views\n */\nComments.views = {};\n\n/**\n * Add a module to a comment view\n * @param {string} viewName - The name of the view\n * @param {function} [viewFunction] - The function used to calculate query terms. Takes terms and baseParameters arguments\n */\nComments.views.add = function (viewName, viewFunction) {\n  Comments.views[viewName] = viewFunction;\n};\n\n// will be common to all other view unless specific properties are overwritten\nComments.views.baseParameters = {\n  options: {\n    limit: 10\n  }\n};\n\nComments.views.add(\"postComments\", function (terms) {\n  return {\n    find: {postId: terms.postId},\n    options: {limit: 0, sort: {score: -1, postedAt: -1}}\n  };\n});\n\nComments.views.add(\"userComments\", function (terms) {\n  return {\n    find: {userId: terms.userId},\n    options: {sort: {postedAt: -1}}\n  };\n});","/**\n * Gives an object containing the appropriate find\n * and options arguments for the subscriptions's Comments.find()\n * @param {Object} terms\n */\nComments.getSubParams = function (terms) {\n\n  // add this to ensure all post publications pass audit-arguments-check\n  check(terms, Match.Any);\n  \n  var maxLimit = 200;\n\n  // console.log(terms)\n\n  // note: using jquery's extend() with \"deep\" parameter set to true instead of shallow _.extend()\n  // see: http://api.jquery.com/jQuery.extend/\n\n  // initialize parameters by extending baseParameters object, to avoid passing it by reference\n  var parameters = Telescope.utils.deepExtend(true, {}, Comments.views.baseParameters);\n\n  // get query parameters according to current view\n  if (typeof Comments.views[terms.view] !== 'undefined')\n    parameters = Telescope.utils.deepExtend(true, parameters, Comments.views[terms.view](terms));\n\n  // if a limit was provided with the terms, add it too (note: limit=0 means \"no limit\")\n  if (typeof terms.limit !== 'undefined')\n    _.extend(parameters.options, {limit: parseInt(terms.limit)});\n\n  // limit to \"maxLimit\" posts at most when limit is undefined, equal to 0, or superior to maxLimit\n  if(!parameters.options.limit || parameters.options.limit == 0 || parameters.options.limit > maxLimit) {\n    parameters.options.limit = maxLimit;\n  }\n\n  // console.log(parameters);\n\n  return parameters;\n};","//////////////////\n// Link Helpers //\n//////////////////\n\n/**\n * Get URL of a comment page.\n * @param {Object} comment\n */\nComments.getPageUrl = function(comment, isAbsolute){\n  var isAbsolute = typeof isAbsolute === \"undefined\" ? false : isAbsolute; // default to false\n  var prefix = isAbsolute ? Telescope.utils.getSiteUrl().slice(0,-1) : \"\";\n  return prefix + Router.path(\"comment_page\", comment);\n};\nComments.helpers({getPageUrl: function () {return Comments.getPageUrl(this);}});\n\n///////////////////\n// Other Helpers //\n///////////////////\n\n/**\n * Get a comment author's name\n * @param {Object} comment\n */\nComments.getAuthorName = function (comment) {\n  var user = Meteor.users.findOne(comment.userId);\n  if (user) {\n    return user.getUserName();\n  } else {\n    return comment.author;\n  }\n};\nComments.helpers({getAuthorName: function () {return Comments.getAuthorName(this);}});","// Controller for comment pages\n\nComments.controllers = {};\n\nComments.controllers.page = RouteController.extend({\n  waitOn: function() {\n    return [\n      Telescope.subsManager.subscribe('singleCommentAndChildren', this.params._id),\n      Telescope.subsManager.subscribe('commentUsers', this.params._id),\n      Telescope.subsManager.subscribe('commentPost', this.params._id)\n    ];\n  },\n  data: function() {\n    return {\n      comment: Comments.findOne(this.params._id)\n    };\n  },\n  onAfterAction: function () {\n    window.queueComments = false;\n  },\n  fastRender: true\n});\n\nMeteor.startup( function () {\n\n  // Comment Reply\n\n  Router.route('/comments/:_id', {\n    name: 'comment_page',\n    template: 'comment_reply',\n    controller: Comments.controllers.page,\n    onAfterAction: function() {\n      window.queueComments = false;\n    }\n  });\n\n  // Comment Edit\n\n  Router.route('/comments/:_id/edit', {\n    name: 'comment_edit',\n    template: 'comment_edit',\n    controller: Comments.controllers.page,\n    onAfterAction: function() {\n      window.queueComments = false;\n    }\n  });\n\n});\n","Comments._ensureIndex({\"postId\": 1});\n\n\n// Publish a list of comments\n\nMeteor.publish('commentsList', function(terms) {\n  if(Users.can.viewById(this.userId)){\n    var parameters = Comments.getSubParams(terms);\n    var comments = Comments.find(parameters.find, parameters.options);\n  \n    // if there are comments, find out which posts were commented on\n    var commentedPostIds = comments.count() ? _.pluck(comments.fetch(), 'postId') : [];\n    return [\n      comments,\n      Posts.find({_id: {$in: commentedPostIds}})\n    ];\n  }\n});\n\n// Publish a single comment\n\nMeteor.publish('singleCommentAndChildren', function(commentId) {\n\n  check(commentId, String);\n\n  if(Users.can.viewById(this.userId)){\n    // publish both current comment and child comments\n    var commentIds = [commentId];\n    var childCommentIds = _.pluck(Comments.find({parentCommentId: commentId}, {fields: {_id: 1}}).fetch(), '_id');\n    commentIds = commentIds.concat(childCommentIds);\n    return Comments.find({_id: {$in: commentIds}}, {sort: {score: -1, postedAt: -1}});\n  }\n  return [];\n});\n\n// Publish the post related to the current comment\n\nMeteor.publish('commentPost', function(commentId) {\n\n  check(commentId, String);\n\n  if(Users.can.viewById(this.userId)){\n    var comment = Comments.findOne(commentId);\n    return Posts.find({_id: comment && comment.postId});\n  }\n  return [];\n});\n\n// Publish author of the current comment, and author of the post related to the current comment\n\nMeteor.publish('commentUsers', function(commentId) {\n\n  check(commentId, String);\n  \n  var userIds = [];\n\n  if(Users.can.viewById(this.userId)){\n\n    var comment = Comments.findOne(commentId);\n\n    if (!!comment) {\n      userIds.push(comment.userId);\n\n      var post = Posts.findOne(comment.postId);\n      if (!!post) {\n        userIds.push(post.userId);\n      }\n\n      return Meteor.users.find({_id: {$in: userIds}}, {fields: Users.pubsub.publicProperties});\n    \n    }\n\n  }\n\n  return [];\n\n});","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"ar\"] = [\"Arabic\",\"العربية\"];\nTAPi18n._enable({\"helper_name\":\"_\",\"supported_languages\":null,\"i18n_files_route\":\"/tap-i18n\",\"cdn_path\":null});\nTAPi18n.languages_names[\"en\"] = [\"English\",\"English\"];\nif(_.isUndefined(TAPi18n.translations[\"ar\"])) {\n  TAPi18n.translations[\"ar\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"ar\"][namespace])) {\n  TAPi18n.translations[\"ar\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"ar\"][namespace], {\"sorry_you_cannot_edit_this_comment\":\"ﻻ يمكنك تعديل هذا التعليق\",\"your_comment_has_been_deleted\":\"قد تم حذف تعليقك\",\"comment_\":\"تعليق\",\"delete_comment\":\"احذف التعليق\",\"add_comment\":\"اضف تعليق\",\"upvote\":\"صوت مع\",\"downvote\":\"صوت ضد\",\"link\":\"رابط\",\"edit\":\"تعديل\",\"reply\":\"رد\",\"no_comments\":\"ﻻ يوجد تعليق\",\"please_sign_in_to_reply\":\"يتوجب الدخول ﻻضافة رد\"});\nTAPi18n._registerServerTranslator(\"ar\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"bg\"] = [\"Bulgarian\",\"Български\"];\nif(_.isUndefined(TAPi18n.translations[\"bg\"])) {\n  TAPi18n.translations[\"bg\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"bg\"][namespace])) {\n  TAPi18n.translations[\"bg\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"bg\"][namespace], {\"sorry_you_cannot_edit_this_comment\":\"Съжаляваме, неможете да променяте този коментар.\",\"your_comment_has_been_deleted\":\"Вашият коментар беше изтрит.\",\"comment_\":\"Коментар\",\"delete_comment\":\"Изтриване на коментар\",\"add_comment\":\"Добави коментар\",\"upvote\":\"Харесвам\",\"downvote\":\"Не харесвам\",\"link\":\"връзка\",\"edit\":\"редактирай\",\"reply\":\"отговор\",\"no_comments\":\"Няма коментари.\"});\nTAPi18n._registerServerTranslator(\"bg\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"de\"] = [\"German\",\"Deutsch\"];\nif(_.isUndefined(TAPi18n.translations[\"de\"])) {\n  TAPi18n.translations[\"de\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"de\"][namespace])) {\n  TAPi18n.translations[\"de\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"de\"][namespace], {\"sorry_you_cannot_edit_this_comment\":\"Sorry, Du kannst diesen Kommentar nicht bearbeiten.\",\"your_comment_has_been_deleted\":\"Dein Kommentar wurde gelöscht.\",\"comment_\":\"Kommentieren\",\"delete_comment\":\"Kommentar löschen\",\"add_comment\":\"Kommentar hinzufügen\",\"upvote\":\"+1\",\"downvote\":\"-1\",\"link\":\"link\",\"edit\":\"bearbeiten\",\"reply\":\"antworten\",\"no_comments\":\"Keine Kommentare.\"});\nTAPi18n._registerServerTranslator(\"de\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"el\"] = [\"Greek\",\"Ελληνικά\"];\nif(_.isUndefined(TAPi18n.translations[\"el\"])) {\n  TAPi18n.translations[\"el\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"el\"][namespace])) {\n  TAPi18n.translations[\"el\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"el\"][namespace], {\"sorry_you_cannot_edit_this_comment\":\"Συγγνώμη, δεν μπορείς να επεξεργαστείς συτό το σχόλιο.\",\"your_comment_has_been_deleted\":\"Το σχόλιο σας έχει διαγραφεί.\",\"comment_\":\"Σχόλιο\",\"delete_comment\":\"Διαγραφή σχολίου\",\"add_comment\":\"Νέο σχόλιο\",\"upvote\":\"Υπερ\",\"downvote\":\"Κατά\",\"link\":\"Σύνδεσμος\",\"edit\":\"Επεξεργασία\",\"reply\":\"Απάντηση\",\"no_comments\":\"Κανένα σχόλιο.\"});\nTAPi18n._registerServerTranslator(\"el\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n// integrate the fallback language translations \ntranslations = {};\ntranslations[namespace] = {\"sorry_you_cannot_edit_this_comment\":\"Sorry, you cannot edit this comment.\",\"your_comment_has_been_deleted\":\"Your comment has been deleted.\",\"comment_\":\"Comment\",\"delete_comment\":\"Delete Comment\",\"add_comment\":\"Add Comment\",\"upvote\":\"upvote\",\"downvote\":\"downvote\",\"link\":\"link\",\"edit\":\"Edit\",\"reply\":\"Reply\",\"no_comments\":\"No comments.\",\"please_sign_in_to_reply\":\"Please sign in to reply\"};\nTAPi18n._loadLangFileObject(\"en\", translations);\nTAPi18n._registerServerTranslator(\"en\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"es\"] = [\"Spanish (Spain)\",\"Español\"];\nif(_.isUndefined(TAPi18n.translations[\"es\"])) {\n  TAPi18n.translations[\"es\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"es\"][namespace])) {\n  TAPi18n.translations[\"es\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"es\"][namespace], {\"sorry_you_cannot_edit_this_comment\":\"Lo sentimos, no puedes editar este comentario.\",\"your_comment_has_been_deleted\":\"Tu comentario ha sido borrado.\",\"comment_\":\"Comentar\",\"delete_comment\":\"Borrar comentario\",\"add_comment\":\"Agregar Comentario\",\"upvote\":\"Voto Positivo\",\"downvote\":\"Voto Negativo\",\"link\":\"link\",\"edit\":\"Editar\",\"reply\":\"Responder\",\"no_comments\":\"No hay comentarios.\",\"please_sign_in_to_reply\":\"Por favor, inicia sesión primero.\"});\nTAPi18n._registerServerTranslator(\"es\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"fr\"] = [\"French (France)\",\"Français\"];\nif(_.isUndefined(TAPi18n.translations[\"fr\"])) {\n  TAPi18n.translations[\"fr\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"fr\"][namespace])) {\n  TAPi18n.translations[\"fr\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"fr\"][namespace], {\"sorry_you_cannot_edit_this_comment\":\"Désolé, vous ne pouvez pas modifier ce commentaire.\",\"your_comment_has_been_deleted\":\"Votre commentaire a été supprimé.\",\"comment_\":\"Commentaire\",\"delete_comment\":\"Supprimer le commentaire\",\"add_comment\":\"Ajouter un commentaire\",\"upvote\":\"upvote\",\"downvote\":\"downvote\",\"link\":\"lien\",\"edit\":\"Modifier\",\"reply\":\"Répondre\",\"no_comments\":\"Aucun commentaire.\",\"please_sign_in_to_reply\":\"Connectez-vous pour répondre\"});\nTAPi18n._registerServerTranslator(\"fr\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"it\"] = [\"Italian\",\"Italiano\"];\nif(_.isUndefined(TAPi18n.translations[\"it\"])) {\n  TAPi18n.translations[\"it\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"it\"][namespace])) {\n  TAPi18n.translations[\"it\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"it\"][namespace], {\"sorry_you_cannot_edit_this_comment\":\"Ci spiace, non puoi modificare questo commento.\",\"your_comment_has_been_deleted\":\"Il tuo commento è stato rimosso.\",\"comment_\":\"Commenta\",\"delete_comment\":\"Elimina Commento\",\"add_comment\":\"Aggiungi Commento\",\"upvote\":\"promuovi\",\"downvote\":\"sconsiglia\",\"link\":\"link\",\"edit\":\"Modifica\",\"reply\":\"Rispondi\",\"no_comments\":\"Nessun commento.\"});\nTAPi18n._registerServerTranslator(\"it\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"nl\"] = [\"Dutch\",\"Nederlands\"];\nif(_.isUndefined(TAPi18n.translations[\"nl\"])) {\n  TAPi18n.translations[\"nl\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"nl\"][namespace])) {\n  TAPi18n.translations[\"nl\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"nl\"][namespace], {\"sorry_you_cannot_edit_this_comment\":\"Sorry, je kan deze reactie niet bewerken.\",\"your_comment_has_been_deleted\":\"Jouw reactie is verwijderd.\",\"comment_\":\"Reactie\",\"delete_comment\":\"Verwijder reactie\",\"add_comment\":\"Reactie toevoegen\",\"upvote\":\"omhoog\",\"downvote\":\"omlaag\",\"link\":\"link\",\"edit\":\"Bewerk\",\"reply\":\"Reageer\",\"no_comments\":\"Geen reacties.\",\"please_sign_in_to_reply\":\"Login om te kunnen reageren.\"});\nTAPi18n._registerServerTranslator(\"nl\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"pl\"] = [\"Polish\",\"Polski\"];\nif(_.isUndefined(TAPi18n.translations[\"pl\"])) {\n  TAPi18n.translations[\"pl\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"pl\"][namespace])) {\n  TAPi18n.translations[\"pl\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"pl\"][namespace], {\"sorry_you_cannot_edit_this_comment\":\"Nie możesz edytować tego komentarza.\",\"your_comment_has_been_deleted\":\"Twój komentarz został usunięty.\",\"comment_\":\"Komentuj\",\"delete_comment\":\"Usuń komentarz\",\"add_comment\":\"Dodaj komentarz\",\"upvote\":\"plus\",\"downvote\":\"minus\",\"link\":\"link\",\"edit\":\"Edytuj\",\"reply\":\"Odpowiedz\",\"no_comments\":\"Brak komentarzy.\"});\nTAPi18n._registerServerTranslator(\"pl\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"pt-BR\"] = [\"Portuguese (Brazil)\",\"Português do Brasil\"];\nif(_.isUndefined(TAPi18n.translations[\"pt-BR\"])) {\n  TAPi18n.translations[\"pt-BR\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"pt-BR\"][namespace])) {\n  TAPi18n.translations[\"pt-BR\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"pt-BR\"][namespace], {\"sorry_you_cannot_edit_this_comment\":\"Desculpe, você não pode editar este comentário.\",\"your_comment_has_been_deleted\":\"Seu comentário foi deletado.\",\"comment_\":\"Comentário\",\"delete_comment\":\"Deletar Comentário\",\"add_comment\":\"Adicionar Comentário\",\"upvote\":\"+\",\"downvote\":\"-\",\"link\":\"link\",\"edit\":\"Editar\",\"reply\":\"Responder\",\"no_comments\":\"Sem comentários.\",\"please_sign_in_to_reply\":\"Por favor, registre-se para responder\"});\nTAPi18n._registerServerTranslator(\"pt-BR\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"ro\"] = [\"Romanian\",\"Română\"];\nif(_.isUndefined(TAPi18n.translations[\"ro\"])) {\n  TAPi18n.translations[\"ro\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"ro\"][namespace])) {\n  TAPi18n.translations[\"ro\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"ro\"][namespace], {\"sorry_you_cannot_edit_this_comment\":\"Ne pare rău, nu poți edita aceast comentariu.\",\"your_comment_has_been_deleted\":\"Comentariul tău a fost șters\",\"comment_\":\"Comentare\",\"delete_comment\":\"Sterge comentariu\",\"add_comment\":\"Adaugă comentariu\",\"upvote\":\"+1\",\"downvote\":\"-1\",\"link\":\"link\",\"edit\":\"editează\",\"reply\":\"răspunde\",\"no_comments\":\"Nici un comentariu.\",\"please_sign_in_to_reply\":\"Este nevoie să te autentifici pentru a răspunde\"});\nTAPi18n._registerServerTranslator(\"ro\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"ru\"] = [\"Russian\",\"Русский\"];\nif(_.isUndefined(TAPi18n.translations[\"ru\"])) {\n  TAPi18n.translations[\"ru\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"ru\"][namespace])) {\n  TAPi18n.translations[\"ru\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"ru\"][namespace], {\"sorry_you_cannot_edit_this_comment\":\"Извините, вы не можете редактировать это.\",\"your_comment_has_been_deleted\":\"Ваш комментарий удалили.\",\"comment_\":\"Комментарий\",\"delete_comment\":\"Удалить комментарий\",\"add_comment\":\"Добавить комментарий\",\"upvote\":\"за\",\"downvote\":\"против\",\"link\":\"ссылка\",\"edit\":\"Редактировать\",\"reply\":\"Ответить\",\"no_comments\":\"Без комментариев.\"});\nTAPi18n._registerServerTranslator(\"ru\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"sv\"] = [\"Swedish\",\"Svenska\"];\nif(_.isUndefined(TAPi18n.translations[\"sv\"])) {\n  TAPi18n.translations[\"sv\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"sv\"][namespace])) {\n  TAPi18n.translations[\"sv\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"sv\"][namespace], {\"sorry_you_cannot_edit_this_comment\":\"Tyvärr, du kan inte redigera denna kommentar.\",\"your_comment_has_been_deleted\":\"Din kommentar har tagits bort.\",\"comment_\":\"Kommentar\",\"delete_comment\":\"Ta Bort Kommentar\",\"add_comment\":\"Kommentera\",\"upvote\":\"upprösta\",\"downvote\":\"nedrösta\",\"link\":\"länk\",\"edit\":\"Redigera\",\"reply\":\"Svara\",\"no_comments\":\"Inga kommentarer.\",\"please_sign_in_to_reply\":\"Vänligen logga in för att svara\"});\nTAPi18n._registerServerTranslator(\"sv\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"tr\"] = [\"Turkish\",\"Türkçe\"];\nif(_.isUndefined(TAPi18n.translations[\"tr\"])) {\n  TAPi18n.translations[\"tr\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"tr\"][namespace])) {\n  TAPi18n.translations[\"tr\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"tr\"][namespace], {\"sorry_you_cannot_edit_this_comment\":\"Özür dileriz, bu yorumu değiştiremezsiniz\",\"your_comment_has_been_deleted\":\"Yorumunuz silindi\",\"comment_\":\"Yorum\",\"delete_comment\":\"Yorumu Sil\",\"add_comment\":\"Yorum Ekle\",\"upvote\":\"1\",\"downvote\":\"-1\",\"link\":\"link\",\"edit\":\"Düzenle\",\"reply\":\"Cevap\",\"no_comments\":\"Yorum yok\"});\nTAPi18n._registerServerTranslator(\"tr\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"vi\"] = [\"Vietnamese\",\"Tiếng Việt\"];\nif(_.isUndefined(TAPi18n.translations[\"vi\"])) {\n  TAPi18n.translations[\"vi\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"vi\"][namespace])) {\n  TAPi18n.translations[\"vi\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"vi\"][namespace], {\"sorry_you_cannot_edit_this_comment\":\"Xin lỗi, bạn không thể sửa ý kiến này.\",\"your_comment_has_been_deleted\":\"Ý kiến của bạn đã được xóa.\",\"comment_\":\"Ý kiến\",\"delete_comment\":\"Xóa ý kiến\",\"add_comment\":\"Thêm ý kiến\",\"upvote\":\"Thích\",\"downvote\":\"Không thích\",\"link\":\"link\",\"edit\":\"Sửa\",\"reply\":\"Trả lời\",\"no_comments\":\"Không ý kiến.\"});\nTAPi18n._registerServerTranslator(\"vi\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"zh-CN\"] = [\"Chinese (China)\",\"中文\"];\nif(_.isUndefined(TAPi18n.translations[\"zh-CN\"])) {\n  TAPi18n.translations[\"zh-CN\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"zh-CN\"][namespace])) {\n  TAPi18n.translations[\"zh-CN\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"zh-CN\"][namespace], {\"sorry_you_cannot_edit_this_comment\":\"对不起你不能编辑这个评论\",\"your_comment_has_been_deleted\":\"你的评论已经被删除\",\"comment_\":\"评论\",\"delete_comment\":\"删除评论\",\"add_comment\":\"评论\",\"upvote\":\"顶\",\"downvote\":\"踩\",\"link\":\"链接\",\"edit\":\"编辑\",\"reply\":\"回复\",\"no_comments\":\"暂时没有评论\"});\nTAPi18n._registerServerTranslator(\"zh-CN\", namespace);\n"]}